{
    "368": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.name , COUNT(T2.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T2.name ORDER BY T1.compatible_since_year DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.name , COUNT(T2.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T2.name ORDER BY T1.compatible_since_year DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Firefox",
                    "Internet Explorer",
                    "Opera",
                    "Safari"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "A bar chart showing the number of accelerators for each browser in the descending order of compatible year."
        ]
    },
    "369": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T2.name , COUNT(T2.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T2.name ORDER BY T1.compatible_since_year DESC",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T2.name , COUNT(T2.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T2.name ORDER BY T1.compatible_since_year DESC"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Firefox",
                    "Internet Explorer",
                    "Opera",
                    "Safari"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "A pie chart showing the proportion of the number of accelerators for each browser."
        ]
    },
    "370": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T3.name , COUNT(T3.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T3.name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T3.name , COUNT(T3.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T3.name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "CACHEbox",
                    "CProxy",
                    "Fasterfox",
                    "Nitro",
                    "fasTun"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    3,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "A pie chart showing the proportion of the number of browsers for each accelerator."
        ]
    },
    "371": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T3.name , COUNT(T3.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T3.name ORDER BY T1.compatible_since_year DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T3.name , COUNT(T3.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T3.name ORDER BY T1.compatible_since_year DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "CACHEbox",
                    "CProxy",
                    "Fasterfox",
                    "Nitro",
                    "fasTun"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    3,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "A pie chart showing the number of browsers for each accelerator in the descending order of compatible year."
        ]
    },
    "372": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Operating_system",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Android, Linux, Mac and Windows devices",
                    "Any",
                    "Any system with Java 1.6 VM available",
                    "Appliance (Linux)",
                    "Unix (Linux, *BSD, Mac OS X, others)",
                    "Unix (Linux, *BSD, Mac OS X, others), Windows",
                    "Windows",
                    "Windows (2000 onwards)",
                    "Windows, Linux, Mac OS, Symbian, WindowsMobile",
                    "Windows, Mac",
                    "Windows, Mac and Mobile devices",
                    "Windows, Mac, Linux and Mobile devices",
                    "Windows, Mac, Mobile devices",
                    "Windows, except NT and 95"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    3,
                    1,
                    1,
                    3,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of web accelerators used for each Operating system. ",
            "Draw a bar chart of operating system versus the total number "
        ]
    },
    "374": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "CACHEbox",
                    "CProxy",
                    "Fasterfox"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a pie chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?",
            "Return a pie on what are the ids and names of the web accelerators that are compatible with two or more browsers?",
            "What are the ids and names of the web accelerators that are compatible with two or more browsers. "
        ]
    },
    "375": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "CACHEbox",
                    "CProxy",
                    "Fasterfox"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?",
            "Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?",
            "What are the ids and names of the web accelerators that are compatible with two or more browsers. Visualize by bar chart."
        ]
    },
    "733": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "COUNT(Template_Type_Code)",
            "x_data": [
                [
                    "AD",
                    "BK",
                    "CV",
                    "PP",
                    "PPT"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    2,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Template_Type_Code"
        },
        "nl_queries": [
            "Return a bar chart showing the number of templates for each template type code.",
            "How many templates for each template type code? Show a bar chart.",
            "Show the number of template type code from each template type code"
        ]
    },
    "734": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Template_ID , Version_Number FROM Templates GROUP BY Template_Type_Code",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Template_ID , Version_Number FROM Templates GROUP BY Template_Type_Code"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Template_ID",
            "y_name": "Version_Number",
            "x_data": [
                [
                    14,
                    19,
                    21
                ],
                [
                    4,
                    8,
                    9,
                    11,
                    20,
                    23
                ],
                [
                    15,
                    16
                ],
                [
                    0,
                    1,
                    18,
                    22,
                    24,
                    25
                ],
                [
                    6,
                    7,
                    10
                ]
            ],
            "y_data": [
                [
                    7,
                    7,
                    9
                ],
                [
                    4,
                    3,
                    2,
                    6,
                    6,
                    2
                ],
                [
                    9,
                    5
                ],
                [
                    5,
                    9,
                    5,
                    0,
                    8,
                    5
                ],
                [
                    2,
                    8,
                    1
                ]
            ],
            "classify": [
                "AD",
                "BK",
                "CV",
                "PP",
                "PPT"
            ],
            "describe": "GROUP BY Template_Type_Code"
        },
        "nl_queries": [
            "Show me the relationship between version number and template id for all templates in a scatter chart.",
            "What is the relationship between version number and template id for each template? Visualize by a scatter chart.",
            "Show the relation between template id and version_number for each Template_Type_Code using a scatter chart"
        ]
    },
    "735": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Template_Type_Code",
            "y_name": "COUNT(Template_Type_Code)",
            "x_data": [
                [
                    "AD",
                    "BK",
                    "CV",
                    "PP",
                    "PPT"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    2,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Template_Type_Code"
        },
        "nl_queries": [
            "How many templates for each template type code? Show me a pie chart.",
            "Tell me the number of templates for each template type code with a pie chart.",
            "I want to know the proportion of the number of templates for each template type code."
        ]
    },
    "742": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Template_ID , Version_Number FROM Templates",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Template_ID , Version_Number FROM Templates"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Template_ID",
            "y_name": "Version_Number",
            "x_data": [
                [
                    0,
                    1,
                    4,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    14,
                    15,
                    16,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25
                ]
            ],
            "y_data": [
                [
                    5,
                    9,
                    4,
                    2,
                    8,
                    3,
                    2,
                    1,
                    6,
                    7,
                    9,
                    5,
                    5,
                    7,
                    6,
                    9,
                    0,
                    2,
                    8,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between version number and template id in a scatter chart.",
            "What is the relationship between version number and template id? Give me a scatter chart.",
            "Scatter plot to show template id on x axis and version_number on y axis."
        ]
    },
    "743": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AD",
                    "BK",
                    "PP",
                    "PPT"
                ]
            ],
            "y_data": [
                [
                    3,
                    5,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all template type codes and the number of documents using each type in a pie chart.",
            "Show all template type codes and the number of documents using each type. ",
            "Give the proportion of what are the different template type codes, and how many documents use each type?",
            "Show me the proportion on what are the different template type codes, and how many documents use each type?",
            "What are the different template type codes, and how many documents use each type. Plot them as pie chart."
        ]
    },
    "744": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AD",
                    "BK",
                    "PP",
                    "PPT"
                ]
            ],
            "y_data": [
                [
                    3,
                    5,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all template type codes and the number of documents using each type with a bar chart.",
            "Show all template type codes and the number of documents using each type. Visualize by bar chart.",
            "what are the different template type codes, and how many documents use each type?",
            "A bar chart about what are the different template type codes, and how many documents use each type?",
            "What are the different template type codes, and how many documents use each type. Plot them as bar chart."
        ]
    },
    "745": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Template_ID , count(*) FROM Documents GROUP BY template_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Template_ID , count(*) FROM Documents GROUP BY template_id"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Template_ID",
            "y_name": "count(*)",
            "x_data": [
                [
                    1,
                    4,
                    6,
                    7,
                    8,
                    10,
                    11,
                    14,
                    20,
                    21,
                    22,
                    25
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all template ids and number of documents using each template with a scatter chart.",
            "Show all template ids and number of documents using each template. Show the correlation.",
            "Visualize a scatter chart on what are all different template ids used for documents, and how many times were each of them used?",
            "Scatter chart. what are all different template ids used for documents, and how many times were each of them used?",
            "What are all different template ids used for documents, and how many times were each of them used. Visualize by scatter chart.",
            "Scatter plot to show template id on x axis and the total number on y axis."
        ]
    },
    "746": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Document_ID , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Document_ID , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Document_ID",
            "y_name": "count(*)",
            "x_data": [
                [
                    3,
                    80,
                    2394,
                    3830,
                    33930,
                    50123,
                    651512,
                    3540024,
                    16514113,
                    385906526
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    1,
                    1,
                    1,
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all document ids and the number of paragraphs in each document. Order by document id in a scatter chart",
            "Show all document ids and the number of paragraphs in each document. Order by document id. Visualize by scatter chart.",
            "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id with a scatter chart.",
            "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id. Plot them as scatter chart."
        ]
    },
    "747": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Paragraph_Text",
            "y_name": "COUNT(Paragraph_Text)",
            "x_data": [
                [
                    "Korea",
                    "Ukraine"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Paragraph_Text"
        },
        "nl_queries": [
            "What are the paragraph texts for the document with the name 'Customer reviews', and count them by a pie chart",
            "Show all paragraph texts for the document \"Customer reviews\", and count them by a pie chart",
            "A pie chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?",
            "What are the number of the paragraph texts for the document with the name 'Customer reviews'?"
        ]
    },
    "748": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Paragraph_Text",
            "y_name": "COUNT(Paragraph_Text)",
            "x_data": [
                [
                    "Korea",
                    "Ukraine"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Paragraph_Text"
        },
        "nl_queries": [
            "A bar chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?",
            "What are the paragraph texts for the document with the name 'Customer reviews', and count them by a bar chart",
            "Show all paragraph texts for the document \"Customer reviews\", and count them by a bar chart",
            "What are the number of the paragraph texts for the document with the name 'Customer reviews'?"
        ]
    },
    "749": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.Document_ID , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.Document_ID , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Document_ID",
            "y_name": "count(*)",
            "x_data": [
                [
                    3,
                    80,
                    2394,
                    3830,
                    33930,
                    50123,
                    651512,
                    3540024,
                    16514113,
                    385906526
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    1,
                    1,
                    1,
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between document id and the number of paragraphs in each document with a scatter chart.",
            "What is the relationship between document id and the number of paragraphs in each document? Visualize with a scatter chart."
        ]
    },
    "751": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Summer Show",
                    "Welcome to NY",
                    "Customer reviews",
                    "Do not panic",
                    "How Google people work",
                    "Learning French",
                    "How to write a CV",
                    "Palm reading",
                    "A history of Arts",
                    "About Korea"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    1,
                    1,
                    1,
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the number of documents for each document name in a bar chart.",
            "What is the number of documents for each document name? Return a bar chart."
        ]
    },
    "752": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AD",
                    "BK",
                    "CV",
                    "PP",
                    "PPT"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    2,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all template type codes and number of templates for each in a pie chart.",
            "Show all template type codes and number of templates for each. Visualize by pie chart.",
            "Return a pie chart on what are the different template type codes, and how many templates correspond to each?",
            "Show me the proportion on what are the different template type codes, and how many templates correspond to each?",
            "What are the different template type codes, and how many templates correspond to each. ",
            "I want to know the proportion of toatal number of templates for each template type code."
        ]
    },
    "753": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AD",
                    "BK",
                    "CV",
                    "PP",
                    "PPT"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    2,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all template type codes and number of templates for each with a bar chart.",
            "Show all template type codes and number of templates for each. Visualize by bar chart.",
            "Return a bar chart on what are the different template type codes, and how many templates correspond to each?",
            "Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?",
            "What are the different template type codes, and how many templates correspond to each. Plot them as bar chart.",
            "Show me the total number by template type code in a histogram"
        ]
    },
    "754": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "COUNT(Template_Type_Code)",
            "x_data": [
                [
                    "AD",
                    "BK",
                    "CV",
                    "PP",
                    "PPT"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Template_Type_Code"
        },
        "nl_queries": [
            "How many templates with version number later than 5 for each template type code? Show me a bar chart.",
            "Return a bar chart showing the number of templates with a version number greater than 5 for each template type code."
        ]
    },
    "755": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Template_Type_Code",
            "y_name": "COUNT(Template_Type_Code)",
            "x_data": [
                [
                    "AD",
                    "BK",
                    "CV",
                    "PP",
                    "PPT"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Template_Type_Code"
        },
        "nl_queries": [
            "How many templates with version number later than 5 for each template type code? Give me a pie chart.",
            "Return a pie chart showing the number of templates with a version number greater than 5 for each template type code."
        ]
    },
    "763": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Description",
            "y_name": "COUNT(Document_Description)",
            "x_data": [
                [
                    "b",
                    "f",
                    "h",
                    "k",
                    "n",
                    "r",
                    "",
                    "w",
                    "y",
                    "z"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    2,
                    4,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Document_Description"
        },
        "nl_queries": [
            "List the number of documents for each document description in a bar chart.",
            "How many documents for each document description? Show me a bar chart.",
            "Bar chart x axis document description y axis how many document description"
        ]
    },
    "992": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id",
                "binning": "BIN date_to BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id BIN date_to BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    2,
                    18
                ]
            ],
            "classify": [],
            "describe": "BIN date_to BY MONTH"
        },
        "nl_queries": [
            "Show the number of customer address history in each month and bin date to by month interval with a bar chart."
        ]
    },
    "993": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id",
                "binning": "BIN date_to BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id BIN date_to BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    4,
                    2,
                    3,
                    2,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN date_to BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of customer address history in each day and bin date to by weekday with a bar chart."
        ]
    },
    "994": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id",
                "binning": "BIN date_from BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id BIN date_from BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    5,
                    0,
                    2,
                    3,
                    6,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of customer address history in each day and bin date from by weekday with a bar chart."
        ]
    },
    "995": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.customer_name , COUNT(T2.customer_name) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T2.customer_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.customer_name , COUNT(T2.customer_name) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T2.customer_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_name",
            "y_name": "COUNT(customer_name)",
            "x_data": [
                [
                    "Buford",
                    "Cecelia",
                    "Cheyenne",
                    "Lela",
                    "Madaline",
                    "Melissa",
                    "Orion",
                    "Shany",
                    "Sterling"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    2,
                    1,
                    4,
                    3,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY customer_name"
        },
        "nl_queries": [
            "Show the number of addrens history for each customer in a bar chart."
        ]
    },
    "996": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T3.city , COUNT(T3.city) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T3.city",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T3.city , COUNT(T3.city) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T3.city"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "city",
            "y_name": "COUNT(city)",
            "x_data": [
                [
                    "Agustinstad",
                    "East Rickey",
                    "Edgardoberg",
                    "Estaland",
                    "Gibsonfurt",
                    "Gilbertmouth",
                    "Gleasonland",
                    "Hertafurt",
                    "Lake Floyd",
                    "Lake Katheryn",
                    "North Lisandroport",
                    "Port Montytown"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    3,
                    1,
                    3,
                    2,
                    1,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY city"
        },
        "nl_queries": [
            "Show the number of customer address history for each city in a bar chart."
        ]
    },
    "997": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id",
                "binning": "BIN date_from BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id BIN date_from BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    4,
                    4,
                    1,
                    1,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY YEAR"
        },
        "nl_queries": [
            "Show the number of customer address history in each year and bin date from by year interval with a line chart."
        ]
    },
    "998": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY date_to",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY date_to"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "2018-02-25",
                    "2018-02-27",
                    "2018-03-07",
                    "2018-03-08",
                    "2018-03-09",
                    "2018-03-10",
                    "2018-03-11",
                    "2018-03-13",
                    "2018-03-14",
                    "2018-03-16",
                    "2018-03-18",
                    "2018-03-19",
                    "2018-03-20",
                    "2018-03-22",
                    "2018-03-24"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3,
                    1,
                    2,
                    1,
                    3,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_to"
        },
        "nl_queries": [
            "Show the number of customer address history in each day and group by date to with a line chart."
        ]
    },
    "999": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "Apple",
                    "gucci",
                    "jcrew"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Show the proportion of the product name for each product using a pie chart",
            "I want to know the proportion of products for each product name."
        ]
    },
    "1000": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "Apple",
                    "gucci",
                    "jcrew"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Compare the frequency of product names using a bar chart.",
            "Show me a bar chart with the product name and their frequency.",
            "Bar chart x axis product name y axis how many product name"
        ]
    },
    "1001": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.product_name , SUM(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.product_name , SUM(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "SUM(sum(T2.order_quantity))",
            "x_data": [
                [
                    "Apple",
                    "gucci",
                    "jcrew"
                ]
            ],
            "y_data": [
                [
                    23,
                    21,
                    40
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Show the product name and total order quantity for each product in a bar chart.",
            "Show the product name and total order quantity for each product. Plot them as bar chart."
        ]
    },
    "1002": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.product_name , AVG(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.product_name , AVG(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "AVG(sum(T2.order_quantity))",
            "x_data": [
                [
                    "Apple",
                    "gucci",
                    "jcrew"
                ]
            ],
            "y_data": [
                [
                    7.666666666666667,
                    7,
                    10
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Show the product name and total order quantity for each product with a bar chart.",
            "Show the product name and total order quantity for each product. Show bar chart."
        ]
    },
    "1003": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.product_name , SUM(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.product_name , SUM(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_name",
            "y_name": "SUM(sum(T2.order_quantity))",
            "x_data": [
                [
                    "Apple",
                    "gucci",
                    "jcrew"
                ]
            ],
            "y_data": [
                [
                    23,
                    21,
                    40
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Show the product name and total order quantity for each product with a pie chart.",
            "Show the product name and total order quantity for each product. Visualize by pie chart."
        ]
    },
    "1004": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT payment_method_code , COUNT(payment_method_code) FROM customers GROUP BY payment_method_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT payment_method_code , COUNT(payment_method_code) FROM customers GROUP BY payment_method_code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "pie",
            "x_name": "payment_method_code",
            "y_name": "COUNT(payment_method_code)",
            "x_data": [
                [
                    "Credit Card",
                    "Direct Debit"
                ]
            ],
            "y_data": [
                [
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY payment_method_code"
        },
        "nl_queries": [
            "Show the proportion of the number of customers for each payment method code in a pie chart.",
            "Create a pie chart showing the number of payment method code across payment method code."
        ]
    },
    "1005": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT payment_method_code , COUNT(payment_method_code) FROM customers GROUP BY payment_method_code ORDER BY customer_number DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT payment_method_code , COUNT(payment_method_code) FROM customers GROUP BY payment_method_code ORDER BY customer_number DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "payment_method_code",
            "y_name": "COUNT(payment_method_code)",
            "x_data": [
                [
                    "Credit Card",
                    "Direct Debit"
                ]
            ],
            "y_data": [
                [
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY payment_method_code"
        },
        "nl_queries": [
            "Show the proportion of the number of customers for each payment method code in a bar chart."
        ]
    },
    "1006": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_type_code",
            "y_name": "COUNT(product_type_code)",
            "x_data": [
                [
                    "Clothes",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    5,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_type_code"
        },
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart."
        ]
    },
    "1007": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_type_code",
            "y_name": "COUNT(product_type_code)",
            "x_data": [
                [
                    "Clothes",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    5,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_type_code"
        },
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product type code in a pie chart."
        ]
    },
    "1008": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "Apple",
                    "Sony",
                    "gucci",
                    "jcrew"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product name in a pie chart."
        ]
    },
    "1009": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "Apple",
                    "Sony",
                    "gucci",
                    "jcrew"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart."
        ]
    },
    "1010": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "state_province_county",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Colorado",
                    "District of Columbia",
                    "Idaho",
                    "Illinois",
                    "Kentucky",
                    "Louisiana",
                    "Maine",
                    "Maryland",
                    "Nevada",
                    "Oklahoma",
                    "Oregon",
                    "SouthDakota",
                    "Vermont",
                    "Virginia"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show each state and the number of addresses in each state by a bar chart.",
            "Show each state and the number of addresses in each state. Show bar chart.",
            "Show the total number from each state province county"
        ]
    },
    "1151": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT role_code , count(*) FROM users GROUP BY role_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT role_code , count(*) FROM users GROUP BY role_code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "document_management",
        "vis_obj": {
            "chart": "pie",
            "x_name": "role_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "DBA",
                    "PROJ-MGR"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of users in each role. Visualize by pie chart.",
            "Visualize a pie chart with what are the different role codes for users, and how many users have each?",
            "Pie. what are the different role codes for users, and how many users have each?",
            "What are the different role codes for users, and how many users have each. ",
            "I want to know the proportion of the total number for each role code."
        ]
    },
    "1152": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT role_code , count(*) FROM users GROUP BY role_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT role_code , count(*) FROM users GROUP BY role_code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "document_management",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "DBA",
                    "PROJ-MGR"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of users in each role. Plot them as bar chart.",
            "what are the different role codes for users, and how many users have each?",
            "Return a histogram on what are the different role codes for users, and how many users have each?",
            "What are the different role codes for users, and how many users have each. Show bar chart.",
            "Bar graph to show the total number from different role code"
        ]
    },
    "1153": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT document_name , access_count FROM documents ORDER BY document_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT document_name , access_count FROM documents ORDER BY document_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "document_management",
        "vis_obj": {
            "chart": "bar",
            "x_name": "document_name",
            "y_name": "access_count",
            "x_data": [
                [
                    "David CV",
                    "Fall Sails",
                    "How to cook pasta",
                    "Humanity: a fact",
                    "Joe CV",
                    "John CV",
                    "Learning Database",
                    "Learning English",
                    "Learning Japanese",
                    "Life about Claude Monet",
                    "Relationships between History and Arts",
                    "Research about Art history",
                    "Spring Sails",
                    "Summer Sails",
                    "Winter Sails"
                ]
            ],
            "y_data": [
                [
                    6345,
                    7509,
                    2045,
                    3479,
                    2294,
                    5924,
                    3769,
                    1864,
                    2910,
                    1219,
                    9948,
                    8208,
                    3289,
                    6661,
                    8623
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and access counts of all documents, in alphabetic order of the document name. Show bar chart.",
            "Return a bar chart on what are the names of all the documents, as well as the access counts of each, ordered alphabetically?",
            "Give me a histogram for what are the names of all the documents, as well as the access counts of each, ordered alphabetically?",
            "What are the names of all the documents, as well as the access counts of each, ordered alphabetically. "
        ]
    },
    "1154": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT name , COUNT(name) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )"
        },
        "chart": "Pie",
        "hardness": "Extra Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Houston",
                    "Kacey",
                    "Lyric"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "List the number of the treatments for each dog of the rarest breed in a pie chart.",
            "How many treatments for each dog of the rarest breed? Give me a pie chart."
        ]
    },
    "1155": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Houston",
                    "Kacey",
                    "Lyric"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "List the number of the treatments for each dog of the rarest breed in a bar chart.",
            "How many treatments for each dog of the rarest breed? Give me a bar chart."
        ]
    },
    "1156": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "2018-03-08",
                    "2018-03-14",
                    "2018-03-15",
                    "2018-03-19"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_treatment"
        },
        "nl_queries": [
            "List the number of dogs of the rarest breed in each treatment day with a bar chart that groups by date of treatment.",
            "How many dogs of the rarest breed in each treatment day? Draw a bar chart that groups by date of treatment."
        ]
    },
    "1157": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "8th",
                    "9th",
                    "10th",
                    "11th",
                    "12th",
                    "13th",
                    "14th",
                    "15th",
                    "16th",
                    "17th",
                    "18th",
                    "19th"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    2,
                    0,
                    0,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_treatment BY TIME"
        },
        "nl_queries": [
            "List the number of dogs of the rarest breed in each treatment day with a line chart that groups by date of treatment.",
            "How many dogs of the rarest breed in each treatment day? Draw a line chart that groups by date of treatment."
        ]
    },
    "1158": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    1,
                    3,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_treatment BY WEEKDAY"
        },
        "nl_queries": [
            "List the number of dogs of the rarest breed in each treatment day with a bar chart that bins date of treatment by weekday.",
            "How many dogs of the rarest breed in each treatment day? Draw a bar chart that bins by date of treatment by weekday."
        ]
    },
    "1159": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 ) name",
                "binning": "BIN date_of_treatment BY DAY"
            },
            "VQL": "Visualize LINE SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 ) name BIN date_of_treatment BY DAY"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "8th",
                    "9th",
                    "10th",
                    "11th",
                    "12th",
                    "13th",
                    "14th",
                    "15th",
                    "16th",
                    "17th",
                    "18th",
                    "19th"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    3,
                    0,
                    0,
                    0,
                    1
                ],
                [
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    4,
                    0,
                    0,
                    0,
                    1
                ],
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    4,
                    0,
                    0,
                    0,
                    2
                ]
            ],
            "classify": [
                "Houston",
                "Kacey",
                "Lyric"
            ],
            "describe": "GROUP BY name, BIN date_of_treatment BY DAY"
        },
        "nl_queries": [
            "List the number of dogs of the rarest breed in each treatment day with group a line chart that bins date of treatment by day and groups by dog's name.",
            "How many dogs of the rarest breed in each treatment day? Draw a group line chart that bins date of treatment by day and groups by dog's name."
        ]
    },
    "1160": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 ) name",
                "binning": "BIN date_of_treatment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 ) name BIN date_of_treatment BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0
                ],
                [
                    1,
                    0,
                    1,
                    1,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [
                "Houston",
                "Kacey",
                "Lyric"
            ],
            "describe": "GROUP BY name, BIN date_of_treatment BY WEEKDAY"
        },
        "nl_queries": [
            "List the number of dogs of the rarest breed in each treatment day with a stacked bar chart that bins date of treatment by weekday and groups by dog's name.",
            "How many dogs of the rarest breed in each treatment day? Draw a stacked bar chart that bins date of treatment by weekday and groups by dog's name."
        ]
    },
    "1161": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "cell_number",
            "y_name": "professional_id",
            "x_data": [
                [
                    "00230569697",
                    "139-321-7313",
                    "328.842.3792",
                    "962-983-8109x3509",
                    "461-801-2600",
                    "1-185-137-1945x409"
                ]
            ],
            "y_data": [
                [
                    4,
                    6,
                    8,
                    9,
                    10,
                    14
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the id and cell phone of the professionals who operate two or more types of treatments. "
        ]
    },
    "1162": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Danny",
                    "Domenica",
                    "Karley",
                    "Monte",
                    "Ruben",
                    "Sigurd",
                    "Velva",
                    "Vernice"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "List the number of professionals in a bar chart that groups by professional's first name.",
            "Show how many professionals in a bar chart grouping by professional's first name."
        ]
    },
    "1163": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",
                "binning": "BIN date_of_treatment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id BIN date_of_treatment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    2,
                    13
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_treatment BY MONTH"
        },
        "nl_queries": [
            "List the number of treatments in each month with a bar chart.",
            "How many treatments in each month? Return a bar chart."
        ]
    },
    "1164": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",
                "binning": "BIN date_of_treatment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id BIN date_of_treatment BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    4,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_treatment BY WEEKDAY"
        },
        "nl_queries": [
            "List the number of treatments in each day with a bar chart that bins date of treatment by weekday.",
            "How many treatments in each day? Return a bar chart that bins date of treatment by weekday."
        ]
    },
    "1165": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY date_of_treatment",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY date_of_treatment"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "2018-02-26",
                    "2018-02-28",
                    "2018-03-01",
                    "2018-03-04",
                    "2018-03-08",
                    "2018-03-10",
                    "2018-03-11",
                    "2018-03-13",
                    "2018-03-14",
                    "2018-03-15",
                    "2018-03-16",
                    "2018-03-19",
                    "2018-03-23",
                    "2018-03-24"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_treatment"
        },
        "nl_queries": [
            "List the number of treatments in each day with a line chart that groups by date of treatment.",
            "How many treatments in each day? Return a line chart that groups by date of treatment."
        ]
    },
    "1166": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY first_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY first_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Danny",
                    "Domenica",
                    "Karley",
                    "Monte",
                    "Ruben",
                    "Sigurd",
                    "Velva",
                    "Vernice"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    3,
                    2,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "List the number of treatments each professional has operated with a bar chart that groups by professional's first name.",
            "How many treatments each professional has operated? Show a bar chart that groups by professional's first name."
        ]
    },
    "1167": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , age FROM Dogs WHERE abandoned_yn = 1",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "age",
            "x_data": [
                [
                    "Kacey",
                    "Lyric",
                    "Evangeline"
                ]
            ],
            "y_data": [
                [
                    6,
                    4,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the dog name and age of the dogs who have been abandoned in a bar chart.",
            "How old is each dog that was abandoned? Show in a bar chart."
        ]
    },
    "1168": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT name , weight FROM Dogs WHERE abandoned_yn = 1",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT name , weight FROM Dogs WHERE abandoned_yn = 1"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "weight",
            "x_data": [
                [
                    "Kacey",
                    "Lyric",
                    "Evangeline"
                ]
            ],
            "y_data": [
                [
                    7.57,
                    4.36,
                    4.01
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the dog name and age of the dogs who have been abandoned in a pie chart.",
            "How old is each dog that was abandoned? Show in a pie chart."
        ]
    },
    "1169": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , weight FROM Dogs WHERE abandoned_yn = 1",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "weight",
            "x_data": [
                [
                    "Kacey",
                    "Lyric",
                    "Evangeline"
                ]
            ],
            "y_data": [
                [
                    7.57,
                    4.36,
                    4.01
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the dog name and weight of the dogs who have been abandoned in a bar chart.",
            "What is the weight of each dog that was abandoned? Show in a bar chart."
        ]
    },
    "1170": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT name , age FROM Dogs WHERE abandoned_yn = 1",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT name , age FROM Dogs WHERE abandoned_yn = 1"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "age",
            "x_data": [
                [
                    "Kacey",
                    "Lyric",
                    "Evangeline"
                ]
            ],
            "y_data": [
                [
                    6,
                    4,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the dog name and weight of the dogs who have been abandoned in a pie chart.",
            "What is the weight of each dog that was abandoned? Show in a pie chart."
        ]
    },
    "1171": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT age , weight FROM Dogs WHERE abandoned_yn = 1",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT age , weight FROM Dogs WHERE abandoned_yn = 1"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "age",
            "y_name": "weight",
            "x_data": [
                [
                    6,
                    4,
                    1
                ]
            ],
            "y_data": [
                [
                    7.57,
                    4.36,
                    4.01
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between age and weight of the dogs who have been abandoned in a scatter chart.",
            "What is the relationship between age and weight of the dogs who have been abandoned? Return a scatter chart."
        ]
    },
    "1172": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT age , weight FROM Dogs WHERE abandoned_yn = 1 GROUP BY name",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT age , weight FROM Dogs WHERE abandoned_yn = 1 GROUP BY name"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "age",
            "y_name": "weight",
            "x_data": [
                [
                    1
                ],
                [
                    6
                ],
                [
                    4
                ]
            ],
            "y_data": [
                [
                    4.01
                ],
                [
                    7.57
                ],
                [
                    4.36
                ]
            ],
            "classify": [
                "Evangeline",
                "Kacey",
                "Lyric"
            ],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "Show the relationship between age and weight of the dogs who have been abandoned in a group scatter chart that groups by dog's name.",
            "What is the relationship between age and weight of the dogs who have been abandoned? Return a group scatter chart that groups by dog's name."
        ]
    },
    "1173": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT charge_type , charge_amount FROM Charges",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT charge_type , charge_amount FROM Charges"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "pie",
            "x_name": "charge_type",
            "y_name": "charge_amount",
            "x_data": [
                [
                    "Daily Accommodation",
                    "Drugs",
                    "Health Check"
                ]
            ],
            "y_data": [
                [
                    98,
                    322,
                    640
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a pie chart with how much does each charge type costs? List both charge type and amount.",
            "How much does each charge type costs? List both charge type and amount. Show a pie chart.",
            "List each charge type and its amount in a pie chart.",
            "List each charge type and its amount. Show the proportion.",
            "Give me a pie to show charge_amount from different charge type."
        ]
    },
    "1174": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT charge_type , charge_amount FROM Charges",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT charge_type , charge_amount FROM Charges"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "charge_type",
            "y_name": "charge_amount",
            "x_data": [
                [
                    "Daily Accommodation",
                    "Drugs",
                    "Health Check"
                ]
            ],
            "y_data": [
                [
                    98,
                    322,
                    640
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for how much does each charge type costs? List both charge type and amount.",
            "How much does each charge type costs? List both charge type and amount. ",
            "List each charge type and its amount in a bar chart.",
            "List each charge type and its amount. Show bar chart.",
            "Give me a bar chart for charge_amount of each charge type"
        ]
    },
    "1175": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "COUNT(role_code)",
            "x_data": [
                [
                    "Employee",
                    "Veterenarian"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY role_code"
        },
        "nl_queries": [
            "How many professionals did not operate any treatment on dogs for each role? Draw a bar chart.",
            "Give me the number of professionals who did not perform any treatment on dogs for each role in a bar chart."
        ]
    },
    "1180": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code"
        },
        "chart": "Pie",
        "hardness": "Extra Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "pie",
            "x_name": "role_code",
            "y_name": "COUNT(role_code)",
            "x_data": [
                [
                    "Employee",
                    "Veterenarian"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY role_code"
        },
        "nl_queries": [
            "Give me the number of professionals who did not perform any treatment on dogs for each role in a pie chart.",
            "How many professionals did not operate any treatment on dogs for each role? Draw a pie chart."
        ]
    },
    "1181": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs",
                "binning": "BIN date_arrived BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs BIN date_arrived BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    13,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY YEAR"
        },
        "nl_queries": [
            "How many dogs arrived in each year? Visualize with a bar chart.",
            "List the number of dogs arrived in each year with a bar chart.",
            "Show the number of date arrived from each date arrived"
        ]
    },
    "1182": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "2018-03-24",
                    "2018-03-25"
                ]
            ],
            "y_data": [
                [
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_departed"
        },
        "nl_queries": [
            "How many dogs departed in each day? Visualize with a bar chart that groups by departed date.",
            "List the number of dogs departed in each day with a bar chart that groups by departed date.",
            "Show how many date departed from each date departed"
        ]
    },
    "1183": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs",
                "binning": "BIN date_departed BY DAY"
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs BIN date_departed BY DAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "24th",
                    "25th"
                ]
            ],
            "y_data": [
                [
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": "BIN date_departed BY DAY"
        },
        "nl_queries": [
            "How many dogs departed in each day? Visualize with a bar chart that bins departed date by day interval.",
            "List the number of dogs departed in each day with a bar chart that bins departed date by day interval.",
            "Bar chart x axis date departed y axis the number of date departed"
        ]
    },
    "1184": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs",
                "binning": "BIN date_arrived BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs BIN date_arrived BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    2,
                    1,
                    4,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY WEEKDAY"
        },
        "nl_queries": [
            "How many dogs arrived in each day? Visualize with a bar chart that bins arrived date by weekday.",
            "List the number of dogs arrived in each day with a bar chart that bins arrived date by weekday.",
            "Bar graph to show the number of date arrived from different date arrived"
        ]
    },
    "1185": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs",
                "binning": "BIN date_departed BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs BIN date_departed BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": "BIN date_departed BY WEEKDAY"
        },
        "nl_queries": [
            "How many dogs departed in each day? Visualize with a bar chart that bins departed date by weekday.",
            "List the number of dogs departed in each day with a bar chart that bins departed date by weekday.",
            "Create a bar chart showing the number of date departed across date departed"
        ]
    },
    "1186": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs GROUP BY date_arrived",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_arrived , COUNT(date_arrived) FROM Dogs GROUP BY date_arrived"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2017-04-15",
                    "2017-04-20",
                    "2017-05-06",
                    "2017-06-18",
                    "2017-06-25",
                    "2017-07-25",
                    "2017-09-08",
                    "2017-10-16",
                    "2017-10-24",
                    "2017-10-25",
                    "2017-12-22",
                    "2017-12-29",
                    "2018-01-02",
                    "2018-01-17"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_arrived"
        },
        "nl_queries": [
            "How many dogs departed in each day? Visualize with a line chart that groups by departed date.",
            "List the number of dogs departed in each day with a line chart that groups by departed date.",
            "Plot date arrived by how many date arrived as a trend line"
        ]
    },
    "1187": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",
                "binning": "BIN date_arrived BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id BIN date_arrived BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    8,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY YEAR"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each year? Return a bar chart that bins arrived date by year interval.",
            "Show the number of dogs that received a treatment arrived in each year in a bar chart that bins arrived date by year interval."
        ]
    },
    "1188": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "2018-03-24",
                    "2018-03-25"
                ]
            ],
            "y_data": [
                [
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_departed"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment departed in each day? Return a bar chart.",
            "Show the number of dogs that received a treatment departed in each day in a bar chart."
        ]
    },
    "1189": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",
                "binning": "BIN date_departed BY DAY"
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id BIN date_departed BY DAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "24th",
                    "25th"
                ]
            ],
            "y_data": [
                [
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN date_departed BY DAY"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment departed in each year? Return a bar chart that bins arrived date by day interval.",
            "Show the number of dogs that received a treatment arrived in each year in a bar chart that bins arrived date by day interval."
        ]
    },
    "1190": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",
                "binning": "BIN date_arrived BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id BIN date_arrived BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    2,
                    0,
                    1,
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY WEEKDAY"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each day? Return a bar chart that bins arrived date by weekday.",
            "Show the number of dogs that received a treatment arrived in each day in a bar chart that bins arrived date by weekday."
        ]
    },
    "1191": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",
                "binning": "BIN date_departed BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id BIN date_departed BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN date_departed BY WEEKDAY"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each day? Return a bar chart that bins departed date by weekday.",
            "Show the number of dogs that received a treatment arrived in each day in a bar chart that bins departed date by weekday."
        ]
    },
    "1192": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_arrived",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_arrived"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2017-04-20",
                    "2017-05-06",
                    "2017-06-18",
                    "2017-09-08",
                    "2017-10-24",
                    "2017-12-22",
                    "2017-12-29",
                    "2018-01-02"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_arrived"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each day? Return a line chart that groups by arrived date.",
            "Show the number of dogs that received a treatment arrived in each day in a line chart that groups by arrived date."
        ]
    },
    "1197": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Cindy",
                    "Emelie",
                    "Gay",
                    "Jaclyn",
                    "Johann",
                    "Kade",
                    "Lorenz",
                    "Melisa",
                    "Nora",
                    "Orlando",
                    "Rachelle",
                    "Rolando"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's first name.",
            "How many dogs each owner has? Return a bar chart that groups by owner's first name."
        ]
    },
    "1198": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "pie",
            "x_name": "treatment_type_description",
            "y_name": "SUM(cost_of_treatment)",
            "x_data": [
                [
                    "Physical examination",
                    "Take for a Walk",
                    "Vaccination"
                ]
            ],
            "y_data": [
                [
                    2429,
                    2392,
                    2540
                ]
            ],
            "classify": [],
            "describe": "GROUP BY treatment_type_description"
        },
        "nl_queries": [
            "List the cost of each treatment and the corresponding treatment type description with a pie chart.",
            "List the cost of each treatment and the corresponding treatment type description. Visualize by pie chart.",
            "Pie chart. what are the cost and treatment type description of each treatment?",
            "Show me a pie chart for what are the cost and treatment type description of each treatment?",
            "What are the cost and treatment type description of each treatment. "
        ]
    },
    "1199": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "treatment_type_description",
            "y_name": "SUM(cost_of_treatment)",
            "x_data": [
                [
                    "Physical examination",
                    "Take for a Walk",
                    "Vaccination"
                ]
            ],
            "y_data": [
                [
                    2429,
                    2392,
                    2540
                ]
            ],
            "classify": [],
            "describe": "GROUP BY treatment_type_description"
        },
        "nl_queries": [
            "List the cost of each treatment and the corresponding treatment type description in a bar chart.",
            "List the cost of each treatment and the corresponding treatment type description. ",
            "A bar chart about what are the cost and treatment type description of each treatment?",
            "Draw a bar chart for what are the cost and treatment type description of each treatment?",
            "What are the cost and treatment type description of each treatment. "
        ]
    },
    "1200": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "treatment_type_description",
            "y_name": "AVG(cost_of_treatment)",
            "x_data": [
                [
                    "Physical examination",
                    "Take for a Walk",
                    "Vaccination"
                ]
            ],
            "y_data": [
                [
                    485.8,
                    478.4,
                    508
                ]
            ],
            "classify": [],
            "describe": "GROUP BY treatment_type_description"
        },
        "nl_queries": [
            "List the cost of each treatment and the corresponding treatment type description by a bar chart.",
            "List the cost of each treatment and the corresponding treatment type description. Show bar chart.",
            "Display a bar chart for what are the cost and treatment type description of each treatment?",
            "Visualize a bar chart for what are the cost and treatment type description of each treatment?",
            "What are the cost and treatment type description of each treatment. Show bar chart."
        ]
    },
    "1201": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT size_code , COUNT(size_code) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY size_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT size_code , COUNT(size_code) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY size_code"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "pie",
            "x_name": "size_code",
            "y_name": "COUNT(size_code)",
            "x_data": [
                [
                    "LGE",
                    "MED",
                    "SML"
                ]
            ],
            "y_data": [
                [
                    4,
                    9,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY size_code"
        },
        "nl_queries": [
            "List the number of dogs for each size code in a pie chart.",
            "How many dogs for each size code? Return a pie chart."
        ]
    },
    "1202": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT size_code , COUNT(size_code) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY size_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT size_code , COUNT(size_code) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY size_code"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "size_code",
            "y_name": "COUNT(size_code)",
            "x_data": [
                [
                    "LGE",
                    "MED",
                    "SML"
                ]
            ],
            "y_data": [
                [
                    4,
                    9,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY size_code"
        },
        "nl_queries": [
            "List the number of dogs for each size code in a bar chart.",
            "How many dogs for each size code? Return a bar chart."
        ]
    },
    "1203": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Cindy",
                    "Emelie",
                    "Gay",
                    "Jaclyn",
                    "Johann",
                    "Kade",
                    "Lorenz",
                    "Melisa",
                    "Nora",
                    "Orlando",
                    "Rachelle",
                    "Rolando"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's first name.",
            "How many dogs each owner has? Return a bar chart that groups by owner's first name."
        ]
    },
    "1204": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "last_name",
            "y_name": "COUNT(last_name)",
            "x_data": [
                [
                    "DuBuque",
                    "Feil",
                    "Fisher",
                    "Funk",
                    "Haley",
                    "Mertz",
                    "Nicolas",
                    "Price",
                    "Prohaska",
                    "Rippin",
                    "Schmitt",
                    "Stoltenberg"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY last_name"
        },
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's last name.",
            "How many dogs each owner has? Return a bar chart that groups by owner's last name."
        ]
    },
    "1248": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = \"Jaskolski\" OR family_name = \"Langosh\"",
                "binning": "BIN date_of_latest_logon BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = \"Jaskolski\" OR family_name = \"Langosh\" BIN date_of_latest_logon BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_latest_logon",
            "y_name": "COUNT(date_of_latest_logon)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_latest_logon BY WEEKDAY"
        },
        "nl_queries": [
            "What are the number of the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?",
            "Find the number of the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\".",
            "A bar chart for what are the number of the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?",
            "A bar chart for finding the number of the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\".",
            "What are the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\", and count them by a bar chart",
            "Find the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\", and count them by a bar chart"
        ]
    },
    "1249": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"",
                "binning": "BIN date_of_completion BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" BIN date_of_completion BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    1,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_completion BY MONTH"
        },
        "nl_queries": [
            "What are the number of the completion dates of all the tests that have result \"Fail\"?",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart",
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result.",
            "Return the number of the completion date for all the tests that have \"Fail\" result.",
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?"
        ]
    },
    "1250": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "2018-02-26",
                    "2018-03-02",
                    "2018-03-04",
                    "2018-03-06",
                    "2018-03-07",
                    "2018-03-22"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_completion"
        },
        "nl_queries": [
            "What are the number of the completion dates of all the tests that have result \"Fail\"?",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart",
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result.",
            "Return the number of the completion date for all the tests that have \"Fail\" result.",
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?"
        ]
    },
    "1251": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"",
                "binning": "BIN date_of_completion BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" BIN date_of_completion BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_completion BY WEEKDAY"
        },
        "nl_queries": [
            "What are the number of the completion dates of all the tests that have result \"Fail\"?",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart",
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result.",
            "Return the number of the completion date for all the tests that have \"Fail\" result.",
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?"
        ]
    },
    "1252": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"",
                "binning": "BIN date_of_enrolment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" BIN date_of_enrolment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Aug",
                    "Sept",
                    "Oct",
                    "Nov"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY MONTH"
        },
        "nl_queries": [
            "A bar chart for what are the number of the enrollment dates of all the tests that have result \"Pass\"?",
            "A bar chart for finding the number of the enrollment date for all the tests that have \"Pass\" result.",
            "What are the number of the enrollment dates of all the tests that have result \"Pass\"?",
            "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a bar chart",
            "Find the number of the enrollment date for all the tests that have \"Pass\" result.",
            "What are the enrollment dates of all the tests that have result \"Pass\", and count them by a bar chart"
        ]
    },
    "1253": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"",
                "binning": "BIN date_of_enrolment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" BIN date_of_enrolment BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    2,
                    0,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY WEEKDAY"
        },
        "nl_queries": [
            "A bar chart for what are the number of the enrollment dates of all the tests that have result \"Pass\"?",
            "A bar chart for finding the number of the enrollment date for all the tests that have \"Pass\" result.",
            "What are the number of the enrollment dates of all the tests that have result \"Pass\"?",
            "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a bar chart",
            "Find the number of the enrollment date for all the tests that have \"Pass\" result.",
            "What are the enrollment dates of all the tests that have result \"Pass\", and count them by a bar chart"
        ]
    },
    "1254": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" GROUP BY date_of_enrolment",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" GROUP BY date_of_enrolment"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "2017-08-02",
                    "2017-09-06",
                    "2017-09-21",
                    "2017-10-10",
                    "2017-10-23",
                    "2017-10-29",
                    "2017-11-13"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_enrolment"
        },
        "nl_queries": [
            "What are the number of the enrollment dates of all the tests that have result \"Pass\"?",
            "A line chart for what are the number of the enrollment dates of all the tests that have result \"Pass\"?",
            "What are the enrollment dates of all the tests that have result \"Pass\", and count them by a line chart",
            "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a line chart",
            "Find the number of the enrollment date for all the tests that have \"Pass\" result.",
            "A line chart for finding the number of the enrollment date for all the tests that have \"Pass\" result."
        ]
    },
    "1255": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT author_id , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT author_id , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "author_id",
            "y_name": "gender_mf",
            "x_data": [
                [
                    6,
                    1,
                    11,
                    3,
                    10,
                    14,
                    9,
                    4,
                    8,
                    7,
                    13,
                    2,
                    15,
                    12,
                    5
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    1,
                    0,
                    1,
                    1,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize the relationship between  author_id and  gender_mf .",
            "Draw a scatter chart about the correlation between  author_id and  gender_mf .",
            "Return a scatter chart about the correlation between  author_id and  gender_mf .",
            "Show me about the correlation between  author_id and  gender_mf  in a scatter chart.",
            "A scatter chart shows the correlation between  author_id and  gender_mf ."
        ]
    },
    "1256": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT author_tutor_ATB , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT author_tutor_ATB , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "author_tutor_ATB",
            "y_name": "gender_mf",
            "x_data": [
                [
                    817,
                    331,
                    229,
                    349,
                    159,
                    833,
                    505,
                    782,
                    557,
                    869,
                    613,
                    975,
                    974,
                    847,
                    388
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    1,
                    0,
                    1,
                    1,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a scatter chart about the correlation between  author_tutor_ATB and  gender_mf .",
            "Show me about the correlation between  author_tutor_ATB and  gender_mf  in a scatter chart.",
            "What is the relationship between  author_tutor_ATB and  gender_mf ?",
            "Return a scatter chart about the correlation between  author_tutor_ATB and  gender_mf .",
            "Visualize the relationship between  author_tutor_ATB and  gender_mf ."
        ]
    },
    "1257": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT author_id , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT author_id , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "author_id",
            "y_name": "author_tutor_ATB",
            "x_data": [
                [
                    6,
                    1,
                    11,
                    3,
                    10,
                    14,
                    9,
                    4,
                    8,
                    7,
                    13,
                    2,
                    15,
                    12,
                    5
                ]
            ],
            "y_data": [
                [
                    817,
                    331,
                    229,
                    349,
                    159,
                    833,
                    505,
                    782,
                    557,
                    869,
                    613,
                    975,
                    974,
                    847,
                    388
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a scatter chart about the correlation between  author_id and  author_tutor_ATB .",
            "Return a scatter chart about the correlation between  author_id and  author_tutor_ATB .",
            "Show me about the correlation between  author_id and  author_tutor_ATB  in a scatter chart.",
            "What is the relationship between  author_id and  author_tutor_ATB ?",
            "A scatter chart shows the correlation between  author_id and  author_tutor_ATB ."
        ]
    },
    "1258": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT login_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT login_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "login_name",
            "y_name": "author_id",
            "x_data": [
                [
                    "al75",
                    "jmckenzie",
                    "dschaefer",
                    "clementina29",
                    "adam.rippin",
                    "fiona77",
                    "antonetta19",
                    "wlehner",
                    "medhurst.alvah",
                    "marty.bergnaum",
                    "qking",
                    "heidenreich.ara",
                    "ekshlerin",
                    "nellie.mosciski",
                    "nyundt"
                ]
            ],
            "y_data": [
                [
                    6,
                    1,
                    11,
                    3,
                    10,
                    14,
                    9,
                    4,
                    8,
                    7,
                    13,
                    2,
                    15,
                    12,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find  login_name and  author_id , and visualize them by a bar chart.",
            "Visualize a bar chart about the distribution of  login_name and  author_id .",
            "Return a bar chart about the distribution of  login_name and  author_id .",
            "Show me about the distribution of  login_name and  author_id  in a bar chart.",
            "Draw a bar chart about the distribution of  login_name and  author_id ."
        ]
    },
    "1259": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT login_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT login_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "login_name",
            "y_name": "author_tutor_ATB",
            "x_data": [
                [
                    "al75",
                    "jmckenzie",
                    "dschaefer",
                    "clementina29",
                    "adam.rippin",
                    "fiona77",
                    "antonetta19",
                    "wlehner",
                    "medhurst.alvah",
                    "marty.bergnaum",
                    "qking",
                    "heidenreich.ara",
                    "ekshlerin",
                    "nellie.mosciski",
                    "nyundt"
                ]
            ],
            "y_data": [
                [
                    817,
                    331,
                    229,
                    349,
                    159,
                    833,
                    505,
                    782,
                    557,
                    869,
                    613,
                    975,
                    974,
                    847,
                    388
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart about the distribution of  login_name and  author_tutor_ATB .",
            "A bar chart shows the distribution of  login_name and  author_tutor_ATB .",
            "Return a bar chart about the distribution of  login_name and  author_tutor_ATB .",
            "Give me the comparison about  author_tutor_ATB over the  login_name  by a bar chart.",
            "Show me about the distribution of  login_name and  author_tutor_ATB  in a bar chart."
        ]
    },
    "1260": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT login_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT login_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "login_name",
            "y_name": "gender_mf",
            "x_data": [
                [
                    "al75",
                    "jmckenzie",
                    "dschaefer",
                    "clementina29",
                    "adam.rippin",
                    "fiona77",
                    "antonetta19",
                    "wlehner",
                    "medhurst.alvah",
                    "marty.bergnaum",
                    "qking",
                    "heidenreich.ara",
                    "ekshlerin",
                    "nellie.mosciski",
                    "nyundt"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    1,
                    0,
                    1,
                    1,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart about the distribution of  login_name and  gender_mf .",
            "Find  login_name and  gender_mf , and visualize them by a bar chart.",
            "Give me the comparison about  gender_mf over the  login_name .",
            "Return a bar chart about the distribution of  login_name and  gender_mf .",
            "Visualize a bar chart about the distribution of  login_name and  gender_mf ."
        ]
    },
    "1261": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT password , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT password , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "password",
            "y_name": "author_id",
            "x_data": [
                [
                    "e96c0bcbbbb14747747a56ff4c17354f343a5b4f",
                    "c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b",
                    "4f149f75ecd84afcdf27343509cdd03d81edb119",
                    "cdaf6c3483f19e2253659a40a3aab786a3390f78",
                    "b517a107b5f08fafe9628e88e7263a6f3a4a55c0",
                    "120ac8a5744f5b710ecaebbd8dd1633e3e33886e",
                    "4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3",
                    "d34378200c9b5f72d3039fa640e7920aaec0fdf2",
                    "02d64f11de97436343a0beba41bfcf69af61be1e",
                    "3e2f7bf1e6acf0d616a8703ee0050fba13bc007f",
                    "6b9979a83b4a9e03ead034c8de47f1b013a3d3af",
                    "24b0ee84063c3b017ab1839e01b7280f47f7c7c2",
                    "6d587cec8006e3a40565e1dad2c5b5b12b475b8f",
                    "a48e25a58b3088e9cfdaca61130555ed2c772452",
                    "2c196efe8aee23a1b9a7e752fe63029c5879af6f"
                ]
            ],
            "y_data": [
                [
                    6,
                    1,
                    11,
                    3,
                    10,
                    14,
                    9,
                    4,
                    8,
                    7,
                    13,
                    2,
                    15,
                    12,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me the comparison about  author_id over the  password  by a bar chart.",
            "Draw a bar chart about the distribution of  password and  author_id .",
            "Return a bar chart about the distribution of  password and  author_id .",
            "Visualize a bar chart about the distribution of  password and  author_id .",
            "Show me about the distribution of  password and  author_id  in a bar chart."
        ]
    },
    "1262": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT password , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT password , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "password",
            "y_name": "author_tutor_ATB",
            "x_data": [
                [
                    "e96c0bcbbbb14747747a56ff4c17354f343a5b4f",
                    "c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b",
                    "4f149f75ecd84afcdf27343509cdd03d81edb119",
                    "cdaf6c3483f19e2253659a40a3aab786a3390f78",
                    "b517a107b5f08fafe9628e88e7263a6f3a4a55c0",
                    "120ac8a5744f5b710ecaebbd8dd1633e3e33886e",
                    "4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3",
                    "d34378200c9b5f72d3039fa640e7920aaec0fdf2",
                    "02d64f11de97436343a0beba41bfcf69af61be1e",
                    "3e2f7bf1e6acf0d616a8703ee0050fba13bc007f",
                    "6b9979a83b4a9e03ead034c8de47f1b013a3d3af",
                    "24b0ee84063c3b017ab1839e01b7280f47f7c7c2",
                    "6d587cec8006e3a40565e1dad2c5b5b12b475b8f",
                    "a48e25a58b3088e9cfdaca61130555ed2c772452",
                    "2c196efe8aee23a1b9a7e752fe63029c5879af6f"
                ]
            ],
            "y_data": [
                [
                    817,
                    331,
                    229,
                    349,
                    159,
                    833,
                    505,
                    782,
                    557,
                    869,
                    613,
                    975,
                    974,
                    847,
                    388
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart about the distribution of  password and  author_tutor_ATB .",
            "Find  password and  author_tutor_ATB , and visualize them by a bar chart.",
            "Return a bar chart about the distribution of  password and  author_tutor_ATB .",
            "Give me the comparison about  author_tutor_ATB over the  password .",
            "Visualize a bar chart about the distribution of  password and  author_tutor_ATB ."
        ]
    },
    "1263": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT password , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT password , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "password",
            "y_name": "gender_mf",
            "x_data": [
                [
                    "e96c0bcbbbb14747747a56ff4c17354f343a5b4f",
                    "c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b",
                    "4f149f75ecd84afcdf27343509cdd03d81edb119",
                    "cdaf6c3483f19e2253659a40a3aab786a3390f78",
                    "b517a107b5f08fafe9628e88e7263a6f3a4a55c0",
                    "120ac8a5744f5b710ecaebbd8dd1633e3e33886e",
                    "4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3",
                    "d34378200c9b5f72d3039fa640e7920aaec0fdf2",
                    "02d64f11de97436343a0beba41bfcf69af61be1e",
                    "3e2f7bf1e6acf0d616a8703ee0050fba13bc007f",
                    "6b9979a83b4a9e03ead034c8de47f1b013a3d3af",
                    "24b0ee84063c3b017ab1839e01b7280f47f7c7c2",
                    "6d587cec8006e3a40565e1dad2c5b5b12b475b8f",
                    "a48e25a58b3088e9cfdaca61130555ed2c772452",
                    "2c196efe8aee23a1b9a7e752fe63029c5879af6f"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    1,
                    0,
                    1,
                    1,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "A bar chart shows the distribution of  password and  gender_mf .",
            "Find  password and  gender_mf , and visualize them by a bar chart.",
            "Give me the comparison about  gender_mf over the  password  by a bar chart.",
            "Draw a bar chart about the distribution of  password and  gender_mf .",
            "Return a bar chart about the distribution of  password and  gender_mf ."
        ]
    },
    "1264": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT personal_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT personal_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "personal_name",
            "y_name": "author_id",
            "x_data": [
                [
                    "Adolf",
                    "Cathrine",
                    "Ciara",
                    "Darius",
                    "Deja",
                    "Dusty",
                    "Georgiana",
                    "Julio",
                    "Kelsie",
                    "Logan",
                    "Madonna",
                    "Retha",
                    "Shakira",
                    "Sheldon",
                    "Yessenia"
                ]
            ],
            "y_data": [
                [
                    6,
                    1,
                    11,
                    3,
                    10,
                    14,
                    9,
                    4,
                    8,
                    7,
                    13,
                    2,
                    15,
                    12,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart about the distribution of  personal_name and  author_id .",
            "Return a bar chart about the distribution of  personal_name and  author_id .",
            "Visualize a bar chart about the distribution of  personal_name and  author_id .",
            "Show me about the distribution of  personal_name and  author_id  in a bar chart.",
            "A bar chart shows the distribution of  personal_name and  author_id ."
        ]
    },
    "1265": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT personal_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT personal_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "personal_name",
            "y_name": "author_tutor_ATB",
            "x_data": [
                [
                    "Adolf",
                    "Cathrine",
                    "Ciara",
                    "Darius",
                    "Deja",
                    "Dusty",
                    "Georgiana",
                    "Julio",
                    "Kelsie",
                    "Logan",
                    "Madonna",
                    "Retha",
                    "Shakira",
                    "Sheldon",
                    "Yessenia"
                ]
            ],
            "y_data": [
                [
                    817,
                    331,
                    229,
                    349,
                    159,
                    833,
                    505,
                    782,
                    557,
                    869,
                    613,
                    975,
                    974,
                    847,
                    388
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find  personal_name and  author_tutor_ATB , and visualize them by a bar chart.",
            "Visualize a bar chart about the distribution of  personal_name and  author_tutor_ATB .",
            "Give me the comparison about  author_tutor_ATB over the  personal_name  by a bar chart.",
            "Show me about the distribution of  personal_name and  author_tutor_ATB  in a bar chart.",
            "Give me the comparison about  author_tutor_ATB over the  personal_name ."
        ]
    },
    "1266": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT personal_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT personal_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "personal_name",
            "y_name": "gender_mf",
            "x_data": [
                [
                    "Adolf",
                    "Cathrine",
                    "Ciara",
                    "Darius",
                    "Deja",
                    "Dusty",
                    "Georgiana",
                    "Julio",
                    "Kelsie",
                    "Logan",
                    "Madonna",
                    "Retha",
                    "Shakira",
                    "Sheldon",
                    "Yessenia"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    1,
                    0,
                    1,
                    1,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me about the distribution of  personal_name and  gender_mf  in a bar chart.",
            "Give me the comparison about  gender_mf over the  personal_name  by a bar chart.",
            "Visualize a bar chart about the distribution of  personal_name and  gender_mf .",
            "Return a bar chart about the distribution of  personal_name and  gender_mf .",
            "A bar chart shows the distribution of  personal_name and  gender_mf ."
        ]
    },
    "1267": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT middle_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT middle_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "middle_name",
            "y_name": "author_id",
            "x_data": [
                [
                    "Keira",
                    "Ruthie",
                    "Alejandra",
                    "Ethyl",
                    "Joyce",
                    "Amani",
                    "Mathew",
                    "Aniyah",
                    "Kennith",
                    "Ethelyn",
                    "Jaclyn",
                    "Corene",
                    "Fritz",
                    "Jayce",
                    "Zena"
                ]
            ],
            "y_data": [
                [
                    6,
                    1,
                    11,
                    3,
                    10,
                    14,
                    9,
                    4,
                    8,
                    7,
                    13,
                    2,
                    15,
                    12,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find  middle_name and  author_id , and visualize them by a bar chart.",
            "Draw a bar chart about the distribution of  middle_name and  author_id .",
            "Give me the comparison about  author_id over the  middle_name  by a bar chart.",
            "Return a bar chart about the distribution of  middle_name and  author_id .",
            "A bar chart shows the distribution of  middle_name and  author_id ."
        ]
    },
    "1268": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT middle_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT middle_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "middle_name",
            "y_name": "author_tutor_ATB",
            "x_data": [
                [
                    "Keira",
                    "Ruthie",
                    "Alejandra",
                    "Ethyl",
                    "Joyce",
                    "Amani",
                    "Mathew",
                    "Aniyah",
                    "Kennith",
                    "Ethelyn",
                    "Jaclyn",
                    "Corene",
                    "Fritz",
                    "Jayce",
                    "Zena"
                ]
            ],
            "y_data": [
                [
                    817,
                    331,
                    229,
                    349,
                    159,
                    833,
                    505,
                    782,
                    557,
                    869,
                    613,
                    975,
                    974,
                    847,
                    388
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart about the distribution of  middle_name and  author_tutor_ATB .",
            "Give me the comparison about  author_tutor_ATB over the  middle_name .",
            "Show me about the distribution of  middle_name and  author_tutor_ATB  in a bar chart.",
            "Give me the comparison about  author_tutor_ATB over the  middle_name  by a bar chart.",
            "Return a bar chart about the distribution of  middle_name and  author_tutor_ATB ."
        ]
    },
    "1269": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT middle_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT middle_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "middle_name",
            "y_name": "gender_mf",
            "x_data": [
                [
                    "Keira",
                    "Ruthie",
                    "Alejandra",
                    "Ethyl",
                    "Joyce",
                    "Amani",
                    "Mathew",
                    "Aniyah",
                    "Kennith",
                    "Ethelyn",
                    "Jaclyn",
                    "Corene",
                    "Fritz",
                    "Jayce",
                    "Zena"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    1,
                    0,
                    1,
                    1,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart about the distribution of  middle_name and  gender_mf .",
            "Give me the comparison about  gender_mf over the  middle_name  by a bar chart.",
            "Give me the comparison about  gender_mf over the  middle_name .",
            "Return a bar chart about the distribution of  middle_name and  gender_mf .",
            "Draw a bar chart about the distribution of  middle_name and  gender_mf ."
        ]
    },
    "1270": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT family_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT family_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "family_name",
            "y_name": "author_id",
            "x_data": [
                [
                    "Rohan",
                    "Grant",
                    "Greenholt",
                    "Reichel",
                    "Champlin",
                    "Crist",
                    "Zboncak",
                    "Nader",
                    "Rowe",
                    "Treutel",
                    "Effertz",
                    "Armstrong",
                    "Haley",
                    "Kreiger",
                    "Barrows"
                ]
            ],
            "y_data": [
                [
                    6,
                    1,
                    11,
                    3,
                    10,
                    14,
                    9,
                    4,
                    8,
                    7,
                    13,
                    2,
                    15,
                    12,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me the comparison about  author_id over the  family_name .",
            "A bar chart shows the distribution of  family_name and  author_id .",
            "Draw a bar chart about the distribution of  family_name and  author_id .",
            "Return a bar chart about the distribution of  family_name and  author_id .",
            "Show me about the distribution of  family_name and  author_id  in a bar chart."
        ]
    },
    "1271": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT family_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT family_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "family_name",
            "y_name": "author_tutor_ATB",
            "x_data": [
                [
                    "Rohan",
                    "Grant",
                    "Greenholt",
                    "Reichel",
                    "Champlin",
                    "Crist",
                    "Zboncak",
                    "Nader",
                    "Rowe",
                    "Treutel",
                    "Effertz",
                    "Armstrong",
                    "Haley",
                    "Kreiger",
                    "Barrows"
                ]
            ],
            "y_data": [
                [
                    817,
                    331,
                    229,
                    349,
                    159,
                    833,
                    505,
                    782,
                    557,
                    869,
                    613,
                    975,
                    974,
                    847,
                    388
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "A bar chart shows the distribution of  family_name and  author_tutor_ATB .",
            "Give me the comparison about  author_tutor_ATB over the  family_name  by a bar chart.",
            "Give me the comparison about  author_tutor_ATB over the  family_name .",
            "Return a bar chart about the distribution of  family_name and  author_tutor_ATB .",
            "Draw a bar chart about the distribution of  family_name and  author_tutor_ATB ."
        ]
    },
    "1272": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT family_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT family_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "family_name",
            "y_name": "gender_mf",
            "x_data": [
                [
                    "Rohan",
                    "Grant",
                    "Greenholt",
                    "Reichel",
                    "Champlin",
                    "Crist",
                    "Zboncak",
                    "Nader",
                    "Rowe",
                    "Treutel",
                    "Effertz",
                    "Armstrong",
                    "Haley",
                    "Kreiger",
                    "Barrows"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    1,
                    0,
                    1,
                    1,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me about the distribution of  family_name and  gender_mf  in a bar chart.",
            "Visualize a bar chart about the distribution of  family_name and  gender_mf .",
            "A bar chart shows the distribution of  family_name and  gender_mf .",
            "Give me the comparison about  gender_mf over the  family_name .",
            "Draw a bar chart about the distribution of  family_name and  gender_mf ."
        ]
    },
    "1273": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "course_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "AI",
                    "Art history",
                    "Chinese Painting",
                    "French",
                    "Japanese",
                    "Spanish",
                    "Writing in French",
                    "advanced database",
                    "database",
                    "modern Arts"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    3,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for what is the name of each course and the corresponding number of student enrollment?",
            "Return a histogram on what is the name of each course and the corresponding number of student enrollment?",
            "What is the name of each course and the corresponding number of student enrollment. Show bar chart.",
            "List the name and the number of enrolled student for each course in a bar chart.",
            "List the name and the number of enrolled student for each course. Show bar chart."
        ]
    },
    "1274": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT test_result , COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT test_result , COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "pie",
            "x_name": "test_result",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Pass",
                    "Fail"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List each test result and its count in descending order of count by a pie chart.",
            "List each test result and its count in descending order of count. Show the proportion.",
            "For each distinct test result, find the number of students who got the result. "
        ]
    },
    "1275": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT test_result , COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT test_result , COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "test_result",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Pass",
                    "Fail"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List each test result and its count in descending order of count by a bar chart.",
            "List each test result and its count in descending order of count. Visualize by bar chart.",
            "For each distinct test result, find the number of students who got the result. Plot them as bar chart."
        ]
    },
    "1277": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "pie",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Arts",
                    "Language",
                    "Computer Science"
                ]
            ],
            "y_data": [
                [
                    4,
                    5,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of courses for each subject in a pie chart.",
            "How many courses for each subject? Plot a pie chart."
        ]
    },
    "1278": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Arts",
                    "Language",
                    "Computer Science"
                ]
            ],
            "y_data": [
                [
                    4,
                    5,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of courses for each subject in a bar chart.",
            "How many courses for each subject? Plot a bar chart."
        ]
    },
    "1279": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.subject_id , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.subject_id , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "subject_id",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    2,
                    3,
                    1
                ]
            ],
            "y_data": [
                [
                    4,
                    5,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between the subject ID and the corresponding number of courses for each subject in a scatter chart."
        ]
    },
    "1281": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.subject_id , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY subject_name",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.subject_id , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY subject_name"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "subject_id",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    2
                ],
                [
                    1
                ],
                [
                    3
                ]
            ],
            "y_data": [
                [
                    4
                ],
                [
                    6
                ],
                [
                    5
                ]
            ],
            "classify": [
                "Arts",
                "Computer Science",
                "Language"
            ],
            "describe": "GROUP BY subject_name"
        },
        "nl_queries": [
            "Show the relationship between the subject ID and the corresponding number of courses for each subject in a group scatter chart."
        ]
    },
    "1282": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "pie",
            "x_name": "personal_name",
            "y_name": "student_id",
            "x_data": [
                [
                    "Marshall",
                    "Alicia",
                    "Cary",
                    "Eliza"
                ]
            ],
            "y_data": [
                [
                    8,
                    10,
                    14,
                    15
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the student ID and personal name of the student with at least two enrollments. Plot them as pie chart."
        ]
    },
    "1283": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "personal_name",
            "y_name": "student_id",
            "x_data": [
                [
                    "Marshall",
                    "Alicia",
                    "Cary",
                    "Eliza"
                ]
            ],
            "y_data": [
                [
                    8,
                    10,
                    14,
                    15
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the student ID and personal name of the student with at least two enrollments. "
        ]
    },
    "1284": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" GROUP BY date_test_taken",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" GROUP BY date_test_taken"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_test_taken",
            "y_name": "COUNT(date_test_taken)",
            "x_data": [
                [
                    "2018-03-19",
                    "2018-03-21",
                    "2018-03-23",
                    "2018-03-24",
                    "2018-03-25"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_test_taken"
        },
        "nl_queries": [
            "Find the number of the dates of the tests taken with result \"Pass\".",
            "Find the dates of the tests taken with result \"Pass\", and count them by a bar chart",
            "A bar chart for finding the number of the dates of the tests taken with result \"Pass\".",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a bar chart"
        ]
    },
    "1285": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"",
                "binning": "BIN date_test_taken BY DAY"
            },
            "VQL": "Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" BIN date_test_taken BY DAY"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_test_taken",
            "y_name": "COUNT(date_test_taken)",
            "x_data": [
                [
                    "19th",
                    "20th",
                    "21th",
                    "22th",
                    "23th",
                    "24th",
                    "25th"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    1,
                    0,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_test_taken BY DAY"
        },
        "nl_queries": [
            "Find the number of the dates of the tests taken with result \"Pass\".",
            "A line chart for finding the number of the dates of the tests taken with result \"Pass\".",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a line chart",
            "Find the dates of the tests taken with result \"Pass\", and count them by a line chart"
        ]
    },
    "1286": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"",
                "binning": "BIN date_test_taken BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" BIN date_test_taken BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_test_taken",
            "y_name": "COUNT(date_test_taken)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    1,
                    0,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_test_taken BY WEEKDAY"
        },
        "nl_queries": [
            "Find the number of the dates of the tests taken with result \"Pass\".",
            "Find the dates of the tests taken with result \"Pass\", and count them by a bar chart",
            "A bar chart for finding the number of the dates of the tests taken with result \"Pass\".",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a bar chart"
        ]
    },
    "1288": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "pie",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Computer Science",
                    "Arts",
                    "Language"
                ]
            ],
            "y_data": [
                [
                    6,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of courses for each subject in a pie chart.",
            "How many courses for each subject? Plot a pie chart."
        ]
    },
    "1289": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Computer Science",
                    "Arts",
                    "Language"
                ]
            ],
            "y_data": [
                [
                    6,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many courses for each subject? Plot a bar chart.",
            "Find the number of courses for each subject in a bar chart."
        ]
    },
    "1290": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.subject_id , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.subject_id , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "subject_id",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    1,
                    2,
                    3
                ]
            ],
            "y_data": [
                [
                    6,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between the subject ID and the corresponding number of courses for each subject in a scatter chart."
        ]
    },
    "1292": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.subject_id , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY subject_name",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.subject_id , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY subject_name"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "subject_id",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    2
                ],
                [
                    1
                ],
                [
                    3
                ]
            ],
            "y_data": [
                [
                    4
                ],
                [
                    6
                ],
                [
                    5
                ]
            ],
            "classify": [
                "Arts",
                "Computer Science",
                "Language"
            ],
            "describe": "GROUP BY subject_name"
        },
        "nl_queries": [
            "Show the relationship between the subject ID and the corresponding number of courses for each subject in a group scatter chart."
        ]
    },
    "1293": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"",
                "binning": "BIN date_of_enrolment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\" BIN date_of_enrolment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Aug",
                    "Sept",
                    "Oct",
                    "Nov",
                    "Dec"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY MONTH"
        },
        "nl_queries": [
            "A bar chart for finding the number of the the date of enrollment of the \"Spanish\" course.",
            "Find the number of the the date of enrollment of the \"Spanish\" course.",
            "What is the date of enrollment of the course named \"Spanish\", and count them by a bar chart",
            "Find the the date of enrollment of the \"Spanish\" course, and count them by a bar chart"
        ]
    },
    "1294": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"",
                "binning": "BIN date_of_enrolment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\" BIN date_of_enrolment BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    2,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY WEEKDAY"
        },
        "nl_queries": [
            "A bar chart for finding the number of the the date of enrollment of the \"Spanish\" course.",
            "Find the number of the the date of enrollment of the \"Spanish\" course.",
            "What is the date of enrollment of the course named \"Spanish\", and count them by a bar chart",
            "Find the the date of enrollment of the \"Spanish\" course, and count them by a bar chart"
        ]
    },
    "1295": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "middle_name",
            "y_name": "student_id",
            "x_data": [
                [
                    "Luella",
                    "Brandt",
                    "Casimir",
                    "Asa",
                    "Kailey",
                    "Vicente",
                    "Kolby",
                    "Karley",
                    "Camilla",
                    "Ursula"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    4,
                    6,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the student ID and middle name for all the students with at most two enrollments. ",
            "A bar chart about what are the student IDs and middle names of the students enrolled in at most two courses?",
            "what are the student IDs and middle names of the students enrolled in at most two courses?",
            "What are the student IDs and middle names of the students enrolled in at most two courses. "
        ]
    },
    "1296": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment",
                "binning": "BIN date_of_completion BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment BIN date_of_completion BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    4,
                    16
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_completion BY MONTH"
        },
        "nl_queries": [
            "List the number of completion students in each month and bin date of completion by month interval with a bar chart.",
            "How many completion students in each month? Return a bar chart binning date of completion by month interval.",
            "Bar chart of how many date of completion from each date of completion"
        ]
    },
    "1297": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment",
                "binning": "BIN date_of_completion BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment BIN date_of_completion BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    4,
                    4,
                    3,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_completion BY WEEKDAY"
        },
        "nl_queries": [
            "List the number of completion students in each day and bin date of completion by weekday with a bar chart.",
            "How many completion students in each day? Return a bar chart binning date of completion by weekday.",
            "Bar chart of how many date of completion from each date of completion"
        ]
    },
    "1298": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment",
                "binning": "BIN date_of_enrolment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment BIN date_of_enrolment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "July",
                    "Aug",
                    "Sept",
                    "Oct",
                    "Nov",
                    "Dec"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    3,
                    6,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY MONTH"
        },
        "nl_queries": [
            "List the number of enrolment students in each month and bin date of enrolment by month interval with a bar chart.",
            "How many enrolment students in each month? Return a bar chart binning date of enrolment by month interval.",
            "Bar chart of how many date of enrolment from each date of enrolment"
        ]
    },
    "1299": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment",
                "binning": "BIN date_of_enrolment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment BIN date_of_enrolment BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    3,
                    5,
                    0,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY WEEKDAY"
        },
        "nl_queries": [
            "List the number of enrolment students in each day and bin date of enrolment by weekday with a bar chart.",
            "How many enrolment students in each day? Return a bar chart binning date of enrolment by weekday.",
            "Bar chart x axis date of enrolment y axis the number of date of enrolment"
        ]
    },
    "1300": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment GROUP BY date_of_completion",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment GROUP BY date_of_completion"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "2018-02-26",
                    "2018-02-27",
                    "2018-02-28",
                    "2018-03-01",
                    "2018-03-02",
                    "2018-03-04",
                    "2018-03-06",
                    "2018-03-07",
                    "2018-03-09",
                    "2018-03-10",
                    "2018-03-14",
                    "2018-03-16",
                    "2018-03-18",
                    "2018-03-19",
                    "2018-03-22"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2,
                    1,
                    2,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_completion"
        },
        "nl_queries": [
            "List the number of completion students in each day and group by date of completion in a line chart.",
            "How many completion students in each day? Return a line chart grouping by date of completion.",
            "Visualize the general trend of the number of date of completion over the date of completion."
        ]
    },
    "1497": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Headquarters , count(*) FROM company GROUP BY headquarters",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Headquarters , count(*) FROM company GROUP BY headquarters"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Headquarters",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Brazil",
                    "China",
                    "Netherlands",
                    "UK",
                    "USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List all headquarters and the number of companies in each headquarter in a pie chart.",
            "List all headquarters and the number of companies in each headquarter. Show a pie chart.",
            "For each headquarter, what are the headquarter and how many companies are centered there. Show the proportion.",
            "Give me a pie to show the total number from different headquarters."
        ]
    },
    "1498": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters , count(*) FROM company GROUP BY headquarters",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters , count(*) FROM company GROUP BY headquarters"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarters",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Brazil",
                    "China",
                    "Netherlands",
                    "UK",
                    "USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List all headquarters and the number of companies in each headquarter with a bar chart.",
            "List all headquarters and the number of companies in each headquarter. ",
            "For each headquarter, what are the headquarter and how many companies are centered there. Visualize by bar chart.",
            "Bar chart of the total number from each headquarters"
        ]
    },
    "1499": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Company , Rank FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion, profits_billion",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Company , Rank FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion, profits_billion"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Company",
            "y_name": "Rank",
            "x_data": [
                [
                    "Industrial and Commercial Bank of China",
                    "Wells Fargo",
                    "HSBC"
                ]
            ],
            "y_data": [
                [
                    5,
                    9,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the rank of the companies in the banking industry order by their sales and profits in billion with a bar chart.",
            "What is the rank every company in the banking industry ordered by sales and profits? Show a bar chart."
        ]
    },
    "1500": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Company , Market_Value FROM company WHERE main_industry = 'Banking'",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Company , Market_Value FROM company WHERE main_industry = 'Banking'"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Company",
            "y_name": "Market_Value",
            "x_data": [
                [
                    "Industrial and Commercial Bank of China",
                    "Wells Fargo",
                    "HSBC"
                ]
            ],
            "y_data": [
                [
                    237.4,
                    178.7,
                    164.3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the market values of the companies in the banking industry with a pie chart.",
            "What is the market value of every comapny in the banking industry? Return a pie chart."
        ]
    },
    "1501": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Company , Market_Value FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion , profits_billion",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Company , Market_Value FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion , profits_billion"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Company",
            "y_name": "Market_Value",
            "x_data": [
                [
                    "Industrial and Commercial Bank of China",
                    "Wells Fargo",
                    "HSBC"
                ]
            ],
            "y_data": [
                [
                    237.4,
                    178.7,
                    164.3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the market values of the companies in the banking industry order by their sales and profits in billion with a bar chart.",
            "What is the market value of every comapny in the banking industry ordered by sales and profits? Return a bar chart."
        ]
    },
    "1502": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Rank , Market_Value FROM company WHERE main_industry = 'Banking'",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Rank , Market_Value FROM company WHERE main_industry = 'Banking'"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Rank",
            "y_name": "Market_Value",
            "x_data": [
                [
                    5,
                    9,
                    6
                ]
            ],
            "y_data": [
                [
                    237.4,
                    178.7,
                    164.3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between the rank and market values of the companies in the banking industry with a scatter chart."
        ]
    },
    "1504": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Rank , Market_Value FROM company WHERE main_industry = 'Banking' GROUP BY Company",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Rank , Market_Value FROM company WHERE main_industry = 'Banking' GROUP BY Company"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Rank",
            "y_name": "Market_Value",
            "x_data": [
                [
                    6
                ],
                [
                    5
                ],
                [
                    9
                ]
            ],
            "y_data": [
                [
                    164.3
                ],
                [
                    237.4
                ],
                [
                    178.7
                ]
            ],
            "classify": [
                "HSBC",
                "Industrial and Commercial Bank of China",
                "Wells Fargo"
            ],
            "describe": "GROUP BY Company"
        },
        "nl_queries": [
            "Show the relationship between the rank and market values of the companies in the banking industry and group by company with a group scatter chart."
        ]
    },
    "1505": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Main_Industry",
            "y_name": "COUNT(Main_Industry)",
            "x_data": [
                [
                    "Banking",
                    "Oil and gas"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Main_Industry"
        },
        "nl_queries": [
            "Show the number of companies whose headquarters are not from USA fpr each main industry in a pie chart.",
            "How many companies that are not headquartered in the United States for each main industry? Show me a pie chart."
        ]
    },
    "1506": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "COUNT(Main_Industry)",
            "x_data": [
                [
                    "Banking",
                    "Oil and gas"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Main_Industry"
        },
        "nl_queries": [
            "Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart.",
            "How many companies that are not headquartered in the United States for each main industry? Show me a bar chart."
        ]
    },
    "1507": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Main_Industry",
            "y_name": "sum(market_value)",
            "x_data": [
                [
                    "Banking",
                    "Conglomerate",
                    "Oil and gas"
                ]
            ],
            "y_data": [
                [
                    580.4000000000002,
                    415.9,
                    1257.1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all main industry and total market value in each industry in a pie chart.",
            "Draw a pie chart to show all main industry and total market value in each industry.",
            "Show me a pie chart for what are the main indstries and total market value for each industry?",
            "What are the main indstries and total market value for each industry. Plot them as pie chart.",
            "I want to know the proportion of the sum market value for each main industry."
        ]
    },
    "1508": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "sum(market_value)",
            "x_data": [
                [
                    "Banking",
                    "Conglomerate",
                    "Oil and gas"
                ]
            ],
            "y_data": [
                [
                    580.4000000000002,
                    415.9,
                    1257.1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all main industry and total market value in each industry by a bar chart.",
            "Show all main industry and total market value in each industry. ",
            "what are the main indstries and total market value for each industry?",
            "A bar chart about what are the main indstries and total market value for each industry?",
            "What are the main indstries and total market value for each industry. Visualize by bar chart.",
            "Draw a bar chart of main industry versus total number of market value"
        ]
    },
    "1509": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Main_Industry",
            "y_name": "COUNT(Main_Industry)",
            "x_data": [
                [
                    "Banking",
                    "Conglomerate"
                ]
            ],
            "y_data": [
                [
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Main_Industry"
        },
        "nl_queries": [
            "Show the number of companies without a gas station in each main industry with a pie chart.",
            "How many companies without a gas station in each main industry? Draw a pie chart."
        ]
    },
    "1510": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "COUNT(Main_Industry)",
            "x_data": [
                [
                    "Banking",
                    "Conglomerate"
                ]
            ],
            "y_data": [
                [
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Main_Industry"
        },
        "nl_queries": [
            "Show the number of companies without a gas station in each main industry with a bar chart.",
            "How many companies without a gas station in each main industry? Draw a bar chart."
        ]
    },
    "1511": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Manager_Name",
            "y_name": "COUNT(Manager_Name)",
            "x_data": [
                [
                    "BrianWingrave",
                    "Bryan Taylor",
                    "BryanDenman",
                    "Colin Denman",
                    "Jon Rowe",
                    "Luke Rowe",
                    "Simon Cope Derek Marloe",
                    "SimonMarloe",
                    "Tom Whit",
                    "Tony Bristow"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Manager_Name"
        },
        "nl_queries": [
            "Show the number of gas stations for each manager in a bar chart.",
            "How many gas stations dors each manager have? Plot a bar chart.",
            "Draw a bar chart of manager name versus how many manager name"
        ]
    },
    "1515": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Company",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ExxonMobil",
                    "Royal Dutch Shell",
                    "PetroChina",
                    "Petrobras",
                    "BP"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the company name with the number of gas station in a pie chart.",
            "Show the company name with the number of gas station. ",
            "For each company id, what are the companies and how many gas stations does each one operate. Show the proportion."
        ]
    },
    "1516": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Company",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ExxonMobil",
                    "Royal Dutch Shell",
                    "PetroChina",
                    "Petrobras",
                    "BP"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the company name with the number of gas station by a bar chart.",
            "Show the company name with the number of gas station. Show bar chart.",
            "For each company id, what are the companies and how many gas stations does each one operate. Plot them as bar chart."
        ]
    },
    "1517": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Headquarters",
            "y_name": "COUNT(Headquarters)",
            "x_data": [
                [
                    "Brazil",
                    "China",
                    "Netherlands",
                    "UK",
                    "USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Headquarters"
        },
        "nl_queries": [
            "Show the number of companies in each headquarter with a pie chart.",
            "How many companies in each headquarter? Plot a pie chart.",
            "Create a pie chart showing how many headquarters across headquarters."
        ]
    },
    "1518": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarters",
            "y_name": "COUNT(Headquarters)",
            "x_data": [
                [
                    "Brazil",
                    "China",
                    "Netherlands",
                    "UK",
                    "USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Headquarters"
        },
        "nl_queries": [
            "Show the number of companies in each headquarter with a bar chart.",
            "How many companies in each headquarter? Plot a bar chart.",
            "Bar chart of how many headquarters from each headquarters"
        ]
    },
    "1519": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Company , Rank FROM company ORDER BY Sales_billion DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Company , Rank FROM company ORDER BY Sales_billion DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Company",
            "y_name": "Rank",
            "x_data": [
                [
                    "Royal Dutch Shell",
                    "ExxonMobil",
                    "BP",
                    "PetroChina",
                    "General Electric",
                    "Petrobras",
                    "Berkshire Hathaway",
                    "HSBC",
                    "Wells Fargo",
                    "Industrial and Commercial Bank of China"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    11,
                    7,
                    3,
                    10,
                    8,
                    6,
                    9,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the company name and rank for all companies in the decreasing order of their sales in a bar chart.",
            "List the company name and rank for all companies in the decreasing order of their sales. Visualize by bar chart.",
            "Visualize a bar chart for what is the name and rank of every company ordered by descending number of sales?",
            "What is the name and rank of every company ordered by descending number of sales. Show bar chart."
        ]
    },
    "1991": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )",
                "binning": "BIN Date_Claim_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims ) BIN Date_Claim_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    2,
                    4,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Among all the claims, which claims have a claimed amount larger than the average? Please Bin date the claim was made into week day interval and count them to show a bar chart.",
            "For all the claims whose claimed amount is larger than the average, bin the claim date into day of week interval and count them for visualizing a bar chart."
        ]
    },
    "1992": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )",
                "binning": "BIN Date_Claim_Settled BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims ) BIN Date_Claim_Settled BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    2,
                    0,
                    0,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Settled BY WEEKDAY"
        },
        "nl_queries": [
            "Among all the claims, which claims have a claimed amount larger than the average? Please Bin the date it was settled into weekday interval and count them to show a bar chart.",
            "For all the claims whose claimed amount is larger than the average, bin the settlement date into the day of week interval and count them for visualizing a bar chart."
        ]
    },
    "1993": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.Customer_Details , T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.Customer_Details , T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Customer_Details",
            "y_name": "Customer_ID",
            "x_data": [
                [
                    "Ellsworth Paucek",
                    "Mrs. Hanna Willms",
                    "Dr. Diana Rath",
                    "Lauriane Ferry PhD"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the the customer details and id for the customers who had more than one policy. Show the proportion."
        ]
    },
    "1994": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Customer_Details , T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Customer_Details , T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Customer_Details",
            "y_name": "Customer_ID",
            "x_data": [
                [
                    "Ellsworth Paucek",
                    "Mrs. Hanna Willms",
                    "Dr. Diana Rath",
                    "Lauriane Ferry PhD"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the the customer details and id for the customers who had more than one policy. "
        ]
    },
    "1995": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made ASC",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made ASC BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "COUNT(Date_Payment_Made)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    9,
                    7
                ],
                [
                    12,
                    7
                ],
                [
                    15,
                    11
                ],
                [
                    18,
                    12
                ]
            ],
            "classify": [
                "American Express",
                "Discover Card",
                "MasterCard",
                "Visa"
            ],
            "describe": "GROUP BY Payment_Method_Code, BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the Year interval and then shows the amount of each payment categorized by the payment method code, and then sort the bars in ascending order of date."
        ]
    },
    "1996": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made ASC",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made ASC BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    0,
                    177130
                ],
                [
                    232825,
                    0
                ],
                [
                    1327865,
                    1204000
                ],
                [
                    787370,
                    7343
                ]
            ],
            "classify": [
                "American Express",
                "Discover Card",
                "MasterCard",
                "Visa"
            ],
            "describe": "GROUP BY Payment_Method_Code, BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the Year interval and then compute the total amount of each payment categorized by the payment method code, and then sort the bars in ascending order of date."
        ]
    },
    "1997": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made ASC",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made ASC BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    0,
                    25304.285714285714
                ],
                [
                    19402.083333333332,
                    0
                ],
                [
                    88524.33333333333,
                    109454.54545454546
                ],
                [
                    43742.77777777778,
                    611.9166666666666
                ]
            ],
            "classify": [
                "American Express",
                "Discover Card",
                "MasterCard",
                "Visa"
            ],
            "describe": "GROUP BY Payment_Method_Code, BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the Year interval and then shows the average of the amount of each payment categorized by the payment method code, and then sort the bars in ascending order of date."
        ]
    },
    "1998": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made ASC",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made ASC BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "COUNT(Date_Payment_Made)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    1,
                    0,
                    1,
                    1
                ],
                [
                    1,
                    0,
                    1,
                    0,
                    1,
                    1,
                    3
                ],
                [
                    0,
                    0,
                    1,
                    0,
                    0,
                    2,
                    1
                ]
            ],
            "classify": [
                "American Express",
                "Discover Card",
                "MasterCard",
                "Visa"
            ],
            "describe": "GROUP BY Payment_Method_Code, BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the day of the week interval and then shows the amount of each payment categorized by the payment method code, and then sort the bars in ascending order of date."
        ]
    },
    "1999": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments  ORDER BY Date_Payment_Made ASC",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments  ORDER BY Date_Payment_Made ASC BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "COUNT(Date_Payment_Made)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    9,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the day of the week interval and then shows the amount of each payment, and then sort the bars in ascending order of date."
        ]
    },
    "2000": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made ASC",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made ASC BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    177130,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    123255,
                    0,
                    71246,
                    38324
                ],
                [
                    423154,
                    0,
                    407235,
                    0,
                    241730,
                    456098,
                    1003648
                ],
                [
                    0,
                    0,
                    172309,
                    0,
                    0,
                    466750,
                    155654
                ]
            ],
            "classify": [
                "American Express",
                "Discover Card",
                "MasterCard",
                "Visa"
            ],
            "describe": "GROUP BY Payment_Method_Code, BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the day of the day of the week interval and then compute the total amount of each payment categorized by the payment method code, and then sort the bars in ascending order of date."
        ]
    },
    "2001": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made ASC",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made ASC BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    177130,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    123255,
                    0,
                    71246,
                    38324
                ],
                [
                    423154,
                    0,
                    407235,
                    0,
                    241730,
                    456098,
                    334549.3333333333
                ],
                [
                    0,
                    0,
                    172309,
                    0,
                    0,
                    233375,
                    155654
                ]
            ],
            "classify": [
                "American Express",
                "Discover Card",
                "MasterCard",
                "Visa"
            ],
            "describe": "GROUP BY Payment_Method_Code, BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the day of the week interval and then compute the average amount of each payment categorized by the payment method code, and then sort the bars in ascending order of date."
        ]
    },
    "2002": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments  ORDER BY Date_Payment_Made ASC",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments  ORDER BY Date_Payment_Made ASC BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    2348060,
                    1388473
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the Year interval and then shows the total amount of each payment, and then sort the bars in ascending order of date."
        ]
    },
    "2003": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments  ORDER BY Date_Payment_Made ASC",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments  ORDER BY Date_Payment_Made ASC BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    260895.55555555556,
                    231412.16666666666
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the Year interval and then shows the average amount of each payment, and then sort the bars in ascending order of date."
        ]
    },
    "2004": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments  ORDER BY Date_Payment_Made ASC",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments  ORDER BY Date_Payment_Made ASC BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "COUNT(Date_Payment_Made)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    2,
                    1,
                    2,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the day of the week interval and then shows the amount of each payment, and then sort the bars in ascending order of date."
        ]
    },
    "2005": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , Amount_Payment FROM Payments GROUP BY Payment_Method_Code ,  Date_Payment_Made ORDER BY Date_Payment_Made ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_Payment_Made , Amount_Payment FROM Payments GROUP BY Payment_Method_Code ,  Date_Payment_Made ORDER BY Date_Payment_Made ASC"
        },
        "chart": "Grouping Line",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_Payment_Made",
            "y_name": "Amount_Payment",
            "x_data": [
                [
                    "2017-05-03",
                    "2017-05-04",
                    "2017-05-28",
                    "2017-06-24",
                    "2017-07-31",
                    "2017-08-06",
                    "2017-10-07",
                    "2017-12-16",
                    "2018-01-10",
                    "2018-01-19",
                    "2018-01-28",
                    "2018-02-16",
                    "2018-02-18",
                    "2018-02-24"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    177130,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    123255,
                    0,
                    0,
                    0,
                    38324,
                    71246,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    448613,
                    456098,
                    423154,
                    0,
                    0,
                    0,
                    407235,
                    0,
                    319142,
                    241730,
                    235893,
                    0
                ],
                [
                    172309,
                    0,
                    155654,
                    0,
                    0,
                    0,
                    0,
                    459407,
                    0,
                    0,
                    0,
                    0,
                    0,
                    7343
                ]
            ],
            "classify": [
                "American Express",
                "Discover Card",
                "MasterCard",
                "Visa"
            ],
            "describe": "GROUP BY Payment_Method_Code, GROUP BY Date_Payment_Made"
        },
        "nl_queries": [
            "Give me a line chart to show the trend of the amount of each payment of different payment methods, ordered by the payment date in ascending order."
        ]
    },
    "2006": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments  ORDER BY Date_Payment_Made ASC",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments  ORDER BY Date_Payment_Made ASC BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    423154,
                    0,
                    579544,
                    123255,
                    418860,
                    994094,
                    1197626
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the day of the week interval and then sum the amount of each payment as Y, and then sort the bars in ascending order of date."
        ]
    },
    "2007": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments  ORDER BY Date_Payment_Made ASC",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments  ORDER BY Date_Payment_Made ASC BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    423154,
                    0,
                    289772,
                    123255,
                    209430,
                    248523.5,
                    239525.2
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the day of the week interval and then compute the average amount of each payment, and then sort the bars in ascending order of date."
        ]
    },
    "2008": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_Payment_Made",
            "y_name": "COUNT(Date_Payment_Made)",
            "x_data": [
                [
                    "2017-05-03",
                    "2017-05-04",
                    "2017-05-28",
                    "2017-06-24",
                    "2017-07-31",
                    "2017-08-06",
                    "2017-10-07",
                    "2017-12-16",
                    "2018-01-10",
                    "2018-01-19",
                    "2018-01-28",
                    "2018-02-16",
                    "2018-02-18",
                    "2018-02-24"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_Payment_Made"
        },
        "nl_queries": [
            "Show me the trend using a line chart that group and count payment date, and then sort the bars in ascending order of date."
        ]
    },
    "2009": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Payment_Method_Code",
            "y_name": "COUNT(Payment_Method_Code)",
            "x_data": [
                [
                    "American Express",
                    "Discover Card",
                    "MasterCard",
                    "Visa"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    7,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "Show me the proportion of each payment method code using a pie chart.",
            "I want to know the proportion of the total number for each payment method code."
        ]
    },
    "2010": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "COUNT(Payment_Method_Code)",
            "x_data": [
                [
                    "American Express",
                    "Discover Card",
                    "MasterCard",
                    "Visa"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    7,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "Compare the frequency of each payment method code using a bar chart.",
            "Plot the number of payment method code by grouped by payment method code as a bar graph"
        ]
    },
    "2011": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "American Express",
                    "Discover Card",
                    "MasterCard",
                    "Visa"
                ]
            ],
            "y_data": [
                [
                    177130,
                    232825,
                    2531865,
                    794713
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "How many total amounts of payments by each method code? You can give me a bar chart.",
            "Please use a bar chart to show the total amount of payment by each payment method code.",
            "Bar chart of sum amount payment from each payment method code"
        ]
    },
    "2012": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "American Express",
                    "Discover Card",
                    "MasterCard",
                    "Visa"
                ]
            ],
            "y_data": [
                [
                    177130,
                    77608.33333333333,
                    361695,
                    198678.25
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "What about the average amounts of payments by each method code? You can give me a bar chart.",
            "Please use a bar chart to show the average amount of payment by each payment method code.",
            "Bar graph to show the average of amount payment from different payment method code"
        ]
    },
    "2013": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Payment_Method_Code",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "American Express",
                    "Discover Card",
                    "MasterCard",
                    "Visa"
                ]
            ],
            "y_data": [
                [
                    177130,
                    232825,
                    2531865,
                    794713
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "What about the proportion of the total amounts of payments by each method code? You can give me a pie chart.",
            "Please use a pie chart to show the proportion of the total amount of payment by each payment method code.",
            "Create a pie chart showing total number of amount payment across payment method code."
        ]
    },
    "2014": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_Payment_Made",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "2017-05-03",
                    "2017-05-04",
                    "2017-05-28",
                    "2017-06-24",
                    "2017-07-31",
                    "2017-08-06",
                    "2017-10-07",
                    "2017-12-16",
                    "2018-01-10",
                    "2018-01-19",
                    "2018-01-28",
                    "2018-02-16",
                    "2018-02-18",
                    "2018-02-24"
                ]
            ],
            "y_data": [
                [
                    172309,
                    123255,
                    604267,
                    456098,
                    423154,
                    38324,
                    71246,
                    459407,
                    407235,
                    177130,
                    319142,
                    241730,
                    235893,
                    7343
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_Payment_Made"
        },
        "nl_queries": [
            "Show the trend about the total amount of each payment about the payment day, line chart. Note that, you should order the payment day in ascending order.",
            "Return a trend line with sorting the payment day in ascending order to show the total amount of payment by each payment day."
        ]
    },
    "2015": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_Payment_Made",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "2017-05-03",
                    "2017-05-04",
                    "2017-05-28",
                    "2017-06-24",
                    "2017-07-31",
                    "2017-08-06",
                    "2017-10-07",
                    "2017-12-16",
                    "2018-01-10",
                    "2018-01-19",
                    "2018-01-28",
                    "2018-02-16",
                    "2018-02-18",
                    "2018-02-24"
                ]
            ],
            "y_data": [
                [
                    172309,
                    123255,
                    302133.5,
                    456098,
                    423154,
                    38324,
                    71246,
                    459407,
                    407235,
                    177130,
                    319142,
                    241730,
                    235893,
                    7343
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_Payment_Made"
        },
        "nl_queries": [
            "Return a trend line to show the average amount of payment by each payment day.",
            "Show the trend about the average amount of each payment about the payment day, line chart. Note that, you should order the payment day in ascending order.",
            "Return a trend line with sorting the payment day in ascending order to show the average amount of payment by each payment day."
        ]
    },
    "2016": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.Claim_ID , count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.Claim_ID , count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Claim_ID",
            "y_name": "count(*)",
            "x_data": [
                [
                    486,
                    563,
                    569,
                    571,
                    621,
                    761,
                    801,
                    843,
                    957
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    2,
                    2,
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "plot scatter on how many settlements does each claim correspond to? List the claim id and the number of settlements.",
            "Scatter. how many settlements does each claim correspond to? List the claim id and the number of settlements.",
            "How many settlements does each claim correspond to? List the claim id and the number of settlements with a scatter chart.",
            "How many settlements does each claim correspond to? List the claim id and the number of settlements. Visualize by scatter chart.",
            "Find the number of settlements each claim corresponds to. Show the number together with the claim id. Visualize by scatter chart."
        ]
    },
    "2017": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements",
                "binning": "BIN Date_Claim_Settled BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements BIN Date_Claim_Settled BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    5,
                    10
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Settled BY YEAR"
        },
        "nl_queries": [
            "Bin the claim date into Year interval and count them for visualizing a bar chart.",
            "Bar chart x axis date claim settled y axis the number of date claim settled"
        ]
    },
    "2018": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements",
                "binning": "BIN Date_Claim_Settled BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements BIN Date_Claim_Settled BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    4,
                    2,
                    2,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Settled BY WEEKDAY"
        },
        "nl_queries": [
            "Bin the settlement date for each settlement case into the day of week interval and count them for visualizing a bar chart.",
            "Bar chart x axis date claim settled y axis the number of date claim settled"
        ]
    },
    "2019": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements",
                "binning": "BIN Date_Claim_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements BIN Date_Claim_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "2016",
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    4,
                    8,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY YEAR"
        },
        "nl_queries": [
            "Bin the claim date into the Year interval and count them for visualizing a bar chart.",
            "Create a bar chart showing the number of date claim made across date claim made"
        ]
    },
    "2020": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements",
                "binning": "BIN Date_Claim_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements BIN Date_Claim_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2,
                    0,
                    3,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Bin the claim date into the Day of Week interval and count them for visualizing a bar chart.",
            "Create a bar chart showing the number of date claim made across date claim made"
        ]
    },
    "2021": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements GROUP BY Date_Claim_Settled",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements GROUP BY Date_Claim_Settled"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "2017-10-06",
                    "2017-11-04",
                    "2017-11-15",
                    "2017-11-30",
                    "2017-12-24",
                    "2018-01-16",
                    "2018-01-27",
                    "2018-02-04",
                    "2018-02-11",
                    "2018-02-14",
                    "2018-02-15",
                    "2018-02-20",
                    "2018-03-02"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_Claim_Settled"
        },
        "nl_queries": [
            "Show the trend about the frequency of the claim dates.",
            "Tell me the trend about the claim dates using a trend line.",
            "Plot date claim settled by the number of date claim settled as a line chart"
        ]
    },
    "2022": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )",
                "binning": "BIN Date_Claim_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims ) BIN Date_Claim_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "2016",
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    1,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY YEAR"
        },
        "nl_queries": [
            "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date, and count them by a bar chart",
            "Return the claim start date for the claims whose claimed amount is no more than the averag, and count them by a bar chart",
            "Return the number of the claim start date for the claims whose claimed amount is no more than the average",
            "A bar chart for returning the number of the claim start date for the claims whose claimed amount is no more than the average"
        ]
    },
    "2023": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )",
                "binning": "BIN Date_Claim_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims ) BIN Date_Claim_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    1,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date, and count them by a bar chart",
            "Return the claim start date for the claims whose claimed amount is no more than the averag, and count them by a bar chart",
            "Return the number of the claim start date for the claims whose claimed amount is no more than the average",
            "A bar chart for returning the number of the claim start date for the claims whose claimed amount is no more than the average"
        ]
    },
    "2024": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa' BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "COUNT(Date_Payment_Made)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and count them for a bar chart.",
            "For those payments processed with Visa, show me the number of payments of each year using a bar chart."
        ]
    },
    "2027": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa' BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    787370,
                    7343
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and compute the total amount payment as the Y-axis.",
            "Sum the amount for all the payments processed with Visa by each year using a bar chart."
        ]
    },
    "2028": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa' BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    262456.6666666667,
                    7343
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and compute the average amount payment as the Y-axis.",
            "Calculate the average of amount for all the payments processed with Visa by each year using a bar chart."
        ]
    },
    "2030": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa'",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa'"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "Amount_Payment",
            "x_data": [
                [
                    "2017-12-16",
                    "2018-02-24",
                    "2017-05-28",
                    "2017-05-03"
                ]
            ],
            "y_data": [
                [
                    459407,
                    7343,
                    155654,
                    172309
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Which Payments were processed with Visa? List the date and the amount using a bar chart.",
            "Give me a histogram to show the date and the amount for all the payments processed with Visa.",
            "Show the amount for all the payments processed with Visa distributing the payment date with a bar chart."
        ]
    },
    "2031": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa' BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "COUNT(Date_Payment_Made)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    0,
                    0,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "For those payments processed with Visa, show me the number of payments of each day of the week using a bar chart.",
            "For those payments processed with Visa, bin the payment day into the Day of week interval and count them for a bar chart."
        ]
    },
    "2032": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Payment_ID , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa'",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Payment_ID , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa'"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Payment_ID",
            "y_name": "Amount_Payment",
            "x_data": [
                [
                    678,
                    754,
                    779,
                    791
                ]
            ],
            "y_data": [
                [
                    459407,
                    7343,
                    155654,
                    172309
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Which Payments were processed with Visa? Get the payment Id, the date and the amount for visualizing a scatter chart.",
            "Give me the payment Id, and the amount for all the payments processed with Visa using a scatter chart."
        ]
    },
    "2035": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa' BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    172309,
                    0,
                    0,
                    466750,
                    155654
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into the Day of Week interval and compute the total amount payment as the Y-axis.",
            "Sum the amount for all the payments processed with Visa of each day of week using a bar chart."
        ]
    },
    "2036": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa' BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    172309,
                    0,
                    0,
                    233375,
                    155654
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into the Day of Week interval and compute the average amount payment as the Y-axis.",
            "Calculate the average amount for all the payments processed with Visa of each day of week using a bar chart."
        ]
    },
    "2051": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Date , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Date , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Sales",
            "x_data": [
                [
                    "December 16, 2001",
                    "December 22, 2001",
                    "December 30, 2001",
                    "November 12, 2001",
                    "November 18, 2001",
                    "November 4, 2001",
                    "October 14, 2001",
                    "October 29, 2001",
                    "September 9, 2001"
                ]
            ],
            "y_data": [
                [
                    2804,
                    1934,
                    3798,
                    6532,
                    3421,
                    1232,
                    4798,
                    1763,
                    798
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the date and the corresponding sales of the journal which did not have any of the listed editors serving on the committee by a bar chart."
        ]
    },
    "2052": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Theme , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Theme , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Theme",
            "y_name": "Sales",
            "x_data": [
                [
                    "Green Bay Packers",
                    "at Oakland Raiders",
                    "Cleveland Browns",
                    "Baltimore Ravens",
                    "at Cincinnati Bengals",
                    "Jacksonville Jaguars",
                    "Tampa Bay Buccaneers",
                    "at Pittsburgh Steelers",
                    "Miami Dolphins"
                ]
            ],
            "y_data": [
                [
                    2804,
                    1934,
                    3798,
                    6532,
                    3421,
                    1232,
                    4798,
                    1763,
                    798
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a bar chart to show the theme and their sales of the journal which did not have any of the listed editors serving on the committee."
        ]
    },
    "2053": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM editor",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM editor"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Kamila Porczyk",
                    "Anna Powierza",
                    "Marek Siudym",
                    "Piotr Pręgowski",
                    "Szymon Wydra",
                    "Władysław Grzywna",
                    "Mariusz Zalejski",
                    "Grażyna Wolszczak",
                    "Maria Góralczyk"
                ]
            ],
            "y_data": [
                [
                    34,
                    35,
                    21,
                    43,
                    20,
                    24,
                    25,
                    54,
                    38
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for the names and the ages of editors.",
            "Visualize a bar chart to show editors' names and their ages.",
            "What are the names and ages of editors? Show me a bar chart.",
            "Compare each editors' ages using a bar chart.",
            "Draw a bar chart of name versus age"
        ]
    },
    "2055": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM editor GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM editor GROUP BY Name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Grażyna Wolszczak",
                    "Kamila Porczyk",
                    "Marek Siudym",
                    "Maria Góralczyk",
                    "Piotr Pręgowski",
                    "Władysław Grzywna"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Group and count the name attribute for visualizing a bar chart.",
            "Bar chart x axis name y axis how many name"
        ]
    },
    "2058": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Theme , Age FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID ORDER BY T3.Theme ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Theme , Age FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID ORDER BY T3.Theme ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Theme",
            "y_name": "Age",
            "x_data": [
                [
                    "Cincinnati Bengals",
                    "Pittsburgh Steelers",
                    "at Baltimore Ravens",
                    "at Cleveland Browns",
                    "at Detroit Lions",
                    "at Jacksonville Jaguars",
                    "at Minnesota Vikings"
                ]
            ],
            "y_data": [
                [
                    54,
                    24,
                    54,
                    38,
                    21,
                    43,
                    34
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the ages of editors and the theme of journals for which they serve on committees by a bar chart, and list the bars in ascending alphabetical order of theme."
        ]
    },
    "2059": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Grażyna Wolszczak",
                    "Kamila Porczyk",
                    "Maria Góralczyk",
                    "Władysław Grzywna"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Show the number of the names of editors that are on the committee of journals with sales bigger than 3000.",
            "A pie chart for showing the number of the names of editors that are on the committee of journals with sales bigger than 3000.",
            "Show the names of editors that are on the committee of journals with sales bigger than 3000, and count them by a pie chart"
        ]
    },
    "2060": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Grażyna Wolszczak",
                    "Kamila Porczyk",
                    "Maria Góralczyk",
                    "Władysław Grzywna"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Show the number of the names of editors that are on the committee of journals with sales bigger than 3000.",
            "A bar chart for showing the number of the names of editors that are on the committee of journals with sales bigger than 3000.",
            "Show the names of editors that are on the committee of journals with sales bigger than 3000, and count them by a bar chart"
        ]
    },
    "2061": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.Editor_ID , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.Editor_ID , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Editor_ID",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    1,
                    3,
                    4,
                    6,
                    8,
                    9
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a scatter chart of showing the id and the number of journal committees they are on.",
            "Plot the id and the number of journal committees they are on in a scatter chart."
        ]
    },
    "2062": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Editor_ID",
            "x_data": [
                [
                    "Kamila Porczyk",
                    "Marek Siudym",
                    "Piotr Pręgowski",
                    "Władysław Grzywna",
                    "Grażyna Wolszczak",
                    "Maria Góralczyk"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    4,
                    6,
                    8,
                    9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Just show the id and name of each editor using a bar chart."
        ]
    },
    "2063": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Kamila Porczyk",
                    "Marek Siudym",
                    "Piotr Pręgowski",
                    "Władysław Grzywna",
                    "Grażyna Wolszczak",
                    "Maria Góralczyk"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the name of each editor and the number of journal committees they are on using a bar chart.",
            "Just compare the number of journal committees of each editor using a histogram."
        ]
    },
    "2064": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.Editor_ID , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.Editor_ID , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY Name"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Editor_ID",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    8
                ],
                [
                    1
                ],
                [
                    3
                ],
                [
                    9
                ],
                [
                    4
                ],
                [
                    6
                ]
            ],
            "y_data": [
                [
                    2
                ],
                [
                    1
                ],
                [
                    1
                ],
                [
                    1
                ],
                [
                    1
                ],
                [
                    1
                ]
            ],
            "classify": [
                "Grażyna Wolszczak",
                "Kamila Porczyk",
                "Marek Siudym",
                "Maria Góralczyk",
                "Piotr Pręgowski",
                "Władysław Grzywna"
            ],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Give me a scatter chart to show the id and the number of journal committees of editors and categorized by editors' names.",
            "scatter chart, two attributes: the id of editors and the number of journal committees of editors, and categorized by editors' names."
        ]
    },
    "2620": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"
        },
        "chart": "Pie",
        "hardness": "Extra Hard",
        "db_id": "products_gen_characteristics",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_category_description",
            "y_name": "COUNT(product_category_description)",
            "x_data": [
                [
                    "Herbs",
                    "Seeds",
                    "Spices"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_category_description"
        },
        "nl_queries": [
            "Find the number of the category descriptions of the products whose descriptions include letter 't'.",
            "A pie chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?",
            "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a pie chart",
            "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?",
            "Find the category descriptions of the products whose descriptions include letter 't', and count them by a pie chart",
            "A pie chart for finding the number of the category descriptions of the products whose descriptions include letter 't'."
        ]
    },
    "2621": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "products_gen_characteristics",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_category_description",
            "y_name": "COUNT(product_category_description)",
            "x_data": [
                [
                    "Herbs",
                    "Seeds",
                    "Spices"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_category_description"
        },
        "nl_queries": [
            "Find the number of the category descriptions of the products whose descriptions include letter 't'.",
            "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't'.",
            "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart",
            "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?",
            "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart",
            "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?"
        ]
    },
    "2703": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT donator_name , sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT donator_name , sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "donator_name",
            "y_name": "sum(amount)",
            "x_data": [
                [
                    "San José de Ocoa",
                    "Valverde",
                    "Distrito Nacional",
                    "Monte Plata",
                    "San Cristóbal",
                    "Santo Domingo Este",
                    "Santiago",
                    "La Vega",
                    "Duarte",
                    "Com. Dom. En Estados Unidos",
                    "Peravia"
                ]
            ],
            "y_data": [
                [
                    9.83,
                    9.73,
                    9.55,
                    9.51,
                    9.05,
                    8.99,
                    8.85,
                    8.82,
                    8.53,
                    8.43,
                    8.33
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List each donator name and the amount of endowment in descending order of the amount of endowment by a bar chart.",
            "List each donator name and the amount of endowment in descending order of the amount of endowment. Plot them as bar chart."
        ]
    },
    "2704": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County , count(*) FROM school GROUP BY county",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County",
            "y_name": "count(*)",
            "x_data": [
                [
                    "20 Elkhart",
                    "46 LaPorte 71 St. Joseph",
                    "50 Marshall",
                    "71 St. Joseph",
                    "75 Starke"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show each county along with the number of schools.",
            "Return a bar chart showing the number of schools in each county.",
            "Draw a bar chart of county versus the total number "
        ]
    },
    "2705": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT County , sum(enrollment) FROM school GROUP BY county"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "pie",
            "x_name": "County",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "20 Elkhart",
                    "46 LaPorte 71 St. Joseph",
                    "50 Marshall",
                    "71 St. Joseph",
                    "75 Starke"
                ]
            ],
            "y_data": [
                [
                    601,
                    852,
                    1098,
                    984,
                    620
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the proportion of the total enrollment in each county with a pie chart.",
            "Please give me a pie chart for the proportion of the total enrollment in each county.",
            "Compute the total sum enrollment across county as a pie chart."
        ]
    },
    "2706": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "20 Elkhart",
                    "46 LaPorte 71 St. Joseph",
                    "50 Marshall",
                    "71 St. Joseph",
                    "75 Starke"
                ]
            ],
            "y_data": [
                [
                    601,
                    852,
                    1098,
                    984,
                    620
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Compare the total enrollment in each county with a bar chart.",
            "Please give me a bar chart for the total enrollment in each county.",
            "Show sum enrollment from each county"
        ]
    },
    "2707": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT County , count(*) FROM school GROUP BY county",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT County , count(*) FROM school GROUP BY county"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "pie",
            "x_name": "County",
            "y_name": "count(*)",
            "x_data": [
                [
                    "20 Elkhart",
                    "46 LaPorte 71 St. Joseph",
                    "50 Marshall",
                    "71 St. Joseph",
                    "75 Starke"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show each county along with the number of schools with a pie chart.",
            "What is the proportion of the number of schools in different counties?",
            "Create a pie chart showing the total number across county."
        ]
    },
    "2708": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT count(*) , sum(enrollment) FROM school GROUP BY county",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM school GROUP BY county"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "count(*)",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    1,
                    1,
                    3,
                    2,
                    1
                ]
            ],
            "y_data": [
                [
                    601,
                    852,
                    1098,
                    984,
                    620
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between the number of schools in each county and total enrollment in each county by a scatter plot.",
            "Plot the number of schools and total enrollment in each county with a scatter chart.",
            "Plot a scatter chart, count(*) by sum enrollment."
        ]
    },
    "2709": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT count(*) , sum(enrollment) FROM school GROUP BY County",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM school GROUP BY County"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "count(*)",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    1
                ],
                [
                    1
                ],
                [
                    3
                ],
                [
                    2
                ],
                [
                    1
                ]
            ],
            "y_data": [
                [
                    601
                ],
                [
                    852
                ],
                [
                    1098
                ],
                [
                    984
                ],
                [
                    620
                ]
            ],
            "classify": [
                "20 Elkhart",
                "46 LaPorte 71 St. Joseph",
                "50 Marshall",
                "71 St. Joseph",
                "75 Starke"
            ],
            "describe": "GROUP BY County"
        },
        "nl_queries": [
            "Show the relationship between the number of schools in each county and total enrollment in each county by a scatter plot.",
            "Plot the number of schools and total enrollment in each county with a scatter chart.",
            "Show count(*) vs total number of enrollment as scatter plot use a different color for each County"
        ]
    },
    "2863": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Damage_millions_USD FROM storm ORDER BY max_speed DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Damage_millions_USD FROM storm ORDER BY max_speed DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Damage_millions_USD",
            "x_data": [
                [
                    "Nine",
                    "Six",
                    "One",
                    "Five",
                    "Eight",
                    "Seven",
                    "Two",
                    "Three",
                    "Four",
                    "9 cyclones"
                ]
            ],
            "y_data": [
                [
                    13,
                    0.039,
                    13,
                    1.49,
                    13,
                    13,
                    10.75,
                    13,
                    4.05,
                    29.3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List name and damage for all storms in a descending order of max speed with a bar chart.",
            "List name and damage for all storms in a descending order of max speed. Plot them as bar chart.",
            "Display a bar chart for what are the names and damage in millions for storms, ordered by their max speeds descending?",
            "Visualize a bar chart for what are the names and damage in millions for storms, ordered by their max speeds descending?",
            "What are the names and damage in millions for storms, ordered by their max speeds descending. Visualize by bar chart."
        ]
    },
    "2864": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "One",
                    "Three",
                    "Four",
                    "Five"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the name for storms and the number of affected regions for each storm with a pie chart.",
            "List the name for storms and the number of affected regions for each storm. Plot them as pie chart.",
            "A pie chart about how many regions were affected by each storm?",
            "Return a pie chart on how many regions were affected by each storm?",
            "How many regions were affected by each storm. Show a pie chart."
        ]
    },
    "2865": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "One",
                    "Three",
                    "Four",
                    "Five"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the name for storms and the number of affected regions for each storm with a bar chart.",
            "List the name for storms and the number of affected regions for each storm. ",
            "Return a bar chart on how many regions were affected by each storm?",
            "how many regions were affected by each storm?",
            "How many regions were affected by each storm. Visualize by bar chart."
        ]
    },
    "2866": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Region_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Afghanistan",
                    "Albania",
                    "Algeria",
                    "Denmark"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the name for regions and the number of storms for each region in a pie chart.",
            "Show the name for regions and the number of storms for each region. Plot them as pie chart.",
            "Give the proportion of how many storms occured in each region?",
            "Show me a pie chart for how many storms occured in each region?",
            "How many storms occured in each region. Plot them as pie chart."
        ]
    },
    "2867": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Region_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Afghanistan",
                    "Albania",
                    "Algeria",
                    "Denmark"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the name for regions and the number of storms for each region by a bar chart.",
            "Show the name for regions and the number of storms for each region. ",
            "Show me a bar chart for how many storms occured in each region?",
            "Draw a bar chart for how many storms occured in each region?",
            "How many storms occured in each region. Visualize by bar chart."
        ]
    },
    "2868": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Number_Deaths",
            "x_data": [
                [
                    "Two",
                    "Three",
                    "Four",
                    "Five",
                    "Six",
                    "9 cyclones"
                ]
            ],
            "y_data": [
                [
                    7,
                    52,
                    7,
                    3,
                    2,
                    71
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart.",
            "For all storms with at least 1 death, compare the number of deaths by name.",
            "For all storms with at least 1 death, compare the number of deaths by name with a bar graph."
        ]
    },
    "2869": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Dates_active",
            "y_name": "Number_Deaths",
            "x_data": [
                [
                    "August3–August10",
                    "August5–August14",
                    "August26–September2",
                    "September7–September17",
                    "September18–September25",
                    "May19 –October26"
                ]
            ],
            "y_data": [
                [
                    7,
                    52,
                    7,
                    3,
                    2,
                    71
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart.",
            "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute.",
            "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph."
        ]
    },
    "3038": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Ananthapuri Express",
                    "Guruvayur Express",
                    "Island Express",
                    "Jayanthi Janatha Express",
                    "Madurai Fast Passenger",
                    "Parasuram Express",
                    "Quilon Fast Passenger"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Show the name of all trains, count the name and show them with a bar chart.",
            "Visualize a bar chart, group by name and compute each group's total number.",
            "Plot the number of name by grouped by name as a bar graph"
        ]
    },
    "3043": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    10
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "A bar chart shows how many locations.",
            "How many locations? Draw a bar chart.",
            "Bar graph to show how many location from different location"
        ]
    },
    "3044": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Location",
            "y_name": "SUM(Number_of_Platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    13,
                    17,
                    140
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "What is the number of platforms for each location? Show the proportion with a pie chart.",
            "Give me a pie chart about the proportion of the number of platforms in different locations.",
            "Compute the total sum number of platforms across location as a pie chart."
        ]
    },
    "3045": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "SUM(Number_of_Platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    13,
                    17,
                    140
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "What is the number of platforms for each location? Show the comparison with a bar chart.",
            "Give me a bar chart about the number of platforms in different locations",
            "Create a bar chart showing total number of number of platforms across location"
        ]
    },
    "3046": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "AVG(Number_of_Platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    13,
                    17,
                    14
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "Give me a bar chart about the average of number_of_platforms in different locations.",
            "What is the average of number_of_platforms for each location? Show the comparison with a bar chart.",
            "Bar chart x axis location y axis the average of number of platforms"
        ]
    },
    "3047": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM station GROUP BY Location"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    10
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "How many different locations? Show the proportion with a pie chart.",
            "Give me a pie chart about the proportion of the different locations.",
            "I want to know the proportion of the total number for each location."
        ]
    },
    "3049": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "Total_Passengers",
            "x_data": [
                [
                    "Birmingham New Street",
                    "Glasgow Central"
                ]
            ],
            "y_data": [
                [
                    36.330999999999996,
                    29.658
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For all train stations not in London with a pie chart, show me the proportion of total_passengers of different names.",
            "Show the names and total passengers for all train stations not in London. Plot them as a pie chart."
        ]
    },
    "3050": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Total_Passengers",
            "x_data": [
                [
                    "Birmingham New Street",
                    "Glasgow Central"
                ]
            ],
            "y_data": [
                [
                    36.330999999999996,
                    29.658
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the names and total passengers for all train stations not in London with a bar chart.",
            "Show the names and total passengers for all train stations not in London. Visualize by bar chart."
        ]
    },
    "3051": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Location",
            "y_name": "sum(number_of_platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    13,
                    17,
                    140
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all locations and the total number of platforms for all train stations in each location in a pie chart.",
            "Show the proportion of the total number of platforms of locations in each location in a pie chart.",
            "Give me a pie to show total number of number of platforms from different location."
        ]
    },
    "3052": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "sum(number_of_platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    13,
                    17,
                    140
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all locations and the total number of platforms for all train stations in each location in a bar chart.",
            "Show the total number of platforms of locations in each location in a bar chart.",
            "Bar chart of total number of number of platforms from each location"
        ]
    },
    "3053": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "sum(total_passengers)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    36.330999999999996,
                    29.658,
                    498.50700000000006
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the total number of passengers of each location in a bar chart.",
            "Visualize a bar chart showing each location's total number of passengers.",
            "Bar chart x axis location y axis sum total passengers"
        ]
    },
    "3054": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Location",
            "y_name": "sum(total_passengers)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    36.330999999999996,
                    29.658,
                    498.50700000000006
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the proportion of the total number of passengers in each location with a pie chart.",
            "Give me a pie about the proportion of each location's total number of passengers.",
            "Compute the total total number of total passengers across location as a pie chart."
        ]
    },
    "3055": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY LOCATION",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY LOCATION"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "sum(number_of_platforms)",
            "y_name": "sum(total_passengers)",
            "x_data": [
                [
                    13,
                    17,
                    140
                ]
            ],
            "y_data": [
                [
                    36.330999999999996,
                    29.658,
                    498.50700000000006
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me the correlation between the number of platforms and the number of total_passengers in a scatter chart.",
            "Draw a scatter plot about the correlation between the number of platforms and the number of total_passengers.",
            "Plot a scatter chart, sum(number of platforms) by sum total passengers."
        ]
    },
    "3056": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY Location",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY Location"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "sum(number_of_platforms)",
            "y_name": "sum(total_passengers)",
            "x_data": [
                [
                    13
                ],
                [
                    17
                ],
                [
                    140
                ]
            ],
            "y_data": [
                [
                    36.330999999999996
                ],
                [
                    29.658
                ],
                [
                    498.50700000000006
                ]
            ],
            "classify": [
                "Birmingham",
                "Glasgow",
                "London"
            ],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "For each location, give me a scatter chart showing the relationships between the number of total_passengers and the number of platforms.",
            "Draw a scatterplot of sum(number of platforms) vs total number of total passengers where sum(number of platforms) is on the x-axis and points are colored by Location"
        ]
    },
    "3259": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Venue",
            "y_name": "COUNT(Venue)",
            "x_data": [
                [
                    "Istanbul Turkey",
                    "London UK",
                    "New Jersey USA",
                    "New York USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Venue"
        },
        "nl_queries": [
            "A pie chart shows the venue for each workshop.",
            "Return the number of venues of each workshop in a pie chart.",
            "I want to know the proportion of the total number for each venue."
        ]
    },
    "3260": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Venue",
            "y_name": "COUNT(Venue)",
            "x_data": [
                [
                    "Istanbul Turkey",
                    "London UK",
                    "New Jersey USA",
                    "New York USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Venue"
        },
        "nl_queries": [
            "A bar chart shows the venue for each workshop.",
            "Return the number of venues of each workshop in a bar chart.",
            "Draw a bar chart that counts the number of venues of each workshop.",
            "Show the number of venue from each venue"
        ]
    },
    "3261": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Result",
            "y_name": "COUNT(Result)",
            "x_data": [
                [
                    "Accepted",
                    "Rejected"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Result"
        },
        "nl_queries": [
            "Group by the result and count them by a bar chart.",
            "For each submission, group its acceptance result and count them. Visualize them in a bar chart.",
            "Bar graph to show how many result from different result"
        ]
    },
    "3262": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Author , COUNT(Author) FROM submission GROUP BY Author"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Author",
            "y_name": "COUNT(Author)",
            "x_data": [
                [
                    "Jeff Lloyd",
                    "Sammy Green",
                    "Sherman Smith",
                    "Steve Niehaus",
                    "Steve Raible"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Author"
        },
        "nl_queries": [
            "Show the authors of their total submissions with a pie chart.",
            "Visualize a pie chart for how many authors submit to the workshop.",
            "Give me a pie to show the number of author from different author."
        ]
    },
    "3263": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Author",
            "y_name": "COUNT(Author)",
            "x_data": [
                [
                    "Jeff Lloyd",
                    "Sammy Green",
                    "Sherman Smith",
                    "Steve Niehaus",
                    "Steve Raible"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Author"
        },
        "nl_queries": [
            "Show the authors of their total submissions with a bar chart.",
            "Visualize a bar chart for how many authors submit to the workshop.",
            "Create a bar chart showing the number of author across author"
        ]
    },
    "3264": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Result",
            "y_name": "COUNT(Result)",
            "x_data": [
                [
                    "Accepted",
                    "Rejected"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Result"
        },
        "nl_queries": [
            "Compute the proportion of acceptance result, and return a pie chart.",
            "Draw a pie chart to show the proportion of acceptance result.",
            "For each submission, group its acceptance result and count them. Visualize them in a bar chart.",
            "I want to know the proportion of the total number for each result."
        ]
    },
    "3265": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Author",
            "y_name": "COUNT(DISTINCT T1.workshop_id)",
            "x_data": [
                [
                    "Jeff Lloyd",
                    "Sammy Green",
                    "Sherman Smith",
                    "Steve Niehaus",
                    "Steve Raible"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show each author and the number of workshops they submitted to in a pie chart.",
            "Show each author and the number of workshops they submitted to. Show a pie chart.",
            "Pie. how many workshops did each author submit to? Return the author name and the number of workshops.",
            "Visualize a pie chart with how many workshops did each author submit to? Return the author name and the number of workshops.",
            "How many workshops did each author submit to? Return the author name and the number of workshops by a pie chart.",
            "How many workshops did each author submit to? Return the author name and the number of workshops. Plot them as pie chart."
        ]
    },
    "3266": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Author",
            "y_name": "COUNT(DISTINCT T1.workshop_id)",
            "x_data": [
                [
                    "Jeff Lloyd",
                    "Sammy Green",
                    "Sherman Smith",
                    "Steve Niehaus",
                    "Steve Raible"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show each author and the number of workshops they submitted to with a bar chart.",
            "Show each author and the number of workshops they submitted to. Show bar chart.",
            "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops.",
            "Give me a histogram for how many workshops did each author submit to? Return the author name and the number of workshops.",
            "How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart.",
            "How many workshops did each author submit to? Return the author name and the number of workshops. Plot them as bar chart."
        ]
    },
    "3278": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Team , COUNT(*) FROM elimination GROUP BY Team"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Team",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Team Batista",
                    "Team Orton"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show different teams in eliminations and the number of eliminations from each team by a pie chart.",
            "Show different teams in eliminations and the number of eliminations from each team, and show me the proportion.",
            "Show me the proportion on how many eliminations did each team have?",
            "Pie chart about how many eliminations did each team have?",
            "How many eliminations did each team have. Plot them as pie chart.",
            "I want to know the proportion for each team.",
            "A pie chart about the proportion of the total number for each team."
        ]
    },
    "3279": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Team",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Team Batista",
                    "Team Orton"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show different teams in eliminations and the number of eliminations from each team by a bar chart.",
            "Show different teams in eliminations and the number of eliminations from each team. Visualize by bar chart.",
            "Return a bar chart on how many eliminations did each team have?",
            "A bar chart about how many eliminations did each team have?",
            "How many eliminations did each team have. Visualize by bar chart.",
            "Bar graph to show the total number from different team"
        ]
    },
    "3280": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Nagoya , Japan",
                    "Osaka , Japan",
                    "Sapporo , Japan",
                    "Tijuana , Mexico",
                    "Tokyo , Japan"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "A pie chart shows the proportion of the number of locations of the wrestlers.",
            "Give the proportion of the number of locations of all wrestlers with a pie chart.",
            "Compute the total the number of location across location as a pie chart."
        ]
    },
    "3281": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Nagoya , Japan",
                    "Osaka , Japan",
                    "Sapporo , Japan",
                    "Tijuana , Mexico",
                    "Tokyo , Japan"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "What is the number of locations of the wrestlers? Visualize by a bar chart.",
            "Give the number of locations of all wrestlers with a bar chart.",
            "A bar chart for what is the number of locations of the wrestlers.",
            "Draw a bar chart of location versus how many location"
        ]
    },
    "3282": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Team , COUNT(Team) FROM elimination GROUP BY Team"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Team",
            "y_name": "COUNT(Team)",
            "x_data": [
                [
                    "Team Batista",
                    "Team Orton"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Team"
        },
        "nl_queries": [
            "A pie chart shows the proportion of the number of teams in elimination.",
            "Draw a pie chart for what are the proportion of the teams in elimination? ",
            "What is the proportion of the teams in elimination?  Display by a pie chart.",
            "Compute the total how many team across team as a pie chart."
        ]
    },
    "3283": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Team",
            "y_name": "COUNT(Team)",
            "x_data": [
                [
                    "Team Batista",
                    "Team Orton"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Team"
        },
        "nl_queries": [
            "Show the number of teams in elimination in a bar chart.",
            "What is the number of their teams in elimination? Draw a bar chart.",
            "Visualize a bar chart for what is the number of their teams in elimination?",
            "Create a bar chart showing how many team across team"
        ]
    },
    "3284": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Reign , Days_held FROM wrestler",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Reign",
            "y_name": "Days_held",
            "x_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "y_data": [
                [
                    344,
                    113,
                    1285,
                    960,
                    1,
                    99,
                    54,
                    183,
                    35,
                    56
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the reign and days held of wrestlers in a scatter chart",
            "Show the reign and days held of wrestlers. Visualize by scatter chart.",
            "Draw a scatter chart for what are the reigns and days held of all wrestlers?",
            "What are the reigns and days held of all wrestlers. Visualize by scatter chart.",
            "Scatter plot to show reign on x axis and days_held on y axis."
        ]
    },
    "372@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY Operating_system ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY Operating_system ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Operating_system",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Android, Linux, Mac and Windows devices",
                    "Any",
                    "Any system with Java 1.6 VM available",
                    "Appliance (Linux)",
                    "Unix (Linux, *BSD, Mac OS X, others)",
                    "Unix (Linux, *BSD, Mac OS X, others), Windows",
                    "Windows",
                    "Windows (2000 onwards)",
                    "Windows, Linux, Mac OS, Symbian, WindowsMobile",
                    "Windows, Mac",
                    "Windows, Mac and Mobile devices",
                    "Windows, Mac, Linux and Mobile devices",
                    "Windows, Mac, Mobile devices",
                    "Windows, except NT and 95"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    3,
                    1,
                    1,
                    3,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart of operating system versus the total number, list from low to high by the X-axis.",
            "Find the number of web accelerators used for each Operating system, I want to display in ascending by the X."
        ]
    },
    "372@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY Operating_system DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY Operating_system DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Operating_system",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Windows, except NT and 95",
                    "Windows, Mac, Mobile devices",
                    "Windows, Mac, Linux and Mobile devices",
                    "Windows, Mac and Mobile devices",
                    "Windows, Mac",
                    "Windows, Linux, Mac OS, Symbian, WindowsMobile",
                    "Windows (2000 onwards)",
                    "Windows",
                    "Unix (Linux, *BSD, Mac OS X, others), Windows",
                    "Unix (Linux, *BSD, Mac OS X, others)",
                    "Appliance (Linux)",
                    "Any system with Java 1.6 VM available",
                    "Any",
                    "Android, Linux, Mac and Windows devices"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    3,
                    1,
                    1,
                    3,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart of operating system versus the total number, display from high to low by the names please.",
            "Find the number of web accelerators used for each Operating system, and I want to rank x-axis from high to low order."
        ]
    },
    "372@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Operating_system",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Android, Linux, Mac and Windows devices",
                    "Any",
                    "Any system with Java 1.6 VM available",
                    "Appliance (Linux)",
                    "Unix (Linux, *BSD, Mac OS X, others)",
                    "Windows (2000 onwards)",
                    "Windows, Linux, Mac OS, Symbian, WindowsMobile",
                    "Windows, Mac and Mobile devices",
                    "Windows, Mac, Linux and Mobile devices",
                    "Windows, Mac, Mobile devices",
                    "Windows, except NT and 95",
                    "Unix (Linux, *BSD, Mac OS X, others), Windows",
                    "Windows",
                    "Windows, Mac"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of web accelerators used for each Operating system, I want to display by the y-axis in ascending.",
            "Draw a bar chart of operating system versus the total number, order in asc by the Y."
        ]
    },
    "372@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Operating_system",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Windows, Mac",
                    "Windows",
                    "Unix (Linux, *BSD, Mac OS X, others), Windows",
                    "Windows, except NT and 95",
                    "Windows, Mac, Mobile devices",
                    "Windows, Mac, Linux and Mobile devices",
                    "Windows, Mac and Mobile devices",
                    "Windows, Linux, Mac OS, Symbian, WindowsMobile",
                    "Windows (2000 onwards)",
                    "Unix (Linux, *BSD, Mac OS X, others)",
                    "Appliance (Linux)",
                    "Any system with Java 1.6 VM available",
                    "Any",
                    "Android, Linux, Mac and Windows devices"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of web accelerators used for each Operating system, show from high to low by the total number.",
            "Draw a bar chart of operating system versus the total number, and list by the Y in desc please."
        ]
    },
    "375@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "CACHEbox",
                    "CProxy",
                    "Fasterfox"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, display from low to high by the x-axis please.",
            "What are the ids and names of the web accelerators that are compatible with two or more browsers Visualize by bar chart, could you rank bars in ascending order please?",
            "Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, and rank in ascending by the names."
        ]
    },
    "375@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "Fasterfox",
                    "CProxy",
                    "CACHEbox"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, and could you rank by the bars in desc please?",
            "Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, and I want to rank in desc by the bar.",
            "What are the ids and names of the web accelerators that are compatible with two or more browsers Visualize by bar chart, and show by the X-axis from high to low."
        ]
    },
    "375@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY id ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY id ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "CACHEbox",
                    "CProxy",
                    "Fasterfox"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, and I want to sort y-axis from low to high order.",
            "What are the ids and names of the web accelerators that are compatible with two or more browsers Visualize by bar chart, and order by the y axis in asc.",
            "Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, display Y-axis from low to high order."
        ]
    },
    "375@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY id DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY id DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "Fasterfox",
                    "CProxy",
                    "CACHEbox"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the ids and names of the web accelerators that are compatible with two or more browsers Visualize by bar chart, and show in desc by the id.",
            "Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, rank by the id from high to low.",
            "Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, I want to list total number in desc order."
        ]
    },
    "2865@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Five",
                    "Four",
                    "One",
                    "Three"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the name for storms and the number of affected regions for each storm, I want to list in asc by the X-axis.",
            "Return a bar chart on how many regions were affected by each storm?, and order x-axis in ascending order.",
            "How many regions were affected by each storm Visualize by bar chart, and show Name from low to high order.",
            "how many regions were affected by each storm?, display x-axis in asc order.",
            "List the name for storms and the number of affected regions for each storm with a bar chart, I want to list in asc by the X-axis."
        ]
    },
    "2865@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Three",
                    "One",
                    "Four",
                    "Five"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "how many regions were affected by each storm?, could you sort bar in descending order?",
            "How many regions were affected by each storm Visualize by bar chart, and order bars from high to low order.",
            "Return a bar chart on how many regions were affected by each storm?, list in descending by the names please.",
            "List the name for storms and the number of affected regions for each storm, order bars from high to low order.",
            "List the name for storms and the number of affected regions for each storm with a bar chart, and could you sort bar in descending order?"
        ]
    },
    "2865@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Four",
                    "Three",
                    "Five",
                    "One"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "how many regions were affected by each storm?, and list the total number in ascending order.",
            "List the name for storms and the number of affected regions for each storm with a bar chart, and display the total number in ascending order.",
            "List the name for storms and the number of affected regions for each storm, rank in ascending by the Y please.",
            "Return a bar chart on how many regions were affected by each storm?, and I want to list in asc by the y-axis.",
            "How many regions were affected by each storm Visualize by bar chart, rank in ascending by the Y please."
        ]
    },
    "2865@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "One",
                    "Five",
                    "Three",
                    "Four"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the name for storms and the number of affected regions for each storm with a bar chart, and could you sort Y from high to low order?",
            "how many regions were affected by each storm?, I want to order in desc by the y axis.",
            "Return a bar chart on how many regions were affected by each storm?, show in desc by the Y please.",
            "List the name for storms and the number of affected regions for each storm, order by the y-axis from high to low.",
            "How many regions were affected by each storm Visualize by bar chart, and rank from high to low by the y-axis."
        ]
    },
    "2867@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Region_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Afghanistan",
                    "Albania",
                    "Algeria",
                    "Denmark"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many storms occured in each region Visualize by bar chart, and show bars from low to high order.",
            "Show the name for regions and the number of storms for each region by a bar chart, display in ascending by the X-axis.",
            "Show me a bar chart for how many storms occured in each region?, and I want to sort by the names in ascending.",
            "Show the name for regions and the number of storms for each region, and show bars from low to high order.",
            "Draw a bar chart for how many storms occured in each region?, and show bars from low to high order."
        ]
    },
    "2867@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Region_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Denmark",
                    "Algeria",
                    "Albania",
                    "Afghanistan"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many storms occured in each region Visualize by bar chart, sort from high to low by the X-axis.",
            "Show the name for regions and the number of storms for each region by a bar chart, and sort from high to low by the X-axis.",
            "Draw a bar chart for how many storms occured in each region?, could you rank in desc by the bars?",
            "Show the name for regions and the number of storms for each region, rank in descending by the bars.",
            "Show me a bar chart for how many storms occured in each region?, rank X in desc order."
        ]
    },
    "2867@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Region_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Algeria",
                    "Denmark",
                    "Afghanistan",
                    "Albania"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart for how many storms occured in each region?, I want to rank the total number from low to high order.",
            "How many storms occured in each region Visualize by bar chart, and could you display the total number from low to high order?",
            "Show the name for regions and the number of storms for each region, and I want to list by the y axis in asc.",
            "Show me a bar chart for how many storms occured in each region?, sort by the y axis from low to high please.",
            "Show the name for regions and the number of storms for each region by a bar chart, and order total number from low to high order please."
        ]
    },
    "2867@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Region_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Albania",
                    "Afghanistan",
                    "Denmark",
                    "Algeria"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me a bar chart for how many storms occured in each region?, and order total number from high to low order.",
            "Show the name for regions and the number of storms for each region, and I want to rank by the y axis in desc please.",
            "Draw a bar chart for how many storms occured in each region?, list in descending by the the total number .",
            "How many storms occured in each region Visualize by bar chart, and rank y axis from high to low order.",
            "Show the name for regions and the number of storms for each region by a bar chart, and display in descending by the Y please."
        ]
    },
    "2868@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Number_Deaths",
            "x_data": [
                [
                    "9 cyclones",
                    "Five",
                    "Four",
                    "Six",
                    "Three",
                    "Two"
                ]
            ],
            "y_data": [
                [
                    71,
                    3,
                    7,
                    2,
                    52,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For all storms with at least 1 death, compare the number of deaths by name, rank by the X-axis in ascending.",
            "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart, and order by the x-axis from low to high please.",
            "For all storms with at least 1 death, compare the number of deaths by name with a bar graph, rank by the bars from low to high."
        ]
    },
    "2868@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Number_Deaths",
            "x_data": [
                [
                    "Two",
                    "Three",
                    "Six",
                    "Four",
                    "Five",
                    "9 cyclones"
                ]
            ],
            "y_data": [
                [
                    7,
                    52,
                    2,
                    7,
                    3,
                    71
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For all storms with at least 1 death, compare the number of deaths by name, and I want to order by the names from high to low.",
            "For all storms with at least 1 death, compare the number of deaths by name with a bar graph, and order by the bar in descending.",
            "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart, order by the bar in descending."
        ]
    },
    "2868@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Number_Deaths",
            "x_data": [
                [
                    "Six",
                    "Five",
                    "Four",
                    "Two",
                    "Three",
                    "9 cyclones"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    7,
                    7,
                    52,
                    71
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For all storms with at least 1 death, compare the number of deaths by name, and rank in asc by the y-axis.",
            "For all storms with at least 1 death, compare the number of deaths by name with a bar graph, order from low to high by the Y-axis.",
            "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart, sort in asc by the y axis please."
        ]
    },
    "2868@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Number_Deaths",
            "x_data": [
                [
                    "9 cyclones",
                    "Three",
                    "Two",
                    "Four",
                    "Five",
                    "Six"
                ]
            ],
            "y_data": [
                [
                    71,
                    52,
                    7,
                    7,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart, show Y-axis from high to low order.",
            "For all storms with at least 1 death, compare the number of deaths by name with a bar graph, and could you display from high to low by the Number_Deaths?",
            "For all storms with at least 1 death, compare the number of deaths by name, order by the Y from high to low."
        ]
    },
    "2869@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Dates_active",
            "y_name": "Number_Deaths",
            "x_data": [
                [
                    "August26–September2",
                    "August3–August10",
                    "August5–August14",
                    "May19 –October26",
                    "September18–September25",
                    "September7–September17"
                ]
            ],
            "y_data": [
                [
                    7,
                    7,
                    52,
                    71,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart, could you sort by the names in asc?",
            "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute, sort by the names from low to high.",
            "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph, order names in ascending order."
        ]
    },
    "2869@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Dates_active",
            "y_name": "Number_Deaths",
            "x_data": [
                [
                    "September7–September17",
                    "September18–September25",
                    "May19 –October26",
                    "August5–August14",
                    "August3–August10",
                    "August26–September2"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    71,
                    52,
                    7,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute, rank by the Dates_active in desc.",
            "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph, and I want to rank in descending by the x-axis.",
            "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart, rank by the Dates_active in desc."
        ]
    },
    "2869@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Dates_active",
            "y_name": "Number_Deaths",
            "x_data": [
                [
                    "September18–September25",
                    "September7–September17",
                    "August26–September2",
                    "August3–August10",
                    "August5–August14",
                    "May19 –October26"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    7,
                    7,
                    52,
                    71
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart, and order in ascending by the Y.",
            "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph, and could you rank by the y-axis in asc?",
            "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute, and order in ascending by the Y."
        ]
    },
    "2869@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Dates_active",
            "y_name": "Number_Deaths",
            "x_data": [
                [
                    "May19 –October26",
                    "August5–August14",
                    "August3–August10",
                    "August26–September2",
                    "September7–September17",
                    "September18–September25"
                ]
            ],
            "y_data": [
                [
                    71,
                    52,
                    7,
                    7,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph, show y axis in descending order.",
            "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute, and list in descending by the Y-axis.",
            "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart, and rank by the total number in desc."
        ]
    },
    "2621@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "products_gen_characteristics",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_category_description",
            "y_name": "COUNT(product_category_description)",
            "x_data": [
                [
                    "Herbs",
                    "Seeds",
                    "Spices"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_category_description"
        },
        "nl_queries": [
            "Find the number of the category descriptions of the products whose descriptions include letter 't', list names in ascending order.",
            "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't', and could you rank x axis from low to high order?",
            "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, and list names in ascending order.",
            "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, and order product_category_description in ascending order.",
            "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart, list x axis in ascending order.",
            "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart, could you rank x axis from low to high order?"
        ]
    },
    "2621@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "products_gen_characteristics",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_category_description",
            "y_name": "COUNT(product_category_description)",
            "x_data": [
                [
                    "Spices",
                    "Seeds",
                    "Herbs"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_category_description"
        },
        "nl_queries": [
            "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, I want to display by the names in descending please.",
            "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, could you order by the names in descending?",
            "Find the number of the category descriptions of the products whose descriptions include letter 't', could you order by the names in descending?",
            "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart, and display from high to low by the bars.",
            "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart, and I want to display by the names in descending please.",
            "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't', and I want to display by the bar from high to low please."
        ]
    },
    "2621@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "products_gen_characteristics",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_category_description",
            "y_name": "COUNT(product_category_description)",
            "x_data": [
                [
                    "Spices",
                    "Herbs",
                    "Seeds"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_category_description"
        },
        "nl_queries": [
            "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, rank y-axis in ascending order.",
            "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart, order from low to high by the total number.",
            "Find the number of the category descriptions of the products whose descriptions include letter 't', and order total number in ascending order.",
            "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, and rank y-axis in ascending order.",
            "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart, could you list by the y axis in asc?",
            "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't', sort in ascending by the Y-axis."
        ]
    },
    "2621@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "products_gen_characteristics",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_category_description",
            "y_name": "COUNT(product_category_description)",
            "x_data": [
                [
                    "Seeds",
                    "Herbs",
                    "Spices"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_category_description"
        },
        "nl_queries": [
            "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart, display by the y-axis from high to low.",
            "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, and display by the y-axis from high to low.",
            "Find the number of the category descriptions of the products whose descriptions include letter 't', I want to sort y-axis in descending order.",
            "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart, display Y from high to low order.",
            "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, display by the total number in desc.",
            "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't', and display Y in desc order."
        ]
    },
    "1161@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id ORDER BY T1.cell_number ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id ORDER BY T1.cell_number ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "cell_number",
            "y_name": "professional_id",
            "x_data": [
                [
                    "00230569697",
                    "1-185-137-1945x409",
                    "139-321-7313",
                    "328.842.3792",
                    "461-801-2600",
                    "962-983-8109x3509"
                ]
            ],
            "y_data": [
                [
                    4,
                    14,
                    6,
                    8,
                    10,
                    9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the id and cell phone of the professionals who operate two or more types of treatments, order by the x axis in asc please."
        ]
    },
    "1161@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id ORDER BY T1.cell_number DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id ORDER BY T1.cell_number DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "cell_number",
            "y_name": "professional_id",
            "x_data": [
                [
                    "962-983-8109x3509",
                    "461-801-2600",
                    "328.842.3792",
                    "139-321-7313",
                    "1-185-137-1945x409",
                    "00230569697"
                ]
            ],
            "y_data": [
                [
                    9,
                    10,
                    8,
                    6,
                    14,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the id and cell phone of the professionals who operate two or more types of treatments, and sort by the names from high to low."
        ]
    },
    "1161@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id ORDER BY T1.professional_id ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id ORDER BY T1.professional_id ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "cell_number",
            "y_name": "professional_id",
            "x_data": [
                [
                    "00230569697",
                    "139-321-7313",
                    "328.842.3792",
                    "962-983-8109x3509",
                    "461-801-2600",
                    "1-185-137-1945x409"
                ]
            ],
            "y_data": [
                [
                    4,
                    6,
                    8,
                    9,
                    10,
                    14
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the id and cell phone of the professionals who operate two or more types of treatments, could you order in asc by the Y-axis?"
        ]
    },
    "1161@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id ORDER BY T1.professional_id DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id ORDER BY T1.professional_id DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "cell_number",
            "y_name": "professional_id",
            "x_data": [
                [
                    "1-185-137-1945x409",
                    "461-801-2600",
                    "962-983-8109x3509",
                    "328.842.3792",
                    "139-321-7313",
                    "00230569697"
                ]
            ],
            "y_data": [
                [
                    14,
                    10,
                    9,
                    8,
                    6,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the id and cell phone of the professionals who operate two or more types of treatments, show from high to low by the Y-axis."
        ]
    },
    "1162@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name ORDER BY first_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name ORDER BY first_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Danny",
                    "Domenica",
                    "Karley",
                    "Monte",
                    "Ruben",
                    "Sigurd",
                    "Velva",
                    "Vernice"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "Show how many professionals in a bar chart grouping by professional's first name, I want to rank by the X from low to high.",
            "List the number of professionals in a bar chart that groups by professional's first name, order names from low to high order."
        ]
    },
    "1162@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name ORDER BY first_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name ORDER BY first_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Vernice",
                    "Velva",
                    "Sigurd",
                    "Ruben",
                    "Monte",
                    "Karley",
                    "Domenica",
                    "Danny"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "Show how many professionals in a bar chart grouping by professional's first name, and I want to rank x-axis in desc order.",
            "List the number of professionals in a bar chart that groups by professional's first name, and show from high to low by the x-axis please."
        ]
    },
    "1162@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name ORDER BY COUNT(first_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name ORDER BY COUNT(first_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Danny",
                    "Karley",
                    "Velva",
                    "Vernice",
                    "Domenica",
                    "Monte",
                    "Ruben",
                    "Sigurd"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "List the number of professionals in a bar chart that groups by professional's first name, list Y in asc order.",
            "Show how many professionals in a bar chart grouping by professional's first name, and could you show y axis in ascending order please?"
        ]
    },
    "1162@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name ORDER BY COUNT(first_name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name ORDER BY COUNT(first_name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Sigurd",
                    "Ruben",
                    "Monte",
                    "Domenica",
                    "Vernice",
                    "Velva",
                    "Karley",
                    "Danny"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "Show how many professionals in a bar chart grouping by professional's first name, I want to list by the the number of first name in descending please.",
            "List the number of professionals in a bar chart that groups by professional's first name, and sort by the Y in desc."
        ]
    },
    "1163@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  ORDER BY COUNT(date_of_treatment) ASC",
                "binning": "BIN date_of_treatment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  ORDER BY COUNT(date_of_treatment) ASC BIN date_of_treatment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    2,
                    13
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_treatment BY MONTH"
        },
        "nl_queries": [
            "How many treatments in each month? Return a bar chart, show by the y axis from low to high please.",
            "List the number of treatments in each month with a bar chart, and show by the Y in asc."
        ]
    },
    "1163@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  ORDER BY COUNT(date_of_treatment) DESC",
                "binning": "BIN date_of_treatment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  ORDER BY COUNT(date_of_treatment) DESC BIN date_of_treatment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "Mar",
                    "Feb"
                ]
            ],
            "y_data": [
                [
                    13,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_treatment BY MONTH"
        },
        "nl_queries": [
            "How many treatments in each month? Return a bar chart, and sort how many date of treatment in desc order please.",
            "List the number of treatments in each month with a bar chart, I want to sort in descending by the total number."
        ]
    },
    "1164@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  ORDER BY COUNT(date_of_treatment) ASC",
                "binning": "BIN date_of_treatment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  ORDER BY COUNT(date_of_treatment) ASC BIN date_of_treatment BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "Tue",
                    "Fri",
                    "Mon",
                    "Sat",
                    "Sun",
                    "Wed",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_treatment BY WEEKDAY"
        },
        "nl_queries": [
            "How many treatments in each day? Return a bar chart that bins date of treatment by weekday, sort in asc by the Y-axis.",
            "List the number of treatments in each day with a bar chart that bins date of treatment by weekday, and display the number of date of treatment from low to high order."
        ]
    },
    "1164@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  ORDER BY COUNT(date_of_treatment) DESC",
                "binning": "BIN date_of_treatment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  ORDER BY COUNT(date_of_treatment) DESC BIN date_of_treatment BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "Thur",
                    "Wed",
                    "Sun",
                    "Sat",
                    "Mon",
                    "Fri",
                    "Tue"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    2,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_treatment BY WEEKDAY"
        },
        "nl_queries": [
            "List the number of treatments in each day with a bar chart that bins date of treatment by weekday, and I want to display by the y-axis from high to low please.",
            "How many treatments in each day? Return a bar chart that bins date of treatment by weekday, and could you order in desc by the y-axis?"
        ]
    },
    "1165@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY date_of_treatment ORDER BY date_of_treatment ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY date_of_treatment ORDER BY date_of_treatment ASC"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "2018-02-26",
                    "2018-02-28",
                    "2018-03-01",
                    "2018-03-04",
                    "2018-03-08",
                    "2018-03-10",
                    "2018-03-11",
                    "2018-03-13",
                    "2018-03-14",
                    "2018-03-15",
                    "2018-03-16",
                    "2018-03-19",
                    "2018-03-23",
                    "2018-03-24"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_treatment"
        },
        "nl_queries": [
            "List the number of treatments in each day with a line chart that groups by date of treatment, show in ascending by the X.",
            "List the number of treatments in each day with a line chart that groups by date of treatment, and rank X in ascending order please.",
            "How many treatments in each day? Return a line chart that groups by date of treatment, and I want to sort by the date_of_treatment in ascending.",
            "How many treatments in each day? Return a line chart that groups by date of treatment, list in ascending by the X-axis please."
        ]
    },
    "1165@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY date_of_treatment ORDER BY date_of_treatment DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY date_of_treatment ORDER BY date_of_treatment DESC"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "2018-03-24",
                    "2018-03-23",
                    "2018-03-19",
                    "2018-03-16",
                    "2018-03-15",
                    "2018-03-14",
                    "2018-03-13",
                    "2018-03-11",
                    "2018-03-10",
                    "2018-03-08",
                    "2018-03-04",
                    "2018-03-01",
                    "2018-02-28",
                    "2018-02-26"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_treatment"
        },
        "nl_queries": [
            "List the number of treatments in each day with a line chart that groups by date of treatment, order from high to low by the date_of_treatment.",
            "How many treatments in each day? Return a line chart that groups by date of treatment, list from high to low by the x axis.",
            "How many treatments in each day? Return a line chart that groups by date of treatment, order X in descending order.",
            "List the number of treatments in each day with a line chart that groups by date of treatment, and order from high to low by the x axis."
        ]
    },
    "1166@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY first_name ORDER BY first_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY first_name ORDER BY first_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Danny",
                    "Domenica",
                    "Karley",
                    "Monte",
                    "Ruben",
                    "Sigurd",
                    "Velva",
                    "Vernice"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    3,
                    2,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "How many treatments each professional has operated? Show a bar chart that groups by professional's first name, and I want to list in ascending by the X-axis.",
            "List the number of treatments each professional has operated with a bar chart that groups by professional's first name, and display first_name from low to high order."
        ]
    },
    "1166@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY first_name ORDER BY first_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY first_name ORDER BY first_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Vernice",
                    "Velva",
                    "Sigurd",
                    "Ruben",
                    "Monte",
                    "Karley",
                    "Domenica",
                    "Danny"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    2,
                    3,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "List the number of treatments each professional has operated with a bar chart that groups by professional's first name, could you show by the X-axis from high to low?",
            "How many treatments each professional has operated? Show a bar chart that groups by professional's first name, and display from high to low by the first_name."
        ]
    },
    "1166@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY first_name ORDER BY COUNT(first_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY first_name ORDER BY COUNT(first_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Danny",
                    "Velva",
                    "Domenica",
                    "Karley",
                    "Ruben",
                    "Sigurd",
                    "Vernice",
                    "Monte"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "How many treatments each professional has operated? Show a bar chart that groups by professional's first name, order y-axis in ascending order.",
            "List the number of treatments each professional has operated with a bar chart that groups by professional's first name, show in ascending by the y axis."
        ]
    },
    "1166@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY first_name ORDER BY COUNT(first_name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY first_name ORDER BY COUNT(first_name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Monte",
                    "Vernice",
                    "Sigurd",
                    "Ruben",
                    "Karley",
                    "Domenica",
                    "Velva",
                    "Danny"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    2,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "List the number of treatments each professional has operated with a bar chart that groups by professional's first name, I want to order the number of first name from high to low order.",
            "How many treatments each professional has operated? Show a bar chart that groups by professional's first name, and could you list by the the number of first name in descending?"
        ]
    },
    "1167@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "age",
            "x_data": [
                [
                    "Evangeline",
                    "Kacey",
                    "Lyric"
                ]
            ],
            "y_data": [
                [
                    1,
                    6,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How old is each dog that was abandoned? Show in a bar chart, rank names in ascending order.",
            "List the dog name and age of the dogs who have been abandoned in a bar chart, rank by the X-axis in asc."
        ]
    },
    "1167@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "age",
            "x_data": [
                [
                    "Lyric",
                    "Kacey",
                    "Evangeline"
                ]
            ],
            "y_data": [
                [
                    4,
                    6,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How old is each dog that was abandoned? Show in a bar chart, could you show X-axis from high to low order?",
            "List the dog name and age of the dogs who have been abandoned in a bar chart, order from high to low by the x axis please."
        ]
    },
    "1167@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY age ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY age ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "age",
            "x_data": [
                [
                    "Evangeline",
                    "Lyric",
                    "Kacey"
                ]
            ],
            "y_data": [
                [
                    1,
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the dog name and age of the dogs who have been abandoned in a bar chart, and list in ascending by the y-axis please.",
            "How old is each dog that was abandoned? Show in a bar chart, and order age from low to high order."
        ]
    },
    "1167@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY age DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY age DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "age",
            "x_data": [
                [
                    "Kacey",
                    "Lyric",
                    "Evangeline"
                ]
            ],
            "y_data": [
                [
                    6,
                    4,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How old is each dog that was abandoned? Show in a bar chart, order by the y-axis in descending.",
            "List the dog name and age of the dogs who have been abandoned in a bar chart, rank total number in descending order."
        ]
    },
    "1169@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "weight",
            "x_data": [
                [
                    "Evangeline",
                    "Kacey",
                    "Lyric"
                ]
            ],
            "y_data": [
                [
                    4.01,
                    7.57,
                    4.36
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the dog name and weight of the dogs who have been abandoned in a bar chart, and list bars in asc order.",
            "What is the weight of each dog that was abandoned? Show in a bar chart, and I want to sort by the x-axis in asc."
        ]
    },
    "1169@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "weight",
            "x_data": [
                [
                    "Lyric",
                    "Kacey",
                    "Evangeline"
                ]
            ],
            "y_data": [
                [
                    4.36,
                    7.57,
                    4.01
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the weight of each dog that was abandoned? Show in a bar chart, and list names in desc order.",
            "List the dog name and weight of the dogs who have been abandoned in a bar chart, and rank in desc by the X."
        ]
    },
    "1169@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY weight ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY weight ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "weight",
            "x_data": [
                [
                    "Evangeline",
                    "Lyric",
                    "Kacey"
                ]
            ],
            "y_data": [
                [
                    4.01,
                    4.36,
                    7.57
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the dog name and weight of the dogs who have been abandoned in a bar chart, could you rank total number in asc order?",
            "What is the weight of each dog that was abandoned? Show in a bar chart, could you list y-axis in ascending order?"
        ]
    },
    "1169@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY weight DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY weight DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "weight",
            "x_data": [
                [
                    "Kacey",
                    "Lyric",
                    "Evangeline"
                ]
            ],
            "y_data": [
                [
                    7.57,
                    4.36,
                    4.01
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the weight of each dog that was abandoned? Show in a bar chart, rank Y in desc order.",
            "List the dog name and weight of the dogs who have been abandoned in a bar chart, display in descending by the y axis."
        ]
    },
    "1174@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT charge_type , charge_amount FROM Charges ORDER BY charge_type ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT charge_type , charge_amount FROM Charges ORDER BY charge_type ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "charge_type",
            "y_name": "charge_amount",
            "x_data": [
                [
                    "Daily Accommodation",
                    "Drugs",
                    "Health Check"
                ]
            ],
            "y_data": [
                [
                    98,
                    322,
                    640
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a bar chart for charge_amount of each charge type, could you list by the x axis in asc?",
            "List each charge type and its amount Show bar chart, display bars in asc order.",
            "List each charge type and its amount in a bar chart, list in asc by the x-axis.",
            "Visualize a bar chart for how much does each charge type costs? List both charge type and amount, and rank charge_type in asc order.",
            "How much does each charge type costs? List both charge type and amount, could you list bar in asc order?"
        ]
    },
    "1174@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT charge_type , charge_amount FROM Charges ORDER BY charge_type DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT charge_type , charge_amount FROM Charges ORDER BY charge_type DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "charge_type",
            "y_name": "charge_amount",
            "x_data": [
                [
                    "Health Check",
                    "Drugs",
                    "Daily Accommodation"
                ]
            ],
            "y_data": [
                [
                    640,
                    322,
                    98
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List each charge type and its amount Show bar chart, and I want to show X-axis in desc order.",
            "Visualize a bar chart for how much does each charge type costs? List both charge type and amount, and could you order names from high to low order?",
            "List each charge type and its amount in a bar chart, order charge_type in desc order.",
            "Give me a bar chart for charge_amount of each charge type, could you list by the bars from high to low?",
            "How much does each charge type costs? List both charge type and amount, and I want to show X-axis in desc order."
        ]
    },
    "1174@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT charge_type , charge_amount FROM Charges ORDER BY charge_amount ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT charge_type , charge_amount FROM Charges ORDER BY charge_amount ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "charge_type",
            "y_name": "charge_amount",
            "x_data": [
                [
                    "Daily Accommodation",
                    "Drugs",
                    "Health Check"
                ]
            ],
            "y_data": [
                [
                    98,
                    322,
                    640
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for how much does each charge type costs? List both charge type and amount, and I want to sort by the Y in asc please.",
            "List each charge type and its amount in a bar chart, and sort in asc by the y axis.",
            "List each charge type and its amount Show bar chart, display by the Y in asc.",
            "Give me a bar chart for charge_amount of each charge type, order Y from low to high order.",
            "How much does each charge type costs? List both charge type and amount, and could you display in ascending by the Y?"
        ]
    },
    "1174@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT charge_type , charge_amount FROM Charges ORDER BY charge_amount DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT charge_type , charge_amount FROM Charges ORDER BY charge_amount DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "charge_type",
            "y_name": "charge_amount",
            "x_data": [
                [
                    "Health Check",
                    "Drugs",
                    "Daily Accommodation"
                ]
            ],
            "y_data": [
                [
                    640,
                    322,
                    98
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for how much does each charge type costs? List both charge type and amount, sort by the Y in descending.",
            "List each charge type and its amount Show bar chart, and sort by the y axis in desc.",
            "How much does each charge type costs? List both charge type and amount, and sort by the Y in descending.",
            "Give me a bar chart for charge_amount of each charge type, could you show by the Y-axis in desc?",
            "List each charge type and its amount in a bar chart, and sort by the Y in descending."
        ]
    },
    "1175@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code ORDER BY T1.role_code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code ORDER BY T1.role_code ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "COUNT(role_code)",
            "x_data": [
                [
                    "Employee",
                    "Veterenarian"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY role_code"
        },
        "nl_queries": [
            "How many professionals did not operate any treatment on dogs for each role? Draw a bar chart, and order in ascending by the x-axis.",
            "Give me the number of professionals who did not perform any treatment on dogs for each role in a bar chart, display in asc by the x-axis."
        ]
    },
    "1175@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code ORDER BY T1.role_code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code ORDER BY T1.role_code DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "COUNT(role_code)",
            "x_data": [
                [
                    "Veterenarian",
                    "Employee"
                ]
            ],
            "y_data": [
                [
                    2,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY role_code"
        },
        "nl_queries": [
            "How many professionals did not operate any treatment on dogs for each role? Draw a bar chart, could you rank in desc by the names?",
            "Give me the number of professionals who did not perform any treatment on dogs for each role in a bar chart, and sort x-axis from high to low order."
        ]
    },
    "1175@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code ORDER BY COUNT(T1.role_code) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code ORDER BY COUNT(T1.role_code) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "COUNT(role_code)",
            "x_data": [
                [
                    "Veterenarian",
                    "Employee"
                ]
            ],
            "y_data": [
                [
                    2,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY role_code"
        },
        "nl_queries": [
            "Give me the number of professionals who did not perform any treatment on dogs for each role in a bar chart, list from low to high by the y axis.",
            "How many professionals did not operate any treatment on dogs for each role? Draw a bar chart, and show by the the number of role code from low to high please."
        ]
    },
    "1175@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code ORDER BY COUNT(T1.role_code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code ORDER BY COUNT(T1.role_code) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "COUNT(role_code)",
            "x_data": [
                [
                    "Employee",
                    "Veterenarian"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY role_code"
        },
        "nl_queries": [
            "Give me the number of professionals who did not perform any treatment on dogs for each role in a bar chart, and I want to rank in descending by the total number.",
            "How many professionals did not operate any treatment on dogs for each role? Draw a bar chart, I want to order y axis in descending order."
        ]
    },
    "1181@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) ASC",
                "binning": "BIN date_arrived BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) ASC BIN date_arrived BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2018",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    2,
                    13
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY YEAR"
        },
        "nl_queries": [
            "Show the number of date arrived from each date arrived, display in ascending by the y-axis.",
            "List the number of dogs arrived in each year with a bar chart, and order in ascending by the total number please.",
            "How many dogs arrived in each year? Visualize with a bar chart, and display in ascending by the y-axis."
        ]
    },
    "1181@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) DESC",
                "binning": "BIN date_arrived BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) DESC BIN date_arrived BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    13,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY YEAR"
        },
        "nl_queries": [
            "Show the number of date arrived from each date arrived, I want to sort Y in desc order.",
            "How many dogs arrived in each year? Visualize with a bar chart, list y axis in descending order.",
            "List the number of dogs arrived in each year with a bar chart, rank Y-axis in descending order please."
        ]
    },
    "1182@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY date_departed ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY date_departed ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "2018-03-24",
                    "2018-03-25"
                ]
            ],
            "y_data": [
                [
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_departed"
        },
        "nl_queries": [
            "List the number of dogs departed in each day with a bar chart that groups by departed date, and could you show bars in ascending order?",
            "Show how many date departed from each date departed, and I want to order by the date_departed in asc.",
            "How many dogs departed in each day? Visualize with a bar chart that groups by departed date, could you sort date_departed in ascending order?"
        ]
    },
    "1182@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY date_departed DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY date_departed DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "2018-03-25",
                    "2018-03-24"
                ]
            ],
            "y_data": [
                [
                    12,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_departed"
        },
        "nl_queries": [
            "Show how many date departed from each date departed, and rank in desc by the x axis please.",
            "How many dogs departed in each day? Visualize with a bar chart that groups by departed date, sort x axis in desc order.",
            "List the number of dogs departed in each day with a bar chart that groups by departed date, and sort x axis in desc order."
        ]
    },
    "1182@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY COUNT(date_departed) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY COUNT(date_departed) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "2018-03-24",
                    "2018-03-25"
                ]
            ],
            "y_data": [
                [
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_departed"
        },
        "nl_queries": [
            "How many dogs departed in each day? Visualize with a bar chart that groups by departed date, order how many date departed in ascending order.",
            "Show how many date departed from each date departed, and show from low to high by the y-axis.",
            "List the number of dogs departed in each day with a bar chart that groups by departed date, could you list in asc by the Y?"
        ]
    },
    "1182@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY COUNT(date_departed) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY COUNT(date_departed) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "2018-03-25",
                    "2018-03-24"
                ]
            ],
            "y_data": [
                [
                    12,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_departed"
        },
        "nl_queries": [
            "List the number of dogs departed in each day with a bar chart that groups by departed date, and sort in desc by the y axis.",
            "How many dogs departed in each day? Visualize with a bar chart that groups by departed date, sort y-axis in desc order.",
            "Show how many date departed from each date departed, and sort from high to low by the y axis."
        ]
    },
    "1183@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) ASC",
                "binning": "BIN date_departed BY DAY"
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) ASC BIN date_departed BY DAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "24th",
                    "25th"
                ]
            ],
            "y_data": [
                [
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": "BIN date_departed BY DAY"
        },
        "nl_queries": [
            "How many dogs departed in each day? Visualize with a bar chart that bins departed date by day interval, display the number of date departed from low to high order.",
            "List the number of dogs departed in each day with a bar chart that bins departed date by day interval, and list the number of date departed in asc order.",
            "Bar chart x axis date departed y axis the number of date departed, show Y in asc order please."
        ]
    },
    "1183@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) DESC",
                "binning": "BIN date_departed BY DAY"
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) DESC BIN date_departed BY DAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "25th",
                    "24th"
                ]
            ],
            "y_data": [
                [
                    12,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_departed BY DAY"
        },
        "nl_queries": [
            "Bar chart x axis date departed y axis the number of date departed, and list by the Y from high to low.",
            "How many dogs departed in each day? Visualize with a bar chart that bins departed date by day interval, and display Y in descending order.",
            "List the number of dogs departed in each day with a bar chart that bins departed date by day interval, display in descending by the Y please."
        ]
    },
    "1184@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) ASC",
                "binning": "BIN date_arrived BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) ASC BIN date_arrived BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "Mon",
                    "Thur",
                    "Sat",
                    "Sun",
                    "Wed",
                    "Tue",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    2,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY WEEKDAY"
        },
        "nl_queries": [
            "How many dogs arrived in each day? Visualize with a bar chart that bins arrived date by weekday, list by the Y-axis in ascending.",
            "List the number of dogs arrived in each day with a bar chart that bins arrived date by weekday, and list by the Y-axis in ascending.",
            "Bar graph to show the number of date arrived from different date arrived, and display in asc by the total number."
        ]
    },
    "1184@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) DESC",
                "binning": "BIN date_arrived BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) DESC BIN date_arrived BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "Fri",
                    "Tue",
                    "Wed",
                    "Sun",
                    "Sat",
                    "Thur",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY WEEKDAY"
        },
        "nl_queries": [
            "How many dogs arrived in each day? Visualize with a bar chart that bins arrived date by weekday, rank in descending by the y-axis.",
            "List the number of dogs arrived in each day with a bar chart that bins arrived date by weekday, order by the Y in descending.",
            "Bar graph to show the number of date arrived from different date arrived, sort the number of date arrived from high to low order."
        ]
    },
    "1185@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) ASC",
                "binning": "BIN date_departed BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) ASC BIN date_departed BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "Fri",
                    "Mon",
                    "Thur",
                    "Tue",
                    "Wed",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": "BIN date_departed BY WEEKDAY"
        },
        "nl_queries": [
            "List the number of dogs departed in each day with a bar chart that bins departed date by weekday, could you show total number in ascending order?",
            "How many dogs departed in each day? Visualize with a bar chart that bins departed date by weekday, and could you show total number in ascending order?",
            "Create a bar chart showing the number of date departed across date departed, and I want to show in ascending by the y-axis."
        ]
    },
    "1185@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) DESC",
                "binning": "BIN date_departed BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) DESC BIN date_departed BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "Sun",
                    "Sat",
                    "Wed",
                    "Tue",
                    "Thur",
                    "Mon",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    12,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_departed BY WEEKDAY"
        },
        "nl_queries": [
            "List the number of dogs departed in each day with a bar chart that bins departed date by weekday, and sort in desc by the the number of date departed.",
            "Create a bar chart showing the number of date departed across date departed, and sort in descending by the total number.",
            "How many dogs departed in each day? Visualize with a bar chart that bins departed date by weekday, and sort in descending by the total number."
        ]
    },
    "1186@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs GROUP BY date_arrived ORDER BY date_arrived ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_arrived , COUNT(date_arrived) FROM Dogs GROUP BY date_arrived ORDER BY date_arrived ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2017-04-15",
                    "2017-04-20",
                    "2017-05-06",
                    "2017-06-18",
                    "2017-06-25",
                    "2017-07-25",
                    "2017-09-08",
                    "2017-10-16",
                    "2017-10-24",
                    "2017-10-25",
                    "2017-12-22",
                    "2017-12-29",
                    "2018-01-02",
                    "2018-01-17"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_arrived"
        },
        "nl_queries": [
            "How many dogs departed in each day? Visualize with a line chart that groups by departed date, display in asc by the X-axis.",
            "Plot date arrived by how many date arrived as a trend line, show by the X in ascending.",
            "List the number of dogs departed in each day with a line chart that groups by departed date, rank by the x-axis in ascending please."
        ]
    },
    "1186@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs GROUP BY date_arrived ORDER BY date_arrived DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_arrived , COUNT(date_arrived) FROM Dogs GROUP BY date_arrived ORDER BY date_arrived DESC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2018-01-17",
                    "2018-01-02",
                    "2017-12-29",
                    "2017-12-22",
                    "2017-10-25",
                    "2017-10-24",
                    "2017-10-16",
                    "2017-09-08",
                    "2017-07-25",
                    "2017-06-25",
                    "2017-06-18",
                    "2017-05-06",
                    "2017-04-20",
                    "2017-04-15"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_arrived"
        },
        "nl_queries": [
            "How many dogs departed in each day? Visualize with a line chart that groups by departed date, sort in descending by the x-axis.",
            "List the number of dogs departed in each day with a line chart that groups by departed date, display x axis from high to low order.",
            "Plot date arrived by how many date arrived as a trend line, rank in descending by the X."
        ]
    },
    "1187@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_arrived) ASC",
                "binning": "BIN date_arrived BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_arrived) ASC BIN date_arrived BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2018",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    1,
                    8
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY YEAR"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each year? Return a bar chart that bins arrived date by year interval, sort in asc by the Y.",
            "Show the number of dogs that received a treatment arrived in each year in a bar chart that bins arrived date by year interval, and could you sort by the total number in ascending?"
        ]
    },
    "1187@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_arrived) DESC",
                "binning": "BIN date_arrived BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_arrived) DESC BIN date_arrived BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    8,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY YEAR"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each year? Return a bar chart that bins arrived date by year interval, could you order y-axis in descending order?",
            "Show the number of dogs that received a treatment arrived in each year in a bar chart that bins arrived date by year interval, and could you sort by the total number in desc?"
        ]
    },
    "1188@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed ORDER BY date_departed ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed ORDER BY date_departed ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "2018-03-24",
                    "2018-03-25"
                ]
            ],
            "y_data": [
                [
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_departed"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment departed in each day? Return a bar chart, and I want to order in ascending by the x-axis.",
            "Show the number of dogs that received a treatment departed in each day in a bar chart, sort by the x axis in asc please."
        ]
    },
    "1188@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed ORDER BY date_departed DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed ORDER BY date_departed DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "2018-03-25",
                    "2018-03-24"
                ]
            ],
            "y_data": [
                [
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_departed"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment departed in each day? Return a bar chart, list x-axis in descending order.",
            "Show the number of dogs that received a treatment departed in each day in a bar chart, and show X-axis in desc order."
        ]
    },
    "1188@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed ORDER BY COUNT(date_departed) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed ORDER BY COUNT(date_departed) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "2018-03-24",
                    "2018-03-25"
                ]
            ],
            "y_data": [
                [
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_departed"
        },
        "nl_queries": [
            "Show the number of dogs that received a treatment departed in each day in a bar chart, order in asc by the how many date departed.",
            "How many dogs who have gone through a treatment departed in each day? Return a bar chart, could you show by the y axis from low to high?"
        ]
    },
    "1188@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed ORDER BY COUNT(date_departed) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed ORDER BY COUNT(date_departed) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "2018-03-25",
                    "2018-03-24"
                ]
            ],
            "y_data": [
                [
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_departed"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment departed in each day? Return a bar chart, list by the total number in descending.",
            "Show the number of dogs that received a treatment departed in each day in a bar chart, and display Y-axis from high to low order."
        ]
    },
    "1189@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_departed) ASC",
                "binning": "BIN date_departed BY DAY"
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_departed) ASC BIN date_departed BY DAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "24th",
                    "25th"
                ]
            ],
            "y_data": [
                [
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN date_departed BY DAY"
        },
        "nl_queries": [
            "Show the number of dogs that received a treatment arrived in each year in a bar chart that bins arrived date by day interval, sort in asc by the Y-axis.",
            "How many dogs who have gone through a treatment departed in each year? Return a bar chart that bins arrived date by day interval, and could you order from low to high by the total number please?"
        ]
    },
    "1189@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_departed) DESC",
                "binning": "BIN date_departed BY DAY"
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_departed) DESC BIN date_departed BY DAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "25th",
                    "24th"
                ]
            ],
            "y_data": [
                [
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_departed BY DAY"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment departed in each year? Return a bar chart that bins arrived date by day interval, list by the Y-axis in descending.",
            "Show the number of dogs that received a treatment arrived in each year in a bar chart that bins arrived date by day interval, order from high to low by the Y please."
        ]
    },
    "1190@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_arrived) ASC",
                "binning": "BIN date_arrived BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_arrived) ASC BIN date_arrived BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "Mon",
                    "Wed",
                    "Sat",
                    "Sun",
                    "Thur",
                    "Tue",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    1,
                    1,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of dogs that received a treatment arrived in each day in a bar chart that bins arrived date by weekday, rank in ascending by the total number please.",
            "How many dogs who have gone through a treatment arrived in each day? Return a bar chart that bins arrived date by weekday, and rank how many date arrived in asc order."
        ]
    },
    "1190@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_arrived) DESC",
                "binning": "BIN date_arrived BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_arrived) DESC BIN date_arrived BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "Fri",
                    "Tue",
                    "Thur",
                    "Sun",
                    "Sat",
                    "Wed",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    1,
                    1,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY WEEKDAY"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each day? Return a bar chart that bins arrived date by weekday, and I want to order by the how many date arrived in descending.",
            "Show the number of dogs that received a treatment arrived in each day in a bar chart that bins arrived date by weekday, and order y axis in descending order."
        ]
    },
    "1191@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_departed) ASC",
                "binning": "BIN date_departed BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_departed) ASC BIN date_departed BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "Fri",
                    "Mon",
                    "Thur",
                    "Tue",
                    "Wed",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN date_departed BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of dogs that received a treatment arrived in each day in a bar chart that bins departed date by weekday, and could you display from low to high by the Y-axis?",
            "How many dogs who have gone through a treatment arrived in each day? Return a bar chart that bins departed date by weekday, could you display from low to high by the Y-axis?"
        ]
    },
    "1191@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_departed) DESC",
                "binning": "BIN date_departed BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_departed) DESC BIN date_departed BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "Sun",
                    "Sat",
                    "Wed",
                    "Tue",
                    "Thur",
                    "Mon",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    6,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_departed BY WEEKDAY"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each day? Return a bar chart that bins departed date by weekday, list in desc by the y axis.",
            "Show the number of dogs that received a treatment arrived in each day in a bar chart that bins departed date by weekday, show in descending by the total number."
        ]
    },
    "1192@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_arrived ORDER BY date_arrived ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_arrived ORDER BY date_arrived ASC"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2017-04-20",
                    "2017-05-06",
                    "2017-06-18",
                    "2017-09-08",
                    "2017-10-24",
                    "2017-12-22",
                    "2017-12-29",
                    "2018-01-02"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_arrived"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each day? Return a line chart that groups by arrived date, and could you order date_arrived in asc order?",
            "Show the number of dogs that received a treatment arrived in each day in a line chart that groups by arrived date, and show in ascending by the X please.",
            "Show the number of dogs that received a treatment arrived in each day in a line chart that groups by arrived date, could you list x axis in ascending order?",
            "How many dogs who have gone through a treatment arrived in each day? Return a line chart that groups by arrived date, and sort X in asc order."
        ]
    },
    "1192@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_arrived ORDER BY date_arrived DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_arrived ORDER BY date_arrived DESC"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2018-01-02",
                    "2017-12-29",
                    "2017-12-22",
                    "2017-10-24",
                    "2017-09-08",
                    "2017-06-18",
                    "2017-05-06",
                    "2017-04-20"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_arrived"
        },
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each day? Return a line chart that groups by arrived date, and list date_arrived from high to low order.",
            "Show the number of dogs that received a treatment arrived in each day in a line chart that groups by arrived date, and list X in descending order.",
            "Show the number of dogs that received a treatment arrived in each day in a line chart that groups by arrived date, and list date_arrived from high to low order.",
            "How many dogs who have gone through a treatment arrived in each day? Return a line chart that groups by arrived date, list by the date_arrived in descending."
        ]
    },
    "1197@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY first_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY first_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Cindy",
                    "Emelie",
                    "Gay",
                    "Jaclyn",
                    "Johann",
                    "Kade",
                    "Lorenz",
                    "Melisa",
                    "Nora",
                    "Orlando",
                    "Rachelle",
                    "Rolando"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, I want to list by the first_name in asc.",
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, I want to list by the first_name in asc."
        ]
    },
    "1197@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY first_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY first_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Rolando",
                    "Rachelle",
                    "Orlando",
                    "Nora",
                    "Melisa",
                    "Lorenz",
                    "Kade",
                    "Johann",
                    "Jaclyn",
                    "Gay",
                    "Emelie",
                    "Cindy"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, order by the bars from high to low please.",
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, list in descending by the names."
        ]
    },
    "1197@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY COUNT(first_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY COUNT(first_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Cindy",
                    "Emelie",
                    "Gay",
                    "Johann",
                    "Kade",
                    "Lorenz",
                    "Melisa",
                    "Nora",
                    "Orlando",
                    "Rolando",
                    "Jaclyn",
                    "Rachelle"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, display by the how many first name in asc.",
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, and sort y axis in ascending order please."
        ]
    },
    "1197@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY COUNT(first_name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY COUNT(first_name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Rachelle",
                    "Jaclyn",
                    "Rolando",
                    "Orlando",
                    "Nora",
                    "Melisa",
                    "Lorenz",
                    "Kade",
                    "Johann",
                    "Gay",
                    "Emelie",
                    "Cindy"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, sort in descending by the total number.",
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, and rank how many first name from high to low order."
        ]
    },
    "1199@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY treatment_type_description ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY treatment_type_description ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "treatment_type_description",
            "y_name": "SUM(cost_of_treatment)",
            "x_data": [
                [
                    "Physical examination",
                    "Take for a Walk",
                    "Vaccination"
                ]
            ],
            "y_data": [
                [
                    2429,
                    2392,
                    2540
                ]
            ],
            "classify": [],
            "describe": "GROUP BY treatment_type_description"
        },
        "nl_queries": [
            "List the cost of each treatment and the corresponding treatment type description, and I want to show by the names in ascending.",
            "List the cost of each treatment and the corresponding treatment type description in a bar chart, and rank by the X in ascending.",
            "What are the cost and treatment type description of each treatment, I want to rank in asc by the x axis please.",
            "A bar chart about what are the cost and treatment type description of each treatment?, I want to show by the names in ascending.",
            "Draw a bar chart for what are the cost and treatment type description of each treatment?, and display X-axis in ascending order please."
        ]
    },
    "1199@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY treatment_type_description DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY treatment_type_description DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "treatment_type_description",
            "y_name": "SUM(cost_of_treatment)",
            "x_data": [
                [
                    "Vaccination",
                    "Take for a Walk",
                    "Physical examination"
                ]
            ],
            "y_data": [
                [
                    2540,
                    2392,
                    2429
                ]
            ],
            "classify": [],
            "describe": "GROUP BY treatment_type_description"
        },
        "nl_queries": [
            "Draw a bar chart for what are the cost and treatment type description of each treatment?, and order in descending by the x-axis.",
            "List the cost of each treatment and the corresponding treatment type description in a bar chart, display in desc by the x axis.",
            "List the cost of each treatment and the corresponding treatment type description, and sort by the x-axis in descending please.",
            "A bar chart about what are the cost and treatment type description of each treatment?, order from high to low by the x axis.",
            "What are the cost and treatment type description of each treatment, and rank by the bar in desc please."
        ]
    },
    "1199@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "treatment_type_description",
            "y_name": "SUM(cost_of_treatment)",
            "x_data": [
                [
                    "Take for a Walk",
                    "Physical examination",
                    "Vaccination"
                ]
            ],
            "y_data": [
                [
                    2392,
                    2429,
                    2540
                ]
            ],
            "classify": [],
            "describe": "GROUP BY treatment_type_description"
        },
        "nl_queries": [
            "What are the cost and treatment type description of each treatment, order in asc by the y axis.",
            "A bar chart about what are the cost and treatment type description of each treatment?, and order Y-axis from low to high order.",
            "Draw a bar chart for what are the cost and treatment type description of each treatment?, order in asc by the Y-axis.",
            "List the cost of each treatment and the corresponding treatment type description in a bar chart, and could you rank by the y-axis in asc?",
            "List the cost of each treatment and the corresponding treatment type description, order Y-axis from low to high order."
        ]
    },
    "1199@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "treatment_type_description",
            "y_name": "SUM(cost_of_treatment)",
            "x_data": [
                [
                    "Vaccination",
                    "Physical examination",
                    "Take for a Walk"
                ]
            ],
            "y_data": [
                [
                    2540,
                    2429,
                    2392
                ]
            ],
            "classify": [],
            "describe": "GROUP BY treatment_type_description"
        },
        "nl_queries": [
            "List the cost of each treatment and the corresponding treatment type description in a bar chart, and sort from high to low by the y axis.",
            "List the cost of each treatment and the corresponding treatment type description, display sum cost of treatment from high to low order.",
            "What are the cost and treatment type description of each treatment, and I want to rank by the y axis in desc.",
            "A bar chart about what are the cost and treatment type description of each treatment?, display in desc by the total number.",
            "Draw a bar chart for what are the cost and treatment type description of each treatment?, display Y from high to low order please."
        ]
    },
    "1200@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY treatment_type_description ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY treatment_type_description ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "treatment_type_description",
            "y_name": "AVG(cost_of_treatment)",
            "x_data": [
                [
                    "Physical examination",
                    "Take for a Walk",
                    "Vaccination"
                ]
            ],
            "y_data": [
                [
                    485.8,
                    478.4,
                    508
                ]
            ],
            "classify": [],
            "describe": "GROUP BY treatment_type_description"
        },
        "nl_queries": [
            "List the cost of each treatment and the corresponding treatment type description by a bar chart, and show in ascending by the bar.",
            "Visualize a bar chart for what are the cost and treatment type description of each treatment?, and order from low to high by the bars.",
            "What are the cost and treatment type description of each treatment Show bar chart, and I want to order in ascending by the x axis please.",
            "Display a bar chart for what are the cost and treatment type description of each treatment?, and show in ascending by the bar.",
            "List the cost of each treatment and the corresponding treatment type description Show bar chart, show in ascending by the bar."
        ]
    },
    "1200@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY treatment_type_description DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY treatment_type_description DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "treatment_type_description",
            "y_name": "AVG(cost_of_treatment)",
            "x_data": [
                [
                    "Vaccination",
                    "Take for a Walk",
                    "Physical examination"
                ]
            ],
            "y_data": [
                [
                    508,
                    478.4,
                    485.8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY treatment_type_description"
        },
        "nl_queries": [
            "What are the cost and treatment type description of each treatment Show bar chart, and order bars in desc order.",
            "List the cost of each treatment and the corresponding treatment type description by a bar chart, order bars in desc order.",
            "Display a bar chart for what are the cost and treatment type description of each treatment?, and order from high to low by the bar.",
            "Visualize a bar chart for what are the cost and treatment type description of each treatment?, and could you rank from high to low by the x-axis?",
            "List the cost of each treatment and the corresponding treatment type description Show bar chart, could you rank from high to low by the x-axis?"
        ]
    },
    "1200@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "treatment_type_description",
            "y_name": "AVG(cost_of_treatment)",
            "x_data": [
                [
                    "Take for a Walk",
                    "Physical examination",
                    "Vaccination"
                ]
            ],
            "y_data": [
                [
                    478.4,
                    485.8,
                    508
                ]
            ],
            "classify": [],
            "describe": "GROUP BY treatment_type_description"
        },
        "nl_queries": [
            "List the cost of each treatment and the corresponding treatment type description by a bar chart, could you order in ascending by the Y-axis?",
            "List the cost of each treatment and the corresponding treatment type description Show bar chart, and order by the Y from low to high.",
            "Display a bar chart for what are the cost and treatment type description of each treatment?, could you order in ascending by the Y-axis?",
            "Visualize a bar chart for what are the cost and treatment type description of each treatment?, and could you order in asc by the total number?",
            "What are the cost and treatment type description of each treatment Show bar chart, could you order in asc by the total number?"
        ]
    },
    "1200@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "treatment_type_description",
            "y_name": "AVG(cost_of_treatment)",
            "x_data": [
                [
                    "Vaccination",
                    "Physical examination",
                    "Take for a Walk"
                ]
            ],
            "y_data": [
                [
                    508,
                    485.8,
                    478.4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY treatment_type_description"
        },
        "nl_queries": [
            "Display a bar chart for what are the cost and treatment type description of each treatment?, and could you show by the Y in descending?",
            "List the cost of each treatment and the corresponding treatment type description Show bar chart, I want to list y axis in descending order please.",
            "Visualize a bar chart for what are the cost and treatment type description of each treatment?, and show by the y-axis from high to low.",
            "List the cost of each treatment and the corresponding treatment type description by a bar chart, and could you sort in desc by the y axis?",
            "What are the cost and treatment type description of each treatment Show bar chart, and show in descending by the Y-axis."
        ]
    },
    "1202@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT size_code , COUNT(size_code) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY size_code ORDER BY size_code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT size_code , COUNT(size_code) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY size_code ORDER BY size_code ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "size_code",
            "y_name": "COUNT(size_code)",
            "x_data": [
                [
                    "LGE",
                    "MED",
                    "SML"
                ]
            ],
            "y_data": [
                [
                    4,
                    9,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY size_code"
        },
        "nl_queries": [
            "How many dogs for each size code? Return a bar chart, display bar in asc order.",
            "List the number of dogs for each size code in a bar chart, I want to list bars in ascending order."
        ]
    },
    "1202@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT size_code , COUNT(size_code) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY size_code ORDER BY size_code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT size_code , COUNT(size_code) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY size_code ORDER BY size_code DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "size_code",
            "y_name": "COUNT(size_code)",
            "x_data": [
                [
                    "SML",
                    "MED",
                    "LGE"
                ]
            ],
            "y_data": [
                [
                    2,
                    9,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY size_code"
        },
        "nl_queries": [
            "How many dogs for each size code? Return a bar chart, and could you sort x axis in descending order?",
            "List the number of dogs for each size code in a bar chart, and I want to show in descending by the names."
        ]
    },
    "1202@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT size_code , COUNT(size_code) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY size_code ORDER BY COUNT(size_code) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT size_code , COUNT(size_code) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY size_code ORDER BY COUNT(size_code) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "size_code",
            "y_name": "COUNT(size_code)",
            "x_data": [
                [
                    "SML",
                    "LGE",
                    "MED"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY size_code"
        },
        "nl_queries": [
            "How many dogs for each size code? Return a bar chart, I want to display by the Y from low to high.",
            "List the number of dogs for each size code in a bar chart, and display Y-axis from low to high order."
        ]
    },
    "1202@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT size_code , COUNT(size_code) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY size_code ORDER BY COUNT(size_code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT size_code , COUNT(size_code) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY size_code ORDER BY COUNT(size_code) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "size_code",
            "y_name": "COUNT(size_code)",
            "x_data": [
                [
                    "MED",
                    "LGE",
                    "SML"
                ]
            ],
            "y_data": [
                [
                    9,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY size_code"
        },
        "nl_queries": [
            "List the number of dogs for each size code in a bar chart, could you sort total number from high to low order?",
            "How many dogs for each size code? Return a bar chart, and could you show by the y axis in desc?"
        ]
    },
    "1203@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY first_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY first_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Cindy",
                    "Emelie",
                    "Gay",
                    "Jaclyn",
                    "Johann",
                    "Kade",
                    "Lorenz",
                    "Melisa",
                    "Nora",
                    "Orlando",
                    "Rachelle",
                    "Rolando"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, I want to display bar from low to high order.",
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, I want to display bar from low to high order."
        ]
    },
    "1203@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY first_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY first_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Rolando",
                    "Rachelle",
                    "Orlando",
                    "Nora",
                    "Melisa",
                    "Lorenz",
                    "Kade",
                    "Johann",
                    "Jaclyn",
                    "Gay",
                    "Emelie",
                    "Cindy"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, rank by the names in descending.",
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, and show by the names in descending."
        ]
    },
    "1203@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY COUNT(first_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY COUNT(first_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Cindy",
                    "Emelie",
                    "Gay",
                    "Johann",
                    "Kade",
                    "Lorenz",
                    "Melisa",
                    "Nora",
                    "Orlando",
                    "Rolando",
                    "Jaclyn",
                    "Rachelle"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, I want to display how many first name from low to high order.",
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, and I want to show from low to high by the Y-axis."
        ]
    },
    "1203@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY COUNT(first_name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY COUNT(first_name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Rachelle",
                    "Jaclyn",
                    "Rolando",
                    "Orlando",
                    "Nora",
                    "Melisa",
                    "Lorenz",
                    "Kade",
                    "Johann",
                    "Gay",
                    "Emelie",
                    "Cindy"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name"
        },
        "nl_queries": [
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, could you sort y-axis from high to low order?",
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, and could you sort y-axis from high to low order?"
        ]
    },
    "1204@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name ORDER BY last_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name ORDER BY last_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "last_name",
            "y_name": "COUNT(last_name)",
            "x_data": [
                [
                    "DuBuque",
                    "Feil",
                    "Fisher",
                    "Funk",
                    "Haley",
                    "Mertz",
                    "Nicolas",
                    "Price",
                    "Prohaska",
                    "Rippin",
                    "Schmitt",
                    "Stoltenberg"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY last_name"
        },
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's last name, and sort x-axis from low to high order.",
            "How many dogs each owner has? Return a bar chart that groups by owner's last name, I want to show in ascending by the X-axis."
        ]
    },
    "1204@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name ORDER BY last_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name ORDER BY last_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "last_name",
            "y_name": "COUNT(last_name)",
            "x_data": [
                [
                    "Stoltenberg",
                    "Schmitt",
                    "Rippin",
                    "Prohaska",
                    "Price",
                    "Nicolas",
                    "Mertz",
                    "Haley",
                    "Funk",
                    "Fisher",
                    "Feil",
                    "DuBuque"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY last_name"
        },
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's last name, display by the last_name in desc.",
            "How many dogs each owner has? Return a bar chart that groups by owner's last name, display x axis from high to low order."
        ]
    },
    "1204@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name ORDER BY COUNT(last_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name ORDER BY COUNT(last_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "last_name",
            "y_name": "COUNT(last_name)",
            "x_data": [
                [
                    "DuBuque",
                    "Feil",
                    "Fisher",
                    "Haley",
                    "Mertz",
                    "Nicolas",
                    "Price",
                    "Prohaska",
                    "Rippin",
                    "Schmitt",
                    "Stoltenberg",
                    "Funk"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY last_name"
        },
        "nl_queries": [
            "How many dogs each owner has? Return a bar chart that groups by owner's last name, and order how many last name from low to high order please.",
            "List the number of dogs each owner has in a bar chart that groups by owner's last name, and I want to order how many last name in ascending order please."
        ]
    },
    "1204@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name ORDER BY COUNT(last_name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name ORDER BY COUNT(last_name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "last_name",
            "y_name": "COUNT(last_name)",
            "x_data": [
                [
                    "Funk",
                    "Stoltenberg",
                    "Schmitt",
                    "Rippin",
                    "Prohaska",
                    "Price",
                    "Nicolas",
                    "Mertz",
                    "Haley",
                    "Fisher",
                    "Feil",
                    "DuBuque"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY last_name"
        },
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's last name, and I want to list in descending by the y axis.",
            "How many dogs each owner has? Return a bar chart that groups by owner's last name, and rank from high to low by the y-axis please."
        ]
    },
    "1498@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY Headquarters ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY Headquarters ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarters",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Brazil",
                    "China",
                    "Netherlands",
                    "UK",
                    "USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart of the total number from each headquarters, order in asc by the Headquarters.",
            "List all headquarters and the number of companies in each headquarter with a bar chart, show from low to high by the Headquarters.",
            "For each headquarter, what are the headquarter and how many companies are centered there Visualize by bar chart, and rank in asc by the x axis please.",
            "List all headquarters and the number of companies in each headquarter, and order bar in ascending order."
        ]
    },
    "1498@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY Headquarters DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY Headquarters DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarters",
            "y_name": "count(*)",
            "x_data": [
                [
                    "USA",
                    "UK",
                    "Netherlands",
                    "China",
                    "Brazil"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List all headquarters and the number of companies in each headquarter, show in descending by the x axis.",
            "List all headquarters and the number of companies in each headquarter with a bar chart, show Headquarters in descending order.",
            "For each headquarter, what are the headquarter and how many companies are centered there Visualize by bar chart, and order names in descending order.",
            "Bar chart of the total number from each headquarters, and rank in desc by the x axis."
        ]
    },
    "1498@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarters",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Brazil",
                    "Netherlands",
                    "China",
                    "UK",
                    "USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List all headquarters and the number of companies in each headquarter, I want to list Y in asc order.",
            "List all headquarters and the number of companies in each headquarter with a bar chart, show from low to high by the total number please.",
            "For each headquarter, what are the headquarter and how many companies are centered there Visualize by bar chart, and show from low to high by the total number please.",
            "Bar chart of the total number from each headquarters, I want to list Y in asc order."
        ]
    },
    "1498@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarters",
            "y_name": "count(*)",
            "x_data": [
                [
                    "USA",
                    "UK",
                    "China",
                    "Netherlands",
                    "Brazil"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each headquarter, what are the headquarter and how many companies are centered there Visualize by bar chart, and I want to list in desc by the total number.",
            "List all headquarters and the number of companies in each headquarter, and order the total number in desc order.",
            "List all headquarters and the number of companies in each headquarter with a bar chart, could you display by the the total number from high to low?",
            "Bar chart of the total number from each headquarters, rank by the Y in descending."
        ]
    },
    "1506@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY Main_Industry ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY Main_Industry ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "COUNT(Main_Industry)",
            "x_data": [
                [
                    "Banking",
                    "Oil and gas"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Main_Industry"
        },
        "nl_queries": [
            "How many companies that are not headquartered in the United States for each main industry? Show me a bar chart, and rank by the names from low to high.",
            "Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart, show X-axis in ascending order please."
        ]
    },
    "1506@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY Main_Industry DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY Main_Industry DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "COUNT(Main_Industry)",
            "x_data": [
                [
                    "Oil and gas",
                    "Banking"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Main_Industry"
        },
        "nl_queries": [
            "Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart, display bars in descending order.",
            "How many companies that are not headquartered in the United States for each main industry? Show me a bar chart, and list names from high to low order."
        ]
    },
    "1506@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "COUNT(Main_Industry)",
            "x_data": [
                [
                    "Banking",
                    "Oil and gas"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Main_Industry"
        },
        "nl_queries": [
            "How many companies that are not headquartered in the United States for each main industry? Show me a bar chart, could you sort in asc by the y axis please?",
            "Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart, and display y axis from low to high order please."
        ]
    },
    "1506@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "COUNT(Main_Industry)",
            "x_data": [
                [
                    "Oil and gas",
                    "Banking"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Main_Industry"
        },
        "nl_queries": [
            "How many companies that are not headquartered in the United States for each main industry? Show me a bar chart, and could you display by the total number from high to low?",
            "Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart, and display Y from high to low order."
        ]
    },
    "1508@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "sum(market_value)",
            "x_data": [
                [
                    "Banking",
                    "Conglomerate",
                    "Oil and gas"
                ]
            ],
            "y_data": [
                [
                    580.4000000000002,
                    415.9,
                    1257.1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "what are the main indstries and total market value for each industry?, and could you display bars in asc order?",
            "A bar chart about what are the main indstries and total market value for each industry?, rank in ascending by the names please.",
            "Draw a bar chart of main industry versus total number of market value, I want to show by the X-axis from low to high.",
            "Show all main industry and total market value in each industry, show in asc by the x-axis.",
            "What are the main indstries and total market value for each industry Visualize by bar chart, rank in ascending by the X-axis.",
            "Show all main industry and total market value in each industry by a bar chart, show in asc by the x-axis."
        ]
    },
    "1508@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "sum(market_value)",
            "x_data": [
                [
                    "Oil and gas",
                    "Conglomerate",
                    "Banking"
                ]
            ],
            "y_data": [
                [
                    1257.1,
                    415.9,
                    580.4000000000002
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "what are the main indstries and total market value for each industry?, and order by the x-axis in desc.",
            "Show all main industry and total market value in each industry, order by the x-axis from high to low.",
            "A bar chart about what are the main indstries and total market value for each industry?, and could you rank X-axis from high to low order?",
            "Draw a bar chart of main industry versus total number of market value, order from high to low by the names.",
            "Show all main industry and total market value in each industry by a bar chart, display x-axis from high to low order.",
            "What are the main indstries and total market value for each industry Visualize by bar chart, list in descending by the X."
        ]
    },
    "1508@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "sum(market_value)",
            "x_data": [
                [
                    "Conglomerate",
                    "Banking",
                    "Oil and gas"
                ]
            ],
            "y_data": [
                [
                    415.9,
                    580.4000000000002,
                    1257.1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all main industry and total market value in each industry by a bar chart, show in asc by the y-axis please.",
            "what are the main indstries and total market value for each industry?, and display in asc by the total number.",
            "What are the main indstries and total market value for each industry Visualize by bar chart, I want to order sum market value in asc order.",
            "A bar chart about what are the main indstries and total market value for each industry?, I want to order sum market value in asc order.",
            "Draw a bar chart of main industry versus total number of market value, and order in ascending by the y axis.",
            "Show all main industry and total market value in each industry, and order in ascending by the y axis."
        ]
    },
    "1508@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "sum(market_value)",
            "x_data": [
                [
                    "Oil and gas",
                    "Banking",
                    "Conglomerate"
                ]
            ],
            "y_data": [
                [
                    1257.1,
                    580.4000000000002,
                    415.9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart of main industry versus total number of market value, and display y-axis in descending order.",
            "What are the main indstries and total market value for each industry Visualize by bar chart, I want to sort Y-axis in descending order.",
            "Show all main industry and total market value in each industry by a bar chart, rank in descending by the Y.",
            "Show all main industry and total market value in each industry, and I want to sort Y-axis in descending order.",
            "A bar chart about what are the main indstries and total market value for each industry?, sort by the Y-axis in desc.",
            "what are the main indstries and total market value for each industry?, and sort by the Y in descending."
        ]
    },
    "1510@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY Main_Industry ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY Main_Industry ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "COUNT(Main_Industry)",
            "x_data": [
                [
                    "Banking",
                    "Conglomerate"
                ]
            ],
            "y_data": [
                [
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Main_Industry"
        },
        "nl_queries": [
            "How many companies without a gas station in each main industry? Draw a bar chart, and display X in asc order.",
            "Show the number of companies without a gas station in each main industry with a bar chart, and order from low to high by the bars please."
        ]
    },
    "1510@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY Main_Industry DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY Main_Industry DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "COUNT(Main_Industry)",
            "x_data": [
                [
                    "Conglomerate",
                    "Banking"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Main_Industry"
        },
        "nl_queries": [
            "How many companies without a gas station in each main industry? Draw a bar chart, and I want to order in desc by the x-axis.",
            "Show the number of companies without a gas station in each main industry with a bar chart, sort in desc by the X-axis."
        ]
    },
    "1510@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "COUNT(Main_Industry)",
            "x_data": [
                [
                    "Conglomerate",
                    "Banking"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Main_Industry"
        },
        "nl_queries": [
            "Show the number of companies without a gas station in each main industry with a bar chart, could you list from low to high by the Y?",
            "How many companies without a gas station in each main industry? Draw a bar chart, and display by the total number in asc."
        ]
    },
    "1510@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "COUNT(Main_Industry)",
            "x_data": [
                [
                    "Banking",
                    "Conglomerate"
                ]
            ],
            "y_data": [
                [
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Main_Industry"
        },
        "nl_queries": [
            "How many companies without a gas station in each main industry? Draw a bar chart, order y axis in descending order.",
            "Show the number of companies without a gas station in each main industry with a bar chart, display by the Y-axis in desc."
        ]
    },
    "1511@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY Manager_Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY Manager_Name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Manager_Name",
            "y_name": "COUNT(Manager_Name)",
            "x_data": [
                [
                    "BrianWingrave",
                    "Bryan Taylor",
                    "BryanDenman",
                    "Colin Denman",
                    "Jon Rowe",
                    "Luke Rowe",
                    "Simon Cope Derek Marloe",
                    "SimonMarloe",
                    "Tom Whit",
                    "Tony Bristow"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Manager_Name"
        },
        "nl_queries": [
            "Show the number of gas stations for each manager in a bar chart, and show by the names in ascending.",
            "How many gas stations dors each manager have? Plot a bar chart, show by the names in ascending.",
            "Draw a bar chart of manager name versus how many manager name, and list X from low to high order."
        ]
    },
    "1511@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY Manager_Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY Manager_Name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Manager_Name",
            "y_name": "COUNT(Manager_Name)",
            "x_data": [
                [
                    "Tony Bristow",
                    "Tom Whit",
                    "SimonMarloe",
                    "Simon Cope Derek Marloe",
                    "Luke Rowe",
                    "Jon Rowe",
                    "Colin Denman",
                    "BryanDenman",
                    "Bryan Taylor",
                    "BrianWingrave"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Manager_Name"
        },
        "nl_queries": [
            "How many gas stations dors each manager have? Plot a bar chart, list bars in descending order.",
            "Show the number of gas stations for each manager in a bar chart, and I want to show by the X in desc.",
            "Draw a bar chart of manager name versus how many manager name, and list bars in descending order."
        ]
    },
    "1511@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY COUNT(Manager_Name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY COUNT(Manager_Name) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Manager_Name",
            "y_name": "COUNT(Manager_Name)",
            "x_data": [
                [
                    "BrianWingrave",
                    "Bryan Taylor",
                    "BryanDenman",
                    "Jon Rowe",
                    "Luke Rowe",
                    "Simon Cope Derek Marloe",
                    "SimonMarloe",
                    "Tom Whit",
                    "Tony Bristow",
                    "Colin Denman"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Manager_Name"
        },
        "nl_queries": [
            "Draw a bar chart of manager name versus how many manager name, and show by the total number from low to high.",
            "Show the number of gas stations for each manager in a bar chart, I want to rank by the Y from low to high.",
            "How many gas stations dors each manager have? Plot a bar chart, and I want to list in asc by the y-axis."
        ]
    },
    "1511@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY COUNT(Manager_Name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY COUNT(Manager_Name) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Manager_Name",
            "y_name": "COUNT(Manager_Name)",
            "x_data": [
                [
                    "Colin Denman",
                    "Tony Bristow",
                    "Tom Whit",
                    "SimonMarloe",
                    "Simon Cope Derek Marloe",
                    "Luke Rowe",
                    "Jon Rowe",
                    "BryanDenman",
                    "Bryan Taylor",
                    "BrianWingrave"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Manager_Name"
        },
        "nl_queries": [
            "Show the number of gas stations for each manager in a bar chart, and sort from high to low by the y-axis.",
            "How many gas stations dors each manager have? Plot a bar chart, and sort from high to low by the y-axis.",
            "Draw a bar chart of manager name versus how many manager name, I want to sort how many manager name in desc order."
        ]
    },
    "1516@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Company",
            "y_name": "count(*)",
            "x_data": [
                [
                    "BP",
                    "ExxonMobil",
                    "PetroChina",
                    "Petrobras",
                    "Royal Dutch Shell"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each company id, what are the companies and how many gas stations does each one operate Plot them as bar chart, and display Company in asc order.",
            "Show the company name with the number of gas station by a bar chart, display Company in asc order.",
            "Show the company name with the number of gas station Show bar chart, and display Company in asc order."
        ]
    },
    "1516@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Company",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Royal Dutch Shell",
                    "Petrobras",
                    "PetroChina",
                    "ExxonMobil",
                    "BP"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each company id, what are the companies and how many gas stations does each one operate Plot them as bar chart, and order bars in descending order.",
            "Show the company name with the number of gas station by a bar chart, and could you sort in descending by the X?",
            "Show the company name with the number of gas station Show bar chart, and order by the names in desc."
        ]
    },
    "1516@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Company",
            "y_name": "count(*)",
            "x_data": [
                [
                    "BP",
                    "PetroChina",
                    "Petrobras",
                    "Royal Dutch Shell",
                    "ExxonMobil"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each company id, what are the companies and how many gas stations does each one operate Plot them as bar chart, and I want to sort Y in asc order.",
            "Show the company name with the number of gas station Show bar chart, and could you sort by the Y in ascending?",
            "Show the company name with the number of gas station by a bar chart, I want to show the total number from low to high order."
        ]
    },
    "1516@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Company",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ExxonMobil",
                    "Royal Dutch Shell",
                    "Petrobras",
                    "PetroChina",
                    "BP"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the company name with the number of gas station by a bar chart, and show in descending by the y-axis.",
            "For each company id, what are the companies and how many gas stations does each one operate Plot them as bar chart, could you order by the Y in desc?",
            "Show the company name with the number of gas station Show bar chart, rank in descending by the y-axis please."
        ]
    },
    "1518@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY Headquarters ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY Headquarters ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarters",
            "y_name": "COUNT(Headquarters)",
            "x_data": [
                [
                    "Brazil",
                    "China",
                    "Netherlands",
                    "UK",
                    "USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Headquarters"
        },
        "nl_queries": [
            "How many companies in each headquarter? Plot a bar chart, and I want to sort from low to high by the x-axis.",
            "Show the number of companies in each headquarter with a bar chart, and show x-axis in ascending order.",
            "Bar chart of how many headquarters from each headquarters, list names in asc order."
        ]
    },
    "1518@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY Headquarters DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY Headquarters DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarters",
            "y_name": "COUNT(Headquarters)",
            "x_data": [
                [
                    "USA",
                    "UK",
                    "Netherlands",
                    "China",
                    "Brazil"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Headquarters"
        },
        "nl_queries": [
            "Show the number of companies in each headquarter with a bar chart, and list by the Headquarters from high to low.",
            "How many companies in each headquarter? Plot a bar chart, I want to order in descending by the Headquarters please.",
            "Bar chart of how many headquarters from each headquarters, order from high to low by the bars."
        ]
    },
    "1518@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarters",
            "y_name": "COUNT(Headquarters)",
            "x_data": [
                [
                    "Brazil",
                    "Netherlands",
                    "China",
                    "UK",
                    "USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Headquarters"
        },
        "nl_queries": [
            "Show the number of companies in each headquarter with a bar chart, show y-axis from low to high order please.",
            "How many companies in each headquarter? Plot a bar chart, could you order in ascending by the y-axis please?",
            "Bar chart of how many headquarters from each headquarters, and list in ascending by the y axis."
        ]
    },
    "1518@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarters",
            "y_name": "COUNT(Headquarters)",
            "x_data": [
                [
                    "USA",
                    "UK",
                    "China",
                    "Netherlands",
                    "Brazil"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Headquarters"
        },
        "nl_queries": [
            "Bar chart of how many headquarters from each headquarters, could you sort from high to low by the Y-axis?",
            "Show the number of companies in each headquarter with a bar chart, and order by the the number of headquarters in desc.",
            "How many companies in each headquarter? Plot a bar chart, and could you sort from high to low by the Y-axis?"
        ]
    },
    "733@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY Template_Type_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY Template_Type_Code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "COUNT(Template_Type_Code)",
            "x_data": [
                [
                    "AD",
                    "BK",
                    "CV",
                    "PP",
                    "PPT"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    2,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Template_Type_Code"
        },
        "nl_queries": [
            "How many templates for each template type code? Show a bar chart, rank in asc by the names.",
            "Show the number of template type code from each template type code, and rank by the bars from low to high.",
            "Return a bar chart showing the number of templates for each template type code, and sort by the bars from low to high."
        ]
    },
    "733@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY Template_Type_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY Template_Type_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "COUNT(Template_Type_Code)",
            "x_data": [
                [
                    "PPT",
                    "PP",
                    "CV",
                    "BK",
                    "AD"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    2,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Template_Type_Code"
        },
        "nl_queries": [
            "How many templates for each template type code? Show a bar chart, and sort from high to low by the bars please.",
            "Return a bar chart showing the number of templates for each template type code, and list X-axis in desc order.",
            "Show the number of template type code from each template type code, sort from high to low by the bars please."
        ]
    },
    "733@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "COUNT(Template_Type_Code)",
            "x_data": [
                [
                    "CV",
                    "AD",
                    "PPT",
                    "BK",
                    "PP"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    3,
                    6,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Template_Type_Code"
        },
        "nl_queries": [
            "Show the number of template type code from each template type code, I want to sort in ascending by the Y-axis please.",
            "Return a bar chart showing the number of templates for each template type code, and I want to order in asc by the y-axis.",
            "How many templates for each template type code? Show a bar chart, and could you list by the the number of template type code from low to high?"
        ]
    },
    "733@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "COUNT(Template_Type_Code)",
            "x_data": [
                [
                    "PP",
                    "BK",
                    "PPT",
                    "AD",
                    "CV"
                ]
            ],
            "y_data": [
                [
                    6,
                    6,
                    3,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Template_Type_Code"
        },
        "nl_queries": [
            "Return a bar chart showing the number of templates for each template type code, and could you display in descending by the total number?",
            "Show the number of template type code from each template type code, and rank in desc by the y-axis.",
            "How many templates for each template type code? Show a bar chart, rank by the the number of template type code in desc."
        ]
    },
    "744@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AD",
                    "BK",
                    "PP",
                    "PPT"
                ]
            ],
            "y_data": [
                [
                    3,
                    5,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all template type codes and the number of documents using each type Visualize by bar chart, rank Template_Type_Code in asc order.",
            "Show all template type codes and the number of documents using each type with a bar chart, and sort by the x-axis in ascending.",
            "What are the different template type codes, and how many documents use each type Plot them as bar chart, list X-axis from low to high order.",
            "A bar chart about what are the different template type codes, and how many documents use each type?, display from low to high by the Template_Type_Code.",
            "what are the different template type codes, and how many documents use each type?, and rank in ascending by the Template_Type_Code."
        ]
    },
    "744@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "PPT",
                    "PP",
                    "BK",
                    "AD"
                ]
            ],
            "y_data": [
                [
                    3,
                    4,
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all template type codes and the number of documents using each type with a bar chart, display by the x axis in descending.",
            "Show all template type codes and the number of documents using each type Visualize by bar chart, list in descending by the x axis.",
            "What are the different template type codes, and how many documents use each type Plot them as bar chart, and show by the bar from high to low.",
            "what are the different template type codes, and how many documents use each type?, and display by the x axis in descending.",
            "A bar chart about what are the different template type codes, and how many documents use each type?, order by the x axis in desc."
        ]
    },
    "744@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AD",
                    "PPT",
                    "PP",
                    "BK"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all template type codes and the number of documents using each type Visualize by bar chart, and could you display in asc by the y-axis?",
            "What are the different template type codes, and how many documents use each type Plot them as bar chart, and could you order y axis from low to high order please?",
            "Show all template type codes and the number of documents using each type with a bar chart, list from low to high by the Y please.",
            "A bar chart about what are the different template type codes, and how many documents use each type?, and could you display in asc by the y-axis?",
            "what are the different template type codes, and how many documents use each type?, and could you display in asc by the y-axis?"
        ]
    },
    "744@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "BK",
                    "PP",
                    "PPT",
                    "AD"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "what are the different template type codes, and how many documents use each type?, and I want to list by the Y-axis in desc.",
            "Show all template type codes and the number of documents using each type with a bar chart, rank by the the total number in desc.",
            "A bar chart about what are the different template type codes, and how many documents use each type?, I want to list by the Y-axis in desc.",
            "What are the different template type codes, and how many documents use each type Plot them as bar chart, I want to list by the Y-axis in desc.",
            "Show all template type codes and the number of documents using each type Visualize by bar chart, display total number in desc order please."
        ]
    },
    "748@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text ORDER BY Paragraph_Text ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text ORDER BY Paragraph_Text ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Paragraph_Text",
            "y_name": "COUNT(Paragraph_Text)",
            "x_data": [
                [
                    "Korea",
                    "Ukraine"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Paragraph_Text"
        },
        "nl_queries": [
            "What are the paragraph texts for the document with the name 'Customer reviews', and count them by a bar chart, and I want to list by the bar in asc.",
            "What are the number of the paragraph texts for the document with the name 'Customer reviews'?, and I want to list by the bar in asc.",
            "Show all paragraph texts for the document \"Customer reviews\", and count them by a bar chart, I want to sort in asc by the x axis.",
            "A bar chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?, could you list by the x-axis in asc?"
        ]
    },
    "748@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text ORDER BY Paragraph_Text DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text ORDER BY Paragraph_Text DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Paragraph_Text",
            "y_name": "COUNT(Paragraph_Text)",
            "x_data": [
                [
                    "Ukraine",
                    "Korea"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Paragraph_Text"
        },
        "nl_queries": [
            "A bar chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?, and show by the X in descending.",
            "What are the paragraph texts for the document with the name 'Customer reviews', and count them by a bar chart, rank by the x-axis from high to low.",
            "What are the number of the paragraph texts for the document with the name 'Customer reviews'?, and order names in desc order.",
            "Show all paragraph texts for the document \"Customer reviews\", and count them by a bar chart, and show Paragraph_Text from high to low order."
        ]
    },
    "748@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text ORDER BY COUNT(Paragraph_Text) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text ORDER BY COUNT(Paragraph_Text) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Paragraph_Text",
            "y_name": "COUNT(Paragraph_Text)",
            "x_data": [
                [
                    "Ukraine",
                    "Korea"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Paragraph_Text"
        },
        "nl_queries": [
            "A bar chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?, list by the y-axis in ascending.",
            "What are the number of the paragraph texts for the document with the name 'Customer reviews'?, and display by the how many paragraph text from low to high.",
            "What are the paragraph texts for the document with the name 'Customer reviews', and count them by a bar chart, I want to sort in asc by the Y-axis please.",
            "Show all paragraph texts for the document \"Customer reviews\", and count them by a bar chart, and I want to sort in asc by the Y-axis please."
        ]
    },
    "748@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text ORDER BY COUNT(Paragraph_Text) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text ORDER BY COUNT(Paragraph_Text) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Paragraph_Text",
            "y_name": "COUNT(Paragraph_Text)",
            "x_data": [
                [
                    "Korea",
                    "Ukraine"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Paragraph_Text"
        },
        "nl_queries": [
            "A bar chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?, and display Y in desc order.",
            "What are the paragraph texts for the document with the name 'Customer reviews', and count them by a bar chart, and list by the total number from high to low.",
            "Show all paragraph texts for the document \"Customer reviews\", and count them by a bar chart, could you display in descending by the y-axis?",
            "What are the number of the paragraph texts for the document with the name 'Customer reviews'?, could you list in desc by the Y please?"
        ]
    },
    "751@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY Document_Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY Document_Name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "A history of Arts",
                    "About Korea",
                    "Customer reviews",
                    "Do not panic",
                    "How Google people work",
                    "How to write a CV",
                    "Learning French",
                    "Palm reading",
                    "Summer Show",
                    "Welcome to NY"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    3,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the number of documents for each document name? Return a bar chart, I want to order names in ascending order.",
            "Show the number of documents for each document name in a bar chart, and I want to order names in ascending order."
        ]
    },
    "751@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY Document_Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY Document_Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Welcome to NY",
                    "Summer Show",
                    "Palm reading",
                    "Learning French",
                    "How to write a CV",
                    "How Google people work",
                    "Do not panic",
                    "Customer reviews",
                    "About Korea",
                    "A history of Arts"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    3,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the number of documents for each document name? Return a bar chart, and display by the names in descending please.",
            "Show the number of documents for each document name in a bar chart, and list from high to low by the X-axis please."
        ]
    },
    "751@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "About Korea",
                    "Do not panic",
                    "How Google people work",
                    "Learning French",
                    "Palm reading",
                    "Summer Show",
                    "A history of Arts",
                    "How to write a CV",
                    "Welcome to NY",
                    "Customer reviews"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the number of documents for each document name? Return a bar chart, display by the y-axis in ascending.",
            "Show the number of documents for each document name in a bar chart, could you display in ascending by the the total number please?"
        ]
    },
    "751@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Customer reviews",
                    "Welcome to NY",
                    "How to write a CV",
                    "A history of Arts",
                    "Summer Show",
                    "Palm reading",
                    "Learning French",
                    "How Google people work",
                    "Do not panic",
                    "About Korea"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the number of documents for each document name in a bar chart, order by the Y-axis from high to low.",
            "What is the number of documents for each document name? Return a bar chart, display by the the total number in descending please."
        ]
    },
    "753@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AD",
                    "BK",
                    "CV",
                    "PP",
                    "PPT"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    2,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?, I want to sort from low to high by the x axis.",
            "What are the different template type codes, and how many templates correspond to each Plot them as bar chart, and I want to display X-axis in asc order.",
            "Show all template type codes and number of templates for each with a bar chart, I want to list by the X-axis from low to high.",
            "Return a bar chart on what are the different template type codes, and how many templates correspond to each?, order from low to high by the X.",
            "Show all template type codes and number of templates for each Visualize by bar chart, and I want to sort from low to high by the x axis.",
            "Show me the total number by template type code in a histogram, sort by the X in ascending."
        ]
    },
    "753@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "PPT",
                    "PP",
                    "CV",
                    "BK",
                    "AD"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    2,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?, and could you show in desc by the x axis?",
            "Show all template type codes and number of templates for each Visualize by bar chart, order X-axis in descending order.",
            "Return a bar chart on what are the different template type codes, and how many templates correspond to each?, and list by the Template_Type_Code in descending.",
            "Show me the total number by template type code in a histogram, and list by the Template_Type_Code in descending.",
            "What are the different template type codes, and how many templates correspond to each Plot them as bar chart, and order from high to low by the x-axis please.",
            "Show all template type codes and number of templates for each with a bar chart, order from high to low by the x-axis please."
        ]
    },
    "753@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "CV",
                    "AD",
                    "PPT",
                    "BK",
                    "PP"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    3,
                    6,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the different template type codes, and how many templates correspond to each Plot them as bar chart, could you rank in ascending by the Y-axis please?",
            "Show all template type codes and number of templates for each Visualize by bar chart, I want to list in ascending by the Y-axis please.",
            "Return a bar chart on what are the different template type codes, and how many templates correspond to each?, and display by the Y in ascending.",
            "Show all template type codes and number of templates for each with a bar chart, and I want to list in ascending by the Y-axis please.",
            "Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?, and order by the the total number in ascending.",
            "Show me the total number by template type code in a histogram, and display from low to high by the Y."
        ]
    },
    "753@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "PP",
                    "BK",
                    "PPT",
                    "AD",
                    "CV"
                ]
            ],
            "y_data": [
                [
                    6,
                    6,
                    3,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all template type codes and number of templates for each with a bar chart, could you list Y-axis in descending order please?",
            "Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?, and I want to show by the y axis in desc.",
            "Return a bar chart on what are the different template type codes, and how many templates correspond to each?, and I want to sort by the Y from high to low.",
            "Show all template type codes and number of templates for each Visualize by bar chart, show Y-axis in descending order.",
            "Show me the total number by template type code in a histogram, and list y-axis from high to low order.",
            "What are the different template type codes, and how many templates correspond to each Plot them as bar chart, I want to show by the y axis in desc."
        ]
    },
    "754@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY Template_Type_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY Template_Type_Code ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "COUNT(Template_Type_Code)",
            "x_data": [
                [
                    "AD",
                    "BK",
                    "CV",
                    "PP",
                    "PPT"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Template_Type_Code"
        },
        "nl_queries": [
            "How many templates with version number later than 5 for each template type code? Show me a bar chart, I want to sort by the bars in asc.",
            "Return a bar chart showing the number of templates with a version number greater than 5 for each template type code, and rank in ascending by the names."
        ]
    },
    "754@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY Template_Type_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY Template_Type_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "COUNT(Template_Type_Code)",
            "x_data": [
                [
                    "PPT",
                    "PP",
                    "CV",
                    "BK",
                    "AD"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Template_Type_Code"
        },
        "nl_queries": [
            "Return a bar chart showing the number of templates with a version number greater than 5 for each template type code, display from high to low by the X.",
            "How many templates with version number later than 5 for each template type code? Show me a bar chart, I want to display in desc by the X-axis."
        ]
    },
    "754@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "COUNT(Template_Type_Code)",
            "x_data": [
                [
                    "CV",
                    "PPT",
                    "BK",
                    "PP",
                    "AD"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Template_Type_Code"
        },
        "nl_queries": [
            "Return a bar chart showing the number of templates with a version number greater than 5 for each template type code, and order y-axis in ascending order.",
            "How many templates with version number later than 5 for each template type code? Show me a bar chart, I want to rank in ascending by the Y."
        ]
    },
    "754@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "COUNT(Template_Type_Code)",
            "x_data": [
                [
                    "AD",
                    "PP",
                    "BK",
                    "PPT",
                    "CV"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Template_Type_Code"
        },
        "nl_queries": [
            "Return a bar chart showing the number of templates with a version number greater than 5 for each template type code, and I want to rank by the y-axis from high to low.",
            "How many templates with version number later than 5 for each template type code? Show me a bar chart, and order by the y axis in descending."
        ]
    },
    "763@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY Document_Description ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY Document_Description ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Description",
            "y_name": "COUNT(Document_Description)",
            "x_data": [
                [
                    "",
                    "b",
                    "f",
                    "h",
                    "k",
                    "n",
                    "r",
                    "w",
                    "y",
                    "z"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    2,
                    4,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Document_Description"
        },
        "nl_queries": [
            "Bar chart x axis document description y axis how many document description, and list bars in ascending order please.",
            "How many documents for each document description? Show me a bar chart, and could you display x-axis in asc order please?",
            "List the number of documents for each document description in a bar chart, and I want to sort by the bars from low to high."
        ]
    },
    "763@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY Document_Description DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY Document_Description DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Description",
            "y_name": "COUNT(Document_Description)",
            "x_data": [
                [
                    "z",
                    "y",
                    "w",
                    "r",
                    "n",
                    "k",
                    "h",
                    "f",
                    "b",
                    ""
                ]
            ],
            "y_data": [
                [
                    1,
                    4,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Document_Description"
        },
        "nl_queries": [
            "List the number of documents for each document description in a bar chart, order from high to low by the x-axis.",
            "How many documents for each document description? Show me a bar chart, and rank bars from high to low order.",
            "Bar chart x axis document description y axis how many document description, list bar in desc order."
        ]
    },
    "763@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY COUNT(Document_Description) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY COUNT(Document_Description) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Description",
            "y_name": "COUNT(Document_Description)",
            "x_data": [
                [
                    "",
                    "b",
                    "f",
                    "k",
                    "n",
                    "r",
                    "z",
                    "h",
                    "w",
                    "y"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Document_Description"
        },
        "nl_queries": [
            "Bar chart x axis document description y axis how many document description, and display in ascending by the total number.",
            "List the number of documents for each document description in a bar chart, display the number of document description in asc order.",
            "How many documents for each document description? Show me a bar chart, list total number in ascending order."
        ]
    },
    "763@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY COUNT(Document_Description) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY COUNT(Document_Description) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Description",
            "y_name": "COUNT(Document_Description)",
            "x_data": [
                [
                    "y",
                    "w",
                    "h",
                    "z",
                    "r",
                    "n",
                    "k",
                    "f",
                    "b",
                    ""
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Document_Description"
        },
        "nl_queries": [
            "How many documents for each document description? Show me a bar chart, I want to sort in descending by the the number of document description.",
            "List the number of documents for each document description in a bar chart, I want to sort in descending by the the number of document description.",
            "Bar chart x axis document description y axis how many document description, and could you rank total number in descending order?"
        ]
    },
    "1152@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY role_code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY role_code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "document_management",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "DBA",
                    "PROJ-MGR"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "what are the different role codes for users, and how many users have each?, show from low to high by the X-axis please.",
            "Bar graph to show the total number from different role code, and rank X-axis in ascending order please.",
            "Find the number of users in each role Plot them as bar chart, and sort by the names in ascending.",
            "What are the different role codes for users, and how many users have each Show bar chart, show from low to high by the X-axis please.",
            "Return a histogram on what are the different role codes for users, and how many users have each?, and order from low to high by the x axis."
        ]
    },
    "1152@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY role_code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY role_code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "document_management",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "PROJ-MGR",
                    "DBA"
                ]
            ],
            "y_data": [
                [
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "what are the different role codes for users, and how many users have each?, and I want to sort in descending by the role_code.",
            "Return a histogram on what are the different role codes for users, and how many users have each?, could you rank by the role_code in desc?",
            "What are the different role codes for users, and how many users have each Show bar chart, and rank in desc by the bars.",
            "Find the number of users in each role Plot them as bar chart, and could you display bar from high to low order?",
            "Bar graph to show the total number from different role code, and sort from high to low by the bar."
        ]
    },
    "1152@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "document_management",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "PROJ-MGR",
                    "DBA"
                ]
            ],
            "y_data": [
                [
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a histogram on what are the different role codes for users, and how many users have each?, rank by the total number in ascending please.",
            "Bar graph to show the total number from different role code, order by the the total number in ascending please.",
            "What are the different role codes for users, and how many users have each Show bar chart, and rank by the total number in ascending please.",
            "Find the number of users in each role Plot them as bar chart, display total number from low to high order please.",
            "what are the different role codes for users, and how many users have each?, list in ascending by the Y please."
        ]
    },
    "1152@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "document_management",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "DBA",
                    "PROJ-MGR"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a histogram on what are the different role codes for users, and how many users have each?, and show y-axis from high to low order.",
            "Bar graph to show the total number from different role code, and order by the the total number from high to low.",
            "what are the different role codes for users, and how many users have each?, and sort from high to low by the Y.",
            "Find the number of users in each role Plot them as bar chart, and could you list in desc by the the total number ?",
            "What are the different role codes for users, and how many users have each Show bar chart, order by the the total number from high to low."
        ]
    },
    "3279@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Team",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Team Batista",
                    "Team Orton"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar graph to show the total number from different team, and list in ascending by the bar.",
            "Show different teams in eliminations and the number of eliminations from each team by a bar chart, list x-axis in ascending order.",
            "How many eliminations did each team have Visualize by bar chart, list in asc by the names.",
            "Show different teams in eliminations and the number of eliminations from each team Visualize by bar chart, and order bars from low to high order.",
            "A bar chart about how many eliminations did each team have?, and sort by the bar in asc.",
            "Return a bar chart on how many eliminations did each team have?, list in ascending by the bar."
        ]
    },
    "3279@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Team",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Team Orton",
                    "Team Batista"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "A bar chart about how many eliminations did each team have?, sort by the X from high to low.",
            "Bar graph to show the total number from different team, show in desc by the Team.",
            "Show different teams in eliminations and the number of eliminations from each team by a bar chart, sort by the X from high to low.",
            "Show different teams in eliminations and the number of eliminations from each team Visualize by bar chart, could you show in desc by the Team?",
            "Return a bar chart on how many eliminations did each team have?, and sort by the bars in desc.",
            "How many eliminations did each team have Visualize by bar chart, I want to rank by the X-axis in descending please."
        ]
    },
    "3279@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Team",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Team Orton",
                    "Team Batista"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show different teams in eliminations and the number of eliminations from each team by a bar chart, order by the total number from low to high.",
            "How many eliminations did each team have Visualize by bar chart, and rank by the y-axis in ascending.",
            "Bar graph to show the total number from different team, and could you show in ascending by the y-axis please?",
            "A bar chart about how many eliminations did each team have?, and could you show in ascending by the y-axis please?",
            "Return a bar chart on how many eliminations did each team have?, and rank by the y-axis in ascending.",
            "Show different teams in eliminations and the number of eliminations from each team Visualize by bar chart, and rank from low to high by the the total number ."
        ]
    },
    "3279@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Team",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Team Batista",
                    "Team Orton"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a bar chart on how many eliminations did each team have?, sort y-axis in descending order.",
            "Bar graph to show the total number from different team, and could you list by the total number in desc?",
            "Show different teams in eliminations and the number of eliminations from each team Visualize by bar chart, and order by the the total number from high to low please.",
            "Show different teams in eliminations and the number of eliminations from each team by a bar chart, and list from high to low by the Y-axis.",
            "A bar chart about how many eliminations did each team have?, rank by the y-axis in desc.",
            "How many eliminations did each team have Visualize by bar chart, and I want to display in descending by the Y-axis."
        ]
    },
    "3281@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Nagoya , Japan",
                    "Osaka , Japan",
                    "Sapporo , Japan",
                    "Tijuana , Mexico",
                    "Tokyo , Japan"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "What is the number of locations of the wrestlers? Visualize by a bar chart, I want to list by the bar from low to high.",
            "A bar chart for what is the number of locations of the wrestlers, and could you order in asc by the Location?",
            "Draw a bar chart of location versus how many location, and display by the x-axis from low to high.",
            "Give the number of locations of all wrestlers with a bar chart, and could you sort x axis from low to high order please?"
        ]
    },
    "3281@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Tokyo , Japan",
                    "Tijuana , Mexico",
                    "Sapporo , Japan",
                    "Osaka , Japan",
                    "Nagoya , Japan"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "A bar chart for what is the number of locations of the wrestlers, and sort by the x-axis in descending.",
            "Draw a bar chart of location versus how many location, sort by the x-axis from high to low.",
            "What is the number of locations of the wrestlers? Visualize by a bar chart, and sort by the x-axis from high to low.",
            "Give the number of locations of all wrestlers with a bar chart, sort by the x-axis in descending."
        ]
    },
    "3281@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Nagoya , Japan",
                    "Osaka , Japan",
                    "Sapporo , Japan",
                    "Tijuana , Mexico",
                    "Tokyo , Japan"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "A bar chart for what is the number of locations of the wrestlers, and show total number in ascending order.",
            "Draw a bar chart of location versus how many location, could you order from low to high by the the number of location?",
            "Give the number of locations of all wrestlers with a bar chart, show by the y axis in asc.",
            "What is the number of locations of the wrestlers? Visualize by a bar chart, order in asc by the y axis."
        ]
    },
    "3281@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Tokyo , Japan",
                    "Tijuana , Mexico",
                    "Sapporo , Japan",
                    "Osaka , Japan",
                    "Nagoya , Japan"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "Draw a bar chart of location versus how many location, I want to sort by the y-axis in descending please.",
            "Give the number of locations of all wrestlers with a bar chart, display in descending by the y axis.",
            "A bar chart for what is the number of locations of the wrestlers, and I want to show y-axis in desc order.",
            "What is the number of locations of the wrestlers? Visualize by a bar chart, and I want to sort by the Y in desc."
        ]
    },
    "3283@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Team",
            "y_name": "COUNT(Team)",
            "x_data": [
                [
                    "Team Batista",
                    "Team Orton"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Team"
        },
        "nl_queries": [
            "Show the number of teams in elimination in a bar chart, I want to show in asc by the X-axis.",
            "Create a bar chart showing how many team across team, and I want to rank from low to high by the X-axis please.",
            "Visualize a bar chart for what is the number of their teams in elimination?, and show Team from low to high order.",
            "What is the number of their teams in elimination? Draw a bar chart, list in ascending by the x axis."
        ]
    },
    "3283@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Team",
            "y_name": "COUNT(Team)",
            "x_data": [
                [
                    "Team Orton",
                    "Team Batista"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Team"
        },
        "nl_queries": [
            "What is the number of their teams in elimination? Draw a bar chart, and list x axis in desc order.",
            "Show the number of teams in elimination in a bar chart, could you sort by the x-axis from high to low?",
            "Create a bar chart showing how many team across team, and I want to order in descending by the names.",
            "Visualize a bar chart for what is the number of their teams in elimination?, and rank X-axis in descending order."
        ]
    },
    "3283@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Team",
            "y_name": "COUNT(Team)",
            "x_data": [
                [
                    "Team Orton",
                    "Team Batista"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Team"
        },
        "nl_queries": [
            "Visualize a bar chart for what is the number of their teams in elimination?, order in ascending by the y axis please.",
            "What is the number of their teams in elimination? Draw a bar chart, and order in ascending by the y axis please.",
            "Create a bar chart showing how many team across team, display by the y axis in ascending please.",
            "Show the number of teams in elimination in a bar chart, could you display y axis in ascending order?"
        ]
    },
    "3283@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Team",
            "y_name": "COUNT(Team)",
            "x_data": [
                [
                    "Team Batista",
                    "Team Orton"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Team"
        },
        "nl_queries": [
            "Visualize a bar chart for what is the number of their teams in elimination?, and display y-axis in descending order.",
            "Show the number of teams in elimination in a bar chart, and order in desc by the total number.",
            "What is the number of their teams in elimination? Draw a bar chart, and I want to list by the y-axis from high to low.",
            "Create a bar chart showing how many team across team, could you sort in desc by the the number of team please?"
        ]
    },
    "1248@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = \"Jaskolski\" OR family_name = \"Langosh\"  ORDER BY COUNT(date_of_latest_logon) ASC",
                "binning": "BIN date_of_latest_logon BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = \"Jaskolski\" OR family_name = \"Langosh\"  ORDER BY COUNT(date_of_latest_logon) ASC BIN date_of_latest_logon BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_latest_logon",
            "y_name": "COUNT(date_of_latest_logon)",
            "x_data": [
                [
                    "Fri",
                    "Mon",
                    "Sun",
                    "Thur",
                    "Tue",
                    "Wed",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_latest_logon BY WEEKDAY"
        },
        "nl_queries": [
            "A bar chart for finding the number of the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\", show in ascending by the Y.",
            "What are the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\", and count them by a bar chart, and I want to order in asc by the total number.",
            "Find the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\", and count them by a bar chart, I want to sort in ascending by the y axis.",
            "What are the number of the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?, and sort by the Y from low to high.",
            "A bar chart for what are the number of the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?, and order total number in asc order.",
            "Find the number of the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\", and could you list y axis in ascending order?"
        ]
    },
    "1248@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = \"Jaskolski\" OR family_name = \"Langosh\"  ORDER BY COUNT(date_of_latest_logon) DESC",
                "binning": "BIN date_of_latest_logon BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = \"Jaskolski\" OR family_name = \"Langosh\"  ORDER BY COUNT(date_of_latest_logon) DESC BIN date_of_latest_logon BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_latest_logon",
            "y_name": "COUNT(date_of_latest_logon)",
            "x_data": [
                [
                    "Sat",
                    "Wed",
                    "Tue",
                    "Thur",
                    "Sun",
                    "Mon",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_latest_logon BY WEEKDAY"
        },
        "nl_queries": [
            "A bar chart for what are the number of the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?, and sort in descending by the y-axis.",
            "What are the number of the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?, and show in descending by the Y.",
            "What are the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\", and count them by a bar chart, list in descending by the y-axis.",
            "A bar chart for finding the number of the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\", and I want to show y axis in descending order.",
            "Find the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\", and count them by a bar chart, and could you show from high to low by the Y?",
            "Find the number of the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\", and sort in descending by the Y please."
        ]
    },
    "1249@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) ASC",
                "binning": "BIN date_of_completion BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    1,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_completion BY MONTH"
        },
        "nl_queries": [
            "What are the number of the completion dates of all the tests that have result \"Fail\"?, display from low to high by the total number.",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart, and display Y from low to high order please.",
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?, and I want to sort in ascending by the y-axis.",
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result, display Y from low to high order please.",
            "Return the number of the completion date for all the tests that have \"Fail\" result, sort Y-axis in asc order please.",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart, sort Y-axis in asc order please."
        ]
    },
    "1249@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) DESC",
                "binning": "BIN date_of_completion BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) DESC BIN date_of_completion BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "Mar",
                    "Feb"
                ]
            ],
            "y_data": [
                [
                    6,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_completion BY MONTH"
        },
        "nl_queries": [
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result, and display by the y axis in desc.",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart, and display Y from high to low order.",
            "Return the number of the completion date for all the tests that have \"Fail\" result, and list Y-axis from high to low order.",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart, and I want to show in descending by the y axis.",
            "What are the number of the completion dates of all the tests that have result \"Fail\"?, and sort y axis in desc order.",
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?, display Y from high to low order."
        ]
    },
    "1250@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion ORDER BY date_of_completion ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion ORDER BY date_of_completion ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "2018-02-26",
                    "2018-03-02",
                    "2018-03-04",
                    "2018-03-06",
                    "2018-03-07",
                    "2018-03-22"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_completion"
        },
        "nl_queries": [
            "Return the number of the completion date for all the tests that have \"Fail\" result, and rank by the bar in asc.",
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?, could you order from low to high by the names?",
            "What are the number of the completion dates of all the tests that have result \"Fail\"?, rank by the bar in asc.",
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result, and I want to order in asc by the X.",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart, and order by the X in ascending.",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart, show by the bars in asc please."
        ]
    },
    "1250@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion ORDER BY date_of_completion DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion ORDER BY date_of_completion DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "2018-03-22",
                    "2018-03-07",
                    "2018-03-06",
                    "2018-03-04",
                    "2018-03-02",
                    "2018-02-26"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_completion"
        },
        "nl_queries": [
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result, and sort in desc by the X-axis.",
            "Return the number of the completion date for all the tests that have \"Fail\" result, and sort in desc by the X-axis.",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart, sort by the names in descending.",
            "What are the number of the completion dates of all the tests that have result \"Fail\"?, sort bars in desc order.",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart, sort bars in desc order.",
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?, sort bars in desc order."
        ]
    },
    "1250@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion ORDER BY COUNT(date_of_completion) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion ORDER BY COUNT(date_of_completion) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "2018-02-26",
                    "2018-03-02",
                    "2018-03-04",
                    "2018-03-06",
                    "2018-03-07",
                    "2018-03-22"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_completion"
        },
        "nl_queries": [
            "Return the number of the completion date for all the tests that have \"Fail\" result, and list Y in asc order.",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart, and list Y in asc order.",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart, I want to sort from low to high by the the number of date of completion please.",
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?, and show by the y-axis from low to high.",
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result, and rank from low to high by the the number of date of completion.",
            "What are the number of the completion dates of all the tests that have result \"Fail\"?, and rank from low to high by the the number of date of completion."
        ]
    },
    "1250@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion ORDER BY COUNT(date_of_completion) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion ORDER BY COUNT(date_of_completion) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "2018-03-22",
                    "2018-03-07",
                    "2018-03-06",
                    "2018-03-04",
                    "2018-03-02",
                    "2018-02-26"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_completion"
        },
        "nl_queries": [
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?, and list from high to low by the Y-axis.",
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result, and list from high to low by the Y-axis.",
            "Return the number of the completion date for all the tests that have \"Fail\" result, and show y axis in desc order.",
            "What are the number of the completion dates of all the tests that have result \"Fail\"?, and rank from high to low by the y-axis.",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart, list from high to low by the Y-axis.",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart, list from high to low by the Y-axis."
        ]
    },
    "1251@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) ASC",
                "binning": "BIN date_of_completion BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "Sat",
                    "Fri",
                    "Mon",
                    "Sun",
                    "Tue",
                    "Wed",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_completion BY WEEKDAY"
        },
        "nl_queries": [
            "What are the number of the completion dates of all the tests that have result \"Fail\"?, sort in asc by the Y please.",
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?, and list Y in ascending order.",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart, sort in asc by the Y please.",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart, and could you list by the total number from low to high please?",
            "Return the number of the completion date for all the tests that have \"Fail\" result, and I want to display in asc by the y axis.",
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result, and order y-axis from low to high order please."
        ]
    },
    "1251@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) DESC",
                "binning": "BIN date_of_completion BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) DESC BIN date_of_completion BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "Thur",
                    "Wed",
                    "Tue",
                    "Sun",
                    "Mon",
                    "Fri",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_completion BY WEEKDAY"
        },
        "nl_queries": [
            "What are the number of the completion dates of all the tests that have result \"Fail\"?, show from high to low by the Y.",
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result, list y-axis in descending order please.",
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?, I want to sort in descending by the Y-axis.",
            "Return the number of the completion date for all the tests that have \"Fail\" result, and rank total number from high to low order please.",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart, and show from high to low by the Y.",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart, and show in desc by the y axis."
        ]
    },
    "1252@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"  ORDER BY COUNT(date_of_enrolment) ASC",
                "binning": "BIN date_of_enrolment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Aug",
                    "Nov",
                    "Oct",
                    "Sept"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY MONTH"
        },
        "nl_queries": [
            "A bar chart for finding the number of the enrollment date for all the tests that have \"Pass\" result, and sort by the Y from low to high please.",
            "What are the number of the enrollment dates of all the tests that have result \"Pass\"?, list in asc by the y axis.",
            "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a bar chart, sort by the Y from low to high please.",
            "What are the enrollment dates of all the tests that have result \"Pass\", and count them by a bar chart, display by the Y-axis in ascending please.",
            "Find the number of the enrollment date for all the tests that have \"Pass\" result, sort in asc by the Y.",
            "A bar chart for what are the number of the enrollment dates of all the tests that have result \"Pass\"?, display by the Y-axis in ascending please."
        ]
    },
    "1252@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"  ORDER BY COUNT(date_of_enrolment) DESC",
                "binning": "BIN date_of_enrolment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Sept",
                    "Oct",
                    "Nov",
                    "Aug"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY MONTH"
        },
        "nl_queries": [
            "A bar chart for finding the number of the enrollment date for all the tests that have \"Pass\" result, sort y axis in descending order.",
            "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a bar chart, show by the Y in descending please.",
            "What are the number of the enrollment dates of all the tests that have result \"Pass\"?, and could you list by the total number in desc?",
            "What are the enrollment dates of all the tests that have result \"Pass\", and count them by a bar chart, and list in desc by the total number.",
            "A bar chart for what are the number of the enrollment dates of all the tests that have result \"Pass\"?, and show in descending by the y-axis please.",
            "Find the number of the enrollment date for all the tests that have \"Pass\" result, and show in descending by the y-axis please."
        ]
    },
    "1253@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"  ORDER BY COUNT(date_of_enrolment) ASC",
                "binning": "BIN date_of_enrolment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Fri",
                    "Sat",
                    "Sun",
                    "Tue",
                    "Mon",
                    "Thur",
                    "Wed"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY WEEKDAY"
        },
        "nl_queries": [
            "What are the number of the enrollment dates of all the tests that have result \"Pass\"?, and show by the total number in asc.",
            "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a bar chart, and I want to display in asc by the Y.",
            "A bar chart for what are the number of the enrollment dates of all the tests that have result \"Pass\"?, and could you sort by the the number of date of enrolment in ascending?",
            "What are the enrollment dates of all the tests that have result \"Pass\", and count them by a bar chart, and rank y-axis in asc order.",
            "Find the number of the enrollment date for all the tests that have \"Pass\" result, could you sort Y-axis in asc order?",
            "A bar chart for finding the number of the enrollment date for all the tests that have \"Pass\" result, could you sort by the the number of date of enrolment in ascending?"
        ]
    },
    "1253@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"  ORDER BY COUNT(date_of_enrolment) DESC",
                "binning": "BIN date_of_enrolment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Wed",
                    "Thur",
                    "Mon",
                    "Tue",
                    "Sun",
                    "Sat",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    1,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY WEEKDAY"
        },
        "nl_queries": [
            "What are the enrollment dates of all the tests that have result \"Pass\", and count them by a bar chart, sort in descending by the y-axis.",
            "Find the number of the enrollment date for all the tests that have \"Pass\" result, and could you order by the Y-axis in desc?",
            "A bar chart for what are the number of the enrollment dates of all the tests that have result \"Pass\"?, I want to show by the the number of date of enrolment in descending.",
            "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a bar chart, and sort by the total number in desc.",
            "A bar chart for finding the number of the enrollment date for all the tests that have \"Pass\" result, and list by the Y in desc.",
            "What are the number of the enrollment dates of all the tests that have result \"Pass\"?, and sort in descending by the y-axis."
        ]
    },
    "1254@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" GROUP BY date_of_enrolment ORDER BY date_of_enrolment ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" GROUP BY date_of_enrolment ORDER BY date_of_enrolment ASC"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "2017-08-02",
                    "2017-09-06",
                    "2017-09-21",
                    "2017-10-10",
                    "2017-10-23",
                    "2017-10-29",
                    "2017-11-13"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_enrolment"
        },
        "nl_queries": [
            "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a line chart, and I want to display x axis in ascending order.",
            "Find the number of the enrollment date for all the tests that have \"Pass\" result, and list date_of_enrolment in ascending order please.",
            "A line chart for what are the number of the enrollment dates of all the tests that have result \"Pass\"?, and rank from low to high by the x axis.",
            "What are the enrollment dates of all the tests that have result \"Pass\", and count them by a line chart, show x-axis from low to high order.",
            "A line chart for finding the number of the enrollment date for all the tests that have \"Pass\" result, and list date_of_enrolment in ascending order please.",
            "What are the number of the enrollment dates of all the tests that have result \"Pass\"?, and display from low to high by the date_of_enrolment please."
        ]
    },
    "1254@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" GROUP BY date_of_enrolment ORDER BY date_of_enrolment DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" GROUP BY date_of_enrolment ORDER BY date_of_enrolment DESC"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "2017-11-13",
                    "2017-10-29",
                    "2017-10-23",
                    "2017-10-10",
                    "2017-09-21",
                    "2017-09-06",
                    "2017-08-02"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_enrolment"
        },
        "nl_queries": [
            "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a line chart, and show by the X in descending.",
            "A line chart for what are the number of the enrollment dates of all the tests that have result \"Pass\"?, could you order x axis from high to low order please?",
            "Find the number of the enrollment date for all the tests that have \"Pass\" result, and could you order x axis from high to low order please?",
            "What are the number of the enrollment dates of all the tests that have result \"Pass\"?, and rank by the X-axis in desc.",
            "A line chart for finding the number of the enrollment date for all the tests that have \"Pass\" result, and could you order x axis from high to low order please?",
            "What are the enrollment dates of all the tests that have result \"Pass\", and count them by a line chart, I want to show by the x axis in desc please."
        ]
    },
    "1273@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY course_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY course_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "course_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "AI",
                    "Art history",
                    "Chinese Painting",
                    "French",
                    "Japanese",
                    "Spanish",
                    "Writing in French",
                    "advanced database",
                    "database",
                    "modern Arts"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    3,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the name and the number of enrolled student for each course in a bar chart, show by the X from low to high.",
            "What is the name of each course and the corresponding number of student enrollment Show bar chart, could you show by the bar in asc?",
            "List the name and the number of enrolled student for each course Show bar chart, display x-axis from low to high order.",
            "Return a histogram on what is the name of each course and the corresponding number of student enrollment?, and sort X-axis in ascending order.",
            "Display a bar chart for what is the name of each course and the corresponding number of student enrollment?, and could you display in asc by the x-axis?"
        ]
    },
    "1273@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY course_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY course_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "course_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "modern Arts",
                    "database",
                    "advanced database",
                    "Writing in French",
                    "Spanish",
                    "Japanese",
                    "French",
                    "Chinese Painting",
                    "Art history",
                    "AI"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    3,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the name of each course and the corresponding number of student enrollment Show bar chart, I want to display course_name in desc order.",
            "Display a bar chart for what is the name of each course and the corresponding number of student enrollment?, show by the names in descending please.",
            "List the name and the number of enrolled student for each course in a bar chart, and could you show in desc by the X-axis?",
            "Return a histogram on what is the name of each course and the corresponding number of student enrollment?, could you list in desc by the x axis?",
            "List the name and the number of enrolled student for each course Show bar chart, show in desc by the bars."
        ]
    },
    "1273@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "course_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Chinese Painting",
                    "AI",
                    "Art history",
                    "Japanese",
                    "Spanish",
                    "Writing in French",
                    "advanced database",
                    "database",
                    "modern Arts",
                    "French"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for what is the name of each course and the corresponding number of student enrollment?, could you display by the y axis in asc?",
            "Return a histogram on what is the name of each course and the corresponding number of student enrollment?, rank Y in asc order.",
            "List the name and the number of enrolled student for each course Show bar chart, and list from low to high by the Y-axis.",
            "What is the name of each course and the corresponding number of student enrollment Show bar chart, rank Y in asc order.",
            "List the name and the number of enrolled student for each course in a bar chart, and rank in ascending by the total number."
        ]
    },
    "1273@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "course_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "French",
                    "modern Arts",
                    "database",
                    "advanced database",
                    "Writing in French",
                    "Spanish",
                    "Japanese",
                    "Art history",
                    "AI",
                    "Chinese Painting"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the name and the number of enrolled student for each course Show bar chart, and I want to show Y from high to low order please.",
            "What is the name of each course and the corresponding number of student enrollment Show bar chart, sort y axis in desc order.",
            "Return a histogram on what is the name of each course and the corresponding number of student enrollment?, and order total number in desc order.",
            "List the name and the number of enrolled student for each course in a bar chart, and order total number in desc order.",
            "Display a bar chart for what is the name of each course and the corresponding number of student enrollment?, sort in desc by the Y."
        ]
    },
    "1278@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY subject_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY subject_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Arts",
                    "Computer Science",
                    "Language"
                ]
            ],
            "y_data": [
                [
                    4,
                    6,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of courses for each subject in a bar chart, and order by the x axis in ascending.",
            "How many courses for each subject? Plot a bar chart, and order by the x axis in ascending."
        ]
    },
    "1278@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY subject_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY subject_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Language",
                    "Computer Science",
                    "Arts"
                ]
            ],
            "y_data": [
                [
                    5,
                    6,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many courses for each subject? Plot a bar chart, sort names in descending order.",
            "Find the number of courses for each subject in a bar chart, and rank from high to low by the bars."
        ]
    },
    "1278@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Arts",
                    "Language",
                    "Computer Science"
                ]
            ],
            "y_data": [
                [
                    4,
                    5,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of courses for each subject in a bar chart, and could you show in asc by the y axis?",
            "How many courses for each subject? Plot a bar chart, sort from low to high by the Y."
        ]
    },
    "1278@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Computer Science",
                    "Language",
                    "Arts"
                ]
            ],
            "y_data": [
                [
                    6,
                    5,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many courses for each subject? Plot a bar chart, I want to display by the y-axis in descending.",
            "Find the number of courses for each subject in a bar chart, and I want to list in descending by the y-axis."
        ]
    },
    "1283@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T2.personal_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T2.personal_name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "personal_name",
            "y_name": "student_id",
            "x_data": [
                [
                    "Alicia",
                    "Cary",
                    "Eliza",
                    "Marshall"
                ]
            ],
            "y_data": [
                [
                    10,
                    14,
                    15,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the student ID and personal name of the student with at least two enrollments, order x axis in ascending order."
        ]
    },
    "1283@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T2.personal_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T2.personal_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "personal_name",
            "y_name": "student_id",
            "x_data": [
                [
                    "Marshall",
                    "Eliza",
                    "Cary",
                    "Alicia"
                ]
            ],
            "y_data": [
                [
                    8,
                    15,
                    14,
                    10
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the student ID and personal name of the student with at least two enrollments, display by the x-axis in desc."
        ]
    },
    "1283@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.student_id ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.student_id ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "personal_name",
            "y_name": "student_id",
            "x_data": [
                [
                    "Marshall",
                    "Alicia",
                    "Cary",
                    "Eliza"
                ]
            ],
            "y_data": [
                [
                    8,
                    10,
                    14,
                    15
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the student ID and personal name of the student with at least two enrollments, and could you display in ascending by the y-axis?"
        ]
    },
    "1283@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.student_id DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.student_id DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "personal_name",
            "y_name": "student_id",
            "x_data": [
                [
                    "Eliza",
                    "Cary",
                    "Alicia",
                    "Marshall"
                ]
            ],
            "y_data": [
                [
                    15,
                    14,
                    10,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the student ID and personal name of the student with at least two enrollments, and sort in descending by the y axis."
        ]
    },
    "1284@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" GROUP BY date_test_taken ORDER BY date_test_taken ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" GROUP BY date_test_taken ORDER BY date_test_taken ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_test_taken",
            "y_name": "COUNT(date_test_taken)",
            "x_data": [
                [
                    "2018-03-19",
                    "2018-03-21",
                    "2018-03-23",
                    "2018-03-24",
                    "2018-03-25"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_test_taken"
        },
        "nl_queries": [
            "Find the dates of the tests taken with result \"Pass\", and count them by a bar chart, display by the names in ascending.",
            "A bar chart for finding the number of the dates of the tests taken with result \"Pass\", list from low to high by the X-axis.",
            "Find the number of the dates of the tests taken with result \"Pass\", sort by the names in asc please.",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a bar chart, sort by the names in asc please."
        ]
    },
    "1284@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" GROUP BY date_test_taken ORDER BY date_test_taken DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" GROUP BY date_test_taken ORDER BY date_test_taken DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_test_taken",
            "y_name": "COUNT(date_test_taken)",
            "x_data": [
                [
                    "2018-03-25",
                    "2018-03-24",
                    "2018-03-23",
                    "2018-03-21",
                    "2018-03-19"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_test_taken"
        },
        "nl_queries": [
            "Find the dates of the tests taken with result \"Pass\", and count them by a bar chart, and rank names in descending order.",
            "A bar chart for finding the number of the dates of the tests taken with result \"Pass\", show X-axis in desc order.",
            "Find the number of the dates of the tests taken with result \"Pass\", and I want to list by the bars from high to low.",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a bar chart, rank by the X in desc."
        ]
    },
    "1284@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" GROUP BY date_test_taken ORDER BY COUNT(date_test_taken) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" GROUP BY date_test_taken ORDER BY COUNT(date_test_taken) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_test_taken",
            "y_name": "COUNT(date_test_taken)",
            "x_data": [
                [
                    "2018-03-21",
                    "2018-03-23",
                    "2018-03-24",
                    "2018-03-19",
                    "2018-03-25"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_test_taken"
        },
        "nl_queries": [
            "Find the dates of the tests taken with result \"Pass\", and count them by a bar chart, and order by the Y in asc.",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a bar chart, order by the Y in asc.",
            "A bar chart for finding the number of the dates of the tests taken with result \"Pass\", I want to show by the y-axis in ascending.",
            "Find the number of the dates of the tests taken with result \"Pass\", and could you list in ascending by the Y-axis?"
        ]
    },
    "1284@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" GROUP BY date_test_taken ORDER BY COUNT(date_test_taken) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" GROUP BY date_test_taken ORDER BY COUNT(date_test_taken) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_test_taken",
            "y_name": "COUNT(date_test_taken)",
            "x_data": [
                [
                    "2018-03-25",
                    "2018-03-19",
                    "2018-03-24",
                    "2018-03-23",
                    "2018-03-21"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_test_taken"
        },
        "nl_queries": [
            "A bar chart for finding the number of the dates of the tests taken with result \"Pass\", sort Y-axis in descending order.",
            "Find the number of the dates of the tests taken with result \"Pass\", show total number from high to low order.",
            "Find the dates of the tests taken with result \"Pass\", and count them by a bar chart, and show total number from high to low order.",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a bar chart, sort Y-axis in descending order."
        ]
    },
    "1285@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY date_test_taken ASC",
                "binning": "BIN date_test_taken BY DAY"
            },
            "VQL": "Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY date_test_taken ASC BIN date_test_taken BY DAY"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_test_taken",
            "y_name": "COUNT(date_test_taken)",
            "x_data": [
                [
                    "19th",
                    "20th",
                    "21th",
                    "22th",
                    "23th",
                    "24th",
                    "25th"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    1,
                    0,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_test_taken BY DAY"
        },
        "nl_queries": [
            "Find the number of the dates of the tests taken with result \"Pass\", and I want to rank x axis in asc order.",
            "Find the dates of the tests taken with result \"Pass\", and count them by a line chart, and order by the x-axis from low to high.",
            "A line chart for finding the number of the dates of the tests taken with result \"Pass\", order X in asc order.",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a line chart, and I want to display by the X-axis in asc."
        ]
    },
    "1285@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY date_test_taken DESC",
                "binning": "BIN date_test_taken BY DAY"
            },
            "VQL": "Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY date_test_taken DESC BIN date_test_taken BY DAY"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_test_taken",
            "y_name": "COUNT(date_test_taken)",
            "x_data": [
                [
                    "25th",
                    "24th",
                    "23th",
                    "22th",
                    "21th",
                    "20th",
                    "19th"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    1,
                    0,
                    1,
                    0,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_test_taken BY DAY"
        },
        "nl_queries": [
            "Find the number of the dates of the tests taken with result \"Pass\", order x-axis from high to low order.",
            "A line chart for finding the number of the dates of the tests taken with result \"Pass\", display x-axis from high to low order.",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a line chart, and order x-axis from high to low order.",
            "Find the dates of the tests taken with result \"Pass\", and count them by a line chart, could you rank in desc by the x axis?"
        ]
    },
    "1286@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY COUNT(date_test_taken) ASC",
                "binning": "BIN date_test_taken BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY COUNT(date_test_taken) ASC BIN date_test_taken BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_test_taken",
            "y_name": "COUNT(date_test_taken)",
            "x_data": [
                [
                    "Thur",
                    "Tue",
                    "Fri",
                    "Sat",
                    "Wed",
                    "Mon",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    1,
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_test_taken BY WEEKDAY"
        },
        "nl_queries": [
            "Find the dates of the tests taken with result \"Pass\", and count them by a bar chart, and display y-axis in asc order.",
            "Find the number of the dates of the tests taken with result \"Pass\", sort from low to high by the y axis.",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a bar chart, and order y-axis in ascending order.",
            "A bar chart for finding the number of the dates of the tests taken with result \"Pass\", and order total number from low to high order."
        ]
    },
    "1286@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY COUNT(date_test_taken) DESC",
                "binning": "BIN date_test_taken BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY COUNT(date_test_taken) DESC BIN date_test_taken BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_test_taken",
            "y_name": "COUNT(date_test_taken)",
            "x_data": [
                [
                    "Sun",
                    "Mon",
                    "Wed",
                    "Sat",
                    "Fri",
                    "Tue",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    1,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_test_taken BY WEEKDAY"
        },
        "nl_queries": [
            "Find the dates of the tests taken with result \"Pass\", and count them by a bar chart, and list in descending by the y-axis.",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a bar chart, and sort in desc by the y axis.",
            "Find the number of the dates of the tests taken with result \"Pass\", and sort in descending by the Y.",
            "A bar chart for finding the number of the dates of the tests taken with result \"Pass\", list in descending by the y-axis."
        ]
    },
    "1289@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY subject_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY subject_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Arts",
                    "Computer Science",
                    "Language"
                ]
            ],
            "y_data": [
                [
                    4,
                    6,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of courses for each subject in a bar chart, and rank x-axis in ascending order please.",
            "How many courses for each subject? Plot a bar chart, could you display bar in ascending order?"
        ]
    },
    "1289@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY subject_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY subject_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Language",
                    "Computer Science",
                    "Arts"
                ]
            ],
            "y_data": [
                [
                    5,
                    6,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of courses for each subject in a bar chart, could you rank X from high to low order?",
            "How many courses for each subject? Plot a bar chart, and show from high to low by the X-axis please."
        ]
    },
    "1289@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Arts",
                    "Language",
                    "Computer Science"
                ]
            ],
            "y_data": [
                [
                    4,
                    5,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of courses for each subject in a bar chart, and list by the Y in asc please.",
            "How many courses for each subject? Plot a bar chart, and list by the Y in asc please."
        ]
    },
    "1289@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Computer Science",
                    "Language",
                    "Arts"
                ]
            ],
            "y_data": [
                [
                    6,
                    5,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of courses for each subject in a bar chart, and order total number in desc order.",
            "How many courses for each subject? Plot a bar chart, and display by the y-axis in descending."
        ]
    },
    "1293@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"  ORDER BY COUNT(date_of_enrolment) ASC",
                "binning": "BIN date_of_enrolment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Nov",
                    "Oct",
                    "Sept",
                    "Aug",
                    "Dec"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY MONTH"
        },
        "nl_queries": [
            "Find the the date of enrollment of the \"Spanish\" course, and count them by a bar chart, and sort by the Y from low to high.",
            "What is the date of enrollment of the course named \"Spanish\", and count them by a bar chart, and display y axis in asc order.",
            "A bar chart for finding the number of the the date of enrollment of the \"Spanish\" course, and sort Y-axis in asc order please.",
            "Find the number of the the date of enrollment of the \"Spanish\" course, and list in asc by the Y-axis please."
        ]
    },
    "1293@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"  ORDER BY COUNT(date_of_enrolment) DESC",
                "binning": "BIN date_of_enrolment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Dec",
                    "Aug",
                    "Sept",
                    "Oct",
                    "Nov"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY MONTH"
        },
        "nl_queries": [
            "What is the date of enrollment of the course named \"Spanish\", and count them by a bar chart, and rank Y-axis in descending order please.",
            "A bar chart for finding the number of the the date of enrollment of the \"Spanish\" course, sort Y in descending order.",
            "Find the number of the the date of enrollment of the \"Spanish\" course, could you list in descending by the y-axis please?",
            "Find the the date of enrollment of the \"Spanish\" course, and count them by a bar chart, rank in descending by the Y-axis."
        ]
    },
    "1294@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"  ORDER BY COUNT(date_of_enrolment) ASC",
                "binning": "BIN date_of_enrolment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Fri",
                    "Mon",
                    "Sat",
                    "Sun",
                    "Tue",
                    "Wed",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY WEEKDAY"
        },
        "nl_queries": [
            "Find the the date of enrollment of the \"Spanish\" course, and count them by a bar chart, I want to show Y-axis in asc order.",
            "What is the date of enrollment of the course named \"Spanish\", and count them by a bar chart, and I want to show by the Y-axis from low to high.",
            "A bar chart for finding the number of the the date of enrollment of the \"Spanish\" course, I want to show by the Y-axis from low to high.",
            "Find the number of the the date of enrollment of the \"Spanish\" course, I want to order by the Y-axis in ascending."
        ]
    },
    "1294@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"  ORDER BY COUNT(date_of_enrolment) DESC",
                "binning": "BIN date_of_enrolment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Thur",
                    "Wed",
                    "Tue",
                    "Sun",
                    "Sat",
                    "Mon",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY WEEKDAY"
        },
        "nl_queries": [
            "What is the date of enrollment of the course named \"Spanish\", and count them by a bar chart, and list by the total number in desc.",
            "Find the number of the the date of enrollment of the \"Spanish\" course, I want to show in desc by the y-axis.",
            "Find the the date of enrollment of the \"Spanish\" course, and count them by a bar chart, and order Y-axis in descending order.",
            "A bar chart for finding the number of the the date of enrollment of the \"Spanish\" course, list by the total number in desc."
        ]
    },
    "1295@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T2.middle_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T2.middle_name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "middle_name",
            "y_name": "student_id",
            "x_data": [
                [
                    "Asa",
                    "Brandt",
                    "Camilla",
                    "Casimir",
                    "Kailey",
                    "Karley",
                    "Kolby",
                    "Luella",
                    "Ursula",
                    "Vicente"
                ]
            ],
            "y_data": [
                [
                    6,
                    3,
                    13,
                    4,
                    9,
                    12,
                    11,
                    2,
                    14,
                    10
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the student IDs and middle names of the students enrolled in at most two courses, rank x axis from low to high order please.",
            "A bar chart about what are the student IDs and middle names of the students enrolled in at most two courses?, and I want to list x-axis in ascending order please.",
            "Find the student ID and middle name for all the students with at most two enrollments, show by the bar from low to high.",
            "what are the student IDs and middle names of the students enrolled in at most two courses?, could you list in ascending by the X?"
        ]
    },
    "1295@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T2.middle_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T2.middle_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "middle_name",
            "y_name": "student_id",
            "x_data": [
                [
                    "Vicente",
                    "Ursula",
                    "Luella",
                    "Kolby",
                    "Karley",
                    "Kailey",
                    "Casimir",
                    "Camilla",
                    "Brandt",
                    "Asa"
                ]
            ],
            "y_data": [
                [
                    10,
                    14,
                    2,
                    11,
                    12,
                    9,
                    4,
                    13,
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "what are the student IDs and middle names of the students enrolled in at most two courses?, could you show names in desc order?",
            "What are the student IDs and middle names of the students enrolled in at most two courses, and I want to sort in desc by the x axis.",
            "A bar chart about what are the student IDs and middle names of the students enrolled in at most two courses?, and I want to sort by the bars in descending.",
            "Find the student ID and middle name for all the students with at most two enrollments, display in descending by the bar."
        ]
    },
    "1295@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.student_id ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.student_id ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "middle_name",
            "y_name": "student_id",
            "x_data": [
                [
                    "Luella",
                    "Brandt",
                    "Casimir",
                    "Asa",
                    "Kailey",
                    "Vicente",
                    "Kolby",
                    "Karley",
                    "Camilla",
                    "Ursula"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    4,
                    6,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "A bar chart about what are the student IDs and middle names of the students enrolled in at most two courses?, and could you list in ascending by the total number please?",
            "What are the student IDs and middle names of the students enrolled in at most two courses, and show student_id in ascending order.",
            "Find the student ID and middle name for all the students with at most two enrollments, I want to rank by the y-axis in ascending please.",
            "what are the student IDs and middle names of the students enrolled in at most two courses?, could you list in ascending by the total number please?"
        ]
    },
    "1295@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.student_id DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.student_id DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "middle_name",
            "y_name": "student_id",
            "x_data": [
                [
                    "Ursula",
                    "Camilla",
                    "Karley",
                    "Kolby",
                    "Vicente",
                    "Kailey",
                    "Asa",
                    "Casimir",
                    "Brandt",
                    "Luella"
                ]
            ],
            "y_data": [
                [
                    14,
                    13,
                    12,
                    11,
                    10,
                    9,
                    6,
                    4,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the student ID and middle name for all the students with at most two enrollments, and could you list in desc by the total number?",
            "What are the student IDs and middle names of the students enrolled in at most two courses, rank by the student_id from high to low please.",
            "A bar chart about what are the student IDs and middle names of the students enrolled in at most two courses?, and display in desc by the Y.",
            "what are the student IDs and middle names of the students enrolled in at most two courses?, display in desc by the Y."
        ]
    },
    "1296@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) ASC",
                "binning": "BIN date_of_completion BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    4,
                    16
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_completion BY MONTH"
        },
        "nl_queries": [
            "Bar chart of how many date of completion from each date of completion, and show total number in ascending order.",
            "List the number of completion students in each month and bin date of completion by month interval with a bar chart, sort Y-axis in asc order.",
            "How many completion students in each month? Return a bar chart binning date of completion by month interval, show total number in ascending order."
        ]
    },
    "1296@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) DESC",
                "binning": "BIN date_of_completion BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) DESC BIN date_of_completion BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "Mar",
                    "Feb"
                ]
            ],
            "y_data": [
                [
                    16,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_completion BY MONTH"
        },
        "nl_queries": [
            "List the number of completion students in each month and bin date of completion by month interval with a bar chart, display from high to low by the Y-axis.",
            "How many completion students in each month? Return a bar chart binning date of completion by month interval, and order in descending by the y axis.",
            "Bar chart of how many date of completion from each date of completion, could you order in desc by the Y please?"
        ]
    },
    "1297@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) ASC",
                "binning": "BIN date_of_completion BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "Sat",
                    "Tue",
                    "Fri",
                    "Mon",
                    "Sun",
                    "Thur",
                    "Wed"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    3,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_completion BY WEEKDAY"
        },
        "nl_queries": [
            "Bar chart of how many date of completion from each date of completion, I want to sort by the y axis in ascending please.",
            "How many completion students in each day? Return a bar chart binning date of completion by weekday, and I want to sort y-axis in asc order.",
            "List the number of completion students in each day and bin date of completion by weekday with a bar chart, rank in ascending by the y axis."
        ]
    },
    "1297@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) DESC",
                "binning": "BIN date_of_completion BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) DESC BIN date_of_completion BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "Wed",
                    "Thur",
                    "Sun",
                    "Mon",
                    "Fri",
                    "Tue",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    3,
                    3,
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_completion BY WEEKDAY"
        },
        "nl_queries": [
            "How many completion students in each day? Return a bar chart binning date of completion by weekday, display how many date of completion in descending order.",
            "Bar chart of how many date of completion from each date of completion, and could you sort from high to low by the how many date of completion?",
            "List the number of completion students in each day and bin date of completion by weekday with a bar chart, and list in desc by the y-axis."
        ]
    },
    "1298@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC",
                "binning": "BIN date_of_enrolment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "July",
                    "Aug",
                    "Nov",
                    "Sept",
                    "Dec",
                    "Oct"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    3,
                    3,
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY MONTH"
        },
        "nl_queries": [
            "Bar chart of how many date of enrolment from each date of enrolment, and could you list by the Y-axis in asc?",
            "List the number of enrolment students in each month and bin date of enrolment by month interval with a bar chart, and sort by the y axis from low to high.",
            "How many enrolment students in each month? Return a bar chart binning date of enrolment by month interval, and I want to order in asc by the y-axis."
        ]
    },
    "1298@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC",
                "binning": "BIN date_of_enrolment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Oct",
                    "Dec",
                    "Sept",
                    "Nov",
                    "Aug",
                    "July"
                ]
            ],
            "y_data": [
                [
                    6,
                    4,
                    3,
                    3,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY MONTH"
        },
        "nl_queries": [
            "List the number of enrolment students in each month and bin date of enrolment by month interval with a bar chart, list y axis in desc order.",
            "How many enrolment students in each month? Return a bar chart binning date of enrolment by month interval, order in desc by the Y-axis.",
            "Bar chart of how many date of enrolment from each date of enrolment, and could you rank by the y-axis in desc?"
        ]
    },
    "1299@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC",
                "binning": "BIN date_of_enrolment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Fri",
                    "Tue",
                    "Sat",
                    "Sun",
                    "Wed",
                    "Mon",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    0,
                    2,
                    3,
                    3,
                    3,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY WEEKDAY"
        },
        "nl_queries": [
            "Bar chart x axis date of enrolment y axis the number of date of enrolment, and list y axis from low to high order.",
            "How many enrolment students in each day? Return a bar chart binning date of enrolment by weekday, and list y axis from low to high order.",
            "List the number of enrolment students in each day and bin date of enrolment by weekday with a bar chart, I want to show in asc by the total number."
        ]
    },
    "1299@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC",
                "binning": "BIN date_of_enrolment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Thur",
                    "Mon",
                    "Wed",
                    "Sun",
                    "Sat",
                    "Tue",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    3,
                    3,
                    3,
                    2,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY WEEKDAY"
        },
        "nl_queries": [
            "How many enrolment students in each day? Return a bar chart binning date of enrolment by weekday, rank the number of date of enrolment from high to low order.",
            "List the number of enrolment students in each day and bin date of enrolment by weekday with a bar chart, and could you show Y-axis in descending order?",
            "Bar chart x axis date of enrolment y axis the number of date of enrolment, sort in desc by the Y-axis."
        ]
    },
    "1300@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment GROUP BY date_of_completion ORDER BY date_of_completion ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment GROUP BY date_of_completion ORDER BY date_of_completion ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "2018-02-26",
                    "2018-02-27",
                    "2018-02-28",
                    "2018-03-01",
                    "2018-03-02",
                    "2018-03-04",
                    "2018-03-06",
                    "2018-03-07",
                    "2018-03-09",
                    "2018-03-10",
                    "2018-03-14",
                    "2018-03-16",
                    "2018-03-18",
                    "2018-03-19",
                    "2018-03-22"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2,
                    1,
                    2,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_completion"
        },
        "nl_queries": [
            "How many completion students in each day? Return a line chart grouping by date of completion, rank by the x axis from low to high.",
            "Visualize the general trend of the number of date of completion over the date of completion, and display x axis from low to high order.",
            "List the number of completion students in each day and group by date of completion in a line chart, and order from low to high by the x-axis."
        ]
    },
    "1300@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment GROUP BY date_of_completion ORDER BY date_of_completion DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment GROUP BY date_of_completion ORDER BY date_of_completion DESC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "2018-03-22",
                    "2018-03-19",
                    "2018-03-18",
                    "2018-03-16",
                    "2018-03-14",
                    "2018-03-10",
                    "2018-03-09",
                    "2018-03-07",
                    "2018-03-06",
                    "2018-03-04",
                    "2018-03-02",
                    "2018-03-01",
                    "2018-02-28",
                    "2018-02-27",
                    "2018-02-26"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    2,
                    1,
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_completion"
        },
        "nl_queries": [
            "How many completion students in each day? Return a line chart grouping by date of completion, and order by the X-axis in descending please.",
            "Visualize the general trend of the number of date of completion over the date of completion, and rank by the X-axis in desc.",
            "List the number of completion students in each day and group by date of completion in a line chart, and show from high to low by the X-axis please."
        ]
    },
    "992@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY COUNT(date_to) ASC",
                "binning": "BIN date_to BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY COUNT(date_to) ASC BIN date_to BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    2,
                    18
                ]
            ],
            "classify": [],
            "describe": "BIN date_to BY MONTH"
        },
        "nl_queries": [
            "Show the number of customer address history in each month and bin date to by month interval with a bar chart, and I want to sort in asc by the y axis."
        ]
    },
    "992@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY COUNT(date_to) DESC",
                "binning": "BIN date_to BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY COUNT(date_to) DESC BIN date_to BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "Mar",
                    "Feb"
                ]
            ],
            "y_data": [
                [
                    18,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_to BY MONTH"
        },
        "nl_queries": [
            "Show the number of customer address history in each month and bin date to by month interval with a bar chart, could you list from high to low by the Y?"
        ]
    },
    "993@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY COUNT(date_to) ASC",
                "binning": "BIN date_to BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY COUNT(date_to) ASC BIN date_to BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "Mon",
                    "Sat",
                    "Thur",
                    "Fri",
                    "Tue",
                    "Wed",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    3,
                    3,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN date_to BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of customer address history in each day and bin date to by weekday with a bar chart, and could you order y axis in ascending order?"
        ]
    },
    "993@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY COUNT(date_to) DESC",
                "binning": "BIN date_to BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY COUNT(date_to) DESC BIN date_to BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "Sun",
                    "Wed",
                    "Tue",
                    "Fri",
                    "Thur",
                    "Sat",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    3,
                    3,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_to BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of customer address history in each day and bin date to by weekday with a bar chart, could you show by the total number from high to low?"
        ]
    },
    "994@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY COUNT(date_from) ASC",
                "binning": "BIN date_from BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY COUNT(date_from) ASC BIN date_from BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "Tue",
                    "Sat",
                    "Wed",
                    "Sun",
                    "Thur",
                    "Mon",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    2,
                    3,
                    3,
                    5,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of customer address history in each day and bin date from by weekday with a bar chart, and sort how many date from from low to high order."
        ]
    },
    "994@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY COUNT(date_from) DESC",
                "binning": "BIN date_from BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY COUNT(date_from) DESC BIN date_from BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "Fri",
                    "Mon",
                    "Thur",
                    "Sun",
                    "Wed",
                    "Sat",
                    "Tue"
                ]
            ],
            "y_data": [
                [
                    6,
                    5,
                    3,
                    3,
                    2,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of customer address history in each day and bin date from by weekday with a bar chart, display by the total number from high to low."
        ]
    },
    "995@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.customer_name , COUNT(T2.customer_name) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T2.customer_name ORDER BY T2.customer_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.customer_name , COUNT(T2.customer_name) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T2.customer_name ORDER BY T2.customer_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_name",
            "y_name": "COUNT(customer_name)",
            "x_data": [
                [
                    "Buford",
                    "Cecelia",
                    "Cheyenne",
                    "Lela",
                    "Madaline",
                    "Melissa",
                    "Orion",
                    "Shany",
                    "Sterling"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    2,
                    1,
                    4,
                    3,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY customer_name"
        },
        "nl_queries": [
            "Show the number of addrens history for each customer in a bar chart, rank in asc by the bar."
        ]
    },
    "995@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.customer_name , COUNT(T2.customer_name) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T2.customer_name ORDER BY T2.customer_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.customer_name , COUNT(T2.customer_name) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T2.customer_name ORDER BY T2.customer_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_name",
            "y_name": "COUNT(customer_name)",
            "x_data": [
                [
                    "Sterling",
                    "Shany",
                    "Orion",
                    "Melissa",
                    "Madaline",
                    "Lela",
                    "Cheyenne",
                    "Cecelia",
                    "Buford"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    3,
                    4,
                    1,
                    2,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY customer_name"
        },
        "nl_queries": [
            "Show the number of addrens history for each customer in a bar chart, and could you rank from high to low by the x-axis?"
        ]
    },
    "995@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.customer_name , COUNT(T2.customer_name) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T2.customer_name ORDER BY COUNT(T2.customer_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.customer_name , COUNT(T2.customer_name) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T2.customer_name ORDER BY COUNT(T2.customer_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_name",
            "y_name": "COUNT(customer_name)",
            "x_data": [
                [
                    "Lela",
                    "Orion",
                    "Buford",
                    "Cheyenne",
                    "Shany",
                    "Sterling",
                    "Cecelia",
                    "Melissa",
                    "Madaline"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    3,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY customer_name"
        },
        "nl_queries": [
            "Show the number of addrens history for each customer in a bar chart, list by the total number from low to high."
        ]
    },
    "995@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.customer_name , COUNT(T2.customer_name) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T2.customer_name ORDER BY COUNT(T2.customer_name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.customer_name , COUNT(T2.customer_name) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T2.customer_name ORDER BY COUNT(T2.customer_name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_name",
            "y_name": "COUNT(customer_name)",
            "x_data": [
                [
                    "Madaline",
                    "Melissa",
                    "Cecelia",
                    "Sterling",
                    "Shany",
                    "Cheyenne",
                    "Buford",
                    "Orion",
                    "Lela"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    3,
                    2,
                    2,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY customer_name"
        },
        "nl_queries": [
            "Show the number of addrens history for each customer in a bar chart, and display y-axis in desc order."
        ]
    },
    "996@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T3.city , COUNT(T3.city) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T3.city ORDER BY T3.city ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T3.city , COUNT(T3.city) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T3.city ORDER BY T3.city ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "city",
            "y_name": "COUNT(city)",
            "x_data": [
                [
                    "Agustinstad",
                    "East Rickey",
                    "Edgardoberg",
                    "Estaland",
                    "Gibsonfurt",
                    "Gilbertmouth",
                    "Gleasonland",
                    "Hertafurt",
                    "Lake Floyd",
                    "Lake Katheryn",
                    "North Lisandroport",
                    "Port Montytown"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    3,
                    1,
                    3,
                    2,
                    1,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY city"
        },
        "nl_queries": [
            "Show the number of customer address history for each city in a bar chart, and rank by the X in ascending."
        ]
    },
    "996@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T3.city , COUNT(T3.city) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T3.city ORDER BY T3.city DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T3.city , COUNT(T3.city) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T3.city ORDER BY T3.city DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "city",
            "y_name": "COUNT(city)",
            "x_data": [
                [
                    "Port Montytown",
                    "North Lisandroport",
                    "Lake Katheryn",
                    "Lake Floyd",
                    "Hertafurt",
                    "Gleasonland",
                    "Gilbertmouth",
                    "Gibsonfurt",
                    "Estaland",
                    "Edgardoberg",
                    "East Rickey",
                    "Agustinstad"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    1,
                    1,
                    1,
                    2,
                    3,
                    1,
                    3,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY city"
        },
        "nl_queries": [
            "Show the number of customer address history for each city in a bar chart, and show by the x axis from high to low."
        ]
    },
    "996@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T3.city , COUNT(T3.city) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T3.city ORDER BY COUNT(T3.city) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T3.city , COUNT(T3.city) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T3.city ORDER BY COUNT(T3.city) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "city",
            "y_name": "COUNT(city)",
            "x_data": [
                [
                    "East Rickey",
                    "Edgardoberg",
                    "Gibsonfurt",
                    "Hertafurt",
                    "Lake Floyd",
                    "Lake Katheryn",
                    "Port Montytown",
                    "Agustinstad",
                    "Gleasonland",
                    "Estaland",
                    "Gilbertmouth",
                    "North Lisandroport"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY city"
        },
        "nl_queries": [
            "Show the number of customer address history for each city in a bar chart, and could you order from low to high by the Y?"
        ]
    },
    "996@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T3.city , COUNT(T3.city) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T3.city ORDER BY COUNT(T3.city) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T3.city , COUNT(T3.city) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T3.city ORDER BY COUNT(T3.city) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "city",
            "y_name": "COUNT(city)",
            "x_data": [
                [
                    "North Lisandroport",
                    "Gilbertmouth",
                    "Estaland",
                    "Gleasonland",
                    "Agustinstad",
                    "Port Montytown",
                    "Lake Katheryn",
                    "Lake Floyd",
                    "Hertafurt",
                    "Gibsonfurt",
                    "Edgardoberg",
                    "East Rickey"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY city"
        },
        "nl_queries": [
            "Show the number of customer address history for each city in a bar chart, and order Y-axis in desc order please."
        ]
    },
    "997@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY date_from ASC",
                "binning": "BIN date_from BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY date_from ASC BIN date_from BY YEAR"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    4,
                    4,
                    1,
                    1,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY YEAR"
        },
        "nl_queries": [
            "Show the number of customer address history in each year and bin date from by year interval with a line chart, and could you list by the x-axis from low to high please?",
            "Show the number of customer address history in each year and bin date from by year interval with a line chart, could you order by the date_from in asc?"
        ]
    },
    "997@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY date_from DESC",
                "binning": "BIN date_from BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY date_from DESC BIN date_from BY YEAR"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "2017",
                    "2016",
                    "2015",
                    "2014",
                    "2013",
                    "2012",
                    "2011",
                    "2010",
                    "2009",
                    "2008"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    1,
                    1,
                    4,
                    4,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY YEAR"
        },
        "nl_queries": [
            "Show the number of customer address history in each year and bin date from by year interval with a line chart, and list in descending by the x axis.",
            "Show the number of customer address history in each year and bin date from by year interval with a line chart, and sort from high to low by the x-axis."
        ]
    },
    "998@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY date_to ORDER BY date_to ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY date_to ORDER BY date_to ASC"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "2018-02-25",
                    "2018-02-27",
                    "2018-03-07",
                    "2018-03-08",
                    "2018-03-09",
                    "2018-03-10",
                    "2018-03-11",
                    "2018-03-13",
                    "2018-03-14",
                    "2018-03-16",
                    "2018-03-18",
                    "2018-03-19",
                    "2018-03-20",
                    "2018-03-22",
                    "2018-03-24"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3,
                    1,
                    2,
                    1,
                    3,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_to"
        },
        "nl_queries": [
            "Show the number of customer address history in each day and group by date to with a line chart, I want to list in ascending by the x axis.",
            "Show the number of customer address history in each day and group by date to with a line chart, and I want to list in ascending by the x axis."
        ]
    },
    "998@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY date_to ORDER BY date_to DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY date_to ORDER BY date_to DESC"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "2018-03-24",
                    "2018-03-22",
                    "2018-03-20",
                    "2018-03-19",
                    "2018-03-18",
                    "2018-03-16",
                    "2018-03-14",
                    "2018-03-13",
                    "2018-03-11",
                    "2018-03-10",
                    "2018-03-09",
                    "2018-03-08",
                    "2018-03-07",
                    "2018-02-27",
                    "2018-02-25"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1,
                    2,
                    1,
                    3,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_to"
        },
        "nl_queries": [
            "Show the number of customer address history in each day and group by date to with a line chart, and I want to sort by the x axis in descending.",
            "Show the number of customer address history in each day and group by date to with a line chart, and could you rank X in descending order?"
        ]
    },
    "1000@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name ORDER BY product_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name ORDER BY product_name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "Apple",
                    "gucci",
                    "jcrew"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Bar chart x axis product name y axis how many product name, and I want to display in asc by the x axis.",
            "Compare the frequency of product names using a bar chart, and list x-axis in ascending order.",
            "Show me a bar chart with the product name and their frequency, sort in ascending by the names."
        ]
    },
    "1000@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name ORDER BY product_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name ORDER BY product_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "jcrew",
                    "gucci",
                    "Apple"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Compare the frequency of product names using a bar chart, and display in desc by the X-axis.",
            "Bar chart x axis product name y axis how many product name, display in desc by the X-axis.",
            "Show me a bar chart with the product name and their frequency, sort by the X in desc."
        ]
    },
    "1000@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name ORDER BY COUNT(product_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name ORDER BY COUNT(product_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "Apple",
                    "gucci",
                    "jcrew"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Compare the frequency of product names using a bar chart, and list from low to high by the y axis please.",
            "Bar chart x axis product name y axis how many product name, I want to order by the Y in ascending.",
            "Show me a bar chart with the product name and their frequency, list from low to high by the y axis please."
        ]
    },
    "1000@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name ORDER BY COUNT(product_name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name ORDER BY COUNT(product_name) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "jcrew",
                    "gucci",
                    "Apple"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Compare the frequency of product names using a bar chart, rank by the Y-axis in desc.",
            "Bar chart x axis product name y axis how many product name, rank by the Y-axis in desc.",
            "Show me a bar chart with the product name and their frequency, and show by the y axis in desc please."
        ]
    },
    "1006@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY product_type_code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY product_type_code ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_type_code",
            "y_name": "COUNT(product_type_code)",
            "x_data": [
                [
                    "Clothes",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    5,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_type_code"
        },
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart, rank x-axis in ascending order."
        ]
    },
    "1006@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY product_type_code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY product_type_code DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_type_code",
            "y_name": "COUNT(product_type_code)",
            "x_data": [
                [
                    "Hardware",
                    "Clothes"
                ]
            ],
            "y_data": [
                [
                    8,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_type_code"
        },
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart, rank x axis in descending order."
        ]
    },
    "1006@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY COUNT(product_type_code) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY COUNT(product_type_code) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_type_code",
            "y_name": "COUNT(product_type_code)",
            "x_data": [
                [
                    "Clothes",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    5,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_type_code"
        },
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart, I want to order by the total number in asc please."
        ]
    },
    "1006@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY COUNT(product_type_code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY COUNT(product_type_code) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_type_code",
            "y_name": "COUNT(product_type_code)",
            "x_data": [
                [
                    "Hardware",
                    "Clothes"
                ]
            ],
            "y_data": [
                [
                    8,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_type_code"
        },
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart, and I want to list from high to low by the Y-axis please."
        ]
    },
    "1009@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY product_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY product_name ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "Apple",
                    "Sony",
                    "gucci",
                    "jcrew"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart, order x axis from low to high order please."
        ]
    },
    "1009@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY product_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY product_name DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "jcrew",
                    "gucci",
                    "Sony",
                    "Apple"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    3,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart, and display from high to low by the x axis please."
        ]
    },
    "1009@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY COUNT(product_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY COUNT(product_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "gucci",
                    "Sony",
                    "jcrew",
                    "Apple"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    3,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart, and I want to sort by the y-axis in ascending."
        ]
    },
    "1009@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY COUNT(product_name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY COUNT(product_name) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "Apple",
                    "jcrew",
                    "Sony",
                    "gucci"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name"
        },
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart, and could you rank y-axis in descending order?"
        ]
    },
    "1010@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY state_province_county ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY state_province_county ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "state_province_county",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Colorado",
                    "District of Columbia",
                    "Idaho",
                    "Illinois",
                    "Kentucky",
                    "Louisiana",
                    "Maine",
                    "Maryland",
                    "Nevada",
                    "Oklahoma",
                    "Oregon",
                    "SouthDakota",
                    "Vermont",
                    "Virginia"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the total number from each state province county, and could you display from low to high by the bar?",
            "Show each state and the number of addresses in each state Show bar chart, list from low to high by the names.",
            "Show each state and the number of addresses in each state by a bar chart, and could you display from low to high by the bar?"
        ]
    },
    "1010@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY state_province_county DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY state_province_county DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "state_province_county",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Virginia",
                    "Vermont",
                    "SouthDakota",
                    "Oregon",
                    "Oklahoma",
                    "Nevada",
                    "Maryland",
                    "Maine",
                    "Louisiana",
                    "Kentucky",
                    "Illinois",
                    "Idaho",
                    "District of Columbia",
                    "Colorado"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the total number from each state province county, and order X in desc order.",
            "Show each state and the number of addresses in each state Show bar chart, rank X in desc order.",
            "Show each state and the number of addresses in each state by a bar chart, and list x axis from high to low order please."
        ]
    },
    "1010@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "state_province_county",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Colorado",
                    "District of Columbia",
                    "Idaho",
                    "Illinois",
                    "Louisiana",
                    "Maine",
                    "Maryland",
                    "Nevada",
                    "Oklahoma",
                    "Oregon",
                    "SouthDakota",
                    "Vermont",
                    "Virginia",
                    "Kentucky"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the total number from each state province county, sort by the Y-axis from low to high.",
            "Show each state and the number of addresses in each state Show bar chart, sort by the Y-axis from low to high.",
            "Show each state and the number of addresses in each state by a bar chart, and could you list in asc by the Y-axis please?"
        ]
    },
    "1010@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "state_province_county",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Kentucky",
                    "Virginia",
                    "Vermont",
                    "SouthDakota",
                    "Oregon",
                    "Oklahoma",
                    "Nevada",
                    "Maryland",
                    "Maine",
                    "Louisiana",
                    "Illinois",
                    "Idaho",
                    "District of Columbia",
                    "Colorado"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the total number from each state province county, and list in desc by the the total number .",
            "Show each state and the number of addresses in each state by a bar chart, and sort total number in desc order.",
            "Show each state and the number of addresses in each state Show bar chart, and sort y-axis in desc order."
        ]
    },
    "2704@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY County ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY County ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County",
            "y_name": "count(*)",
            "x_data": [
                [
                    "20 Elkhart",
                    "46 LaPorte 71 St. Joseph",
                    "50 Marshall",
                    "71 St. Joseph",
                    "75 Starke"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart of county versus the total number, and display by the X in asc.",
            "Return a bar chart showing the number of schools in each county, order X in ascending order.",
            "Show each county along with the number of schools, and could you rank by the x-axis in asc?"
        ]
    },
    "2704@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY County DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY County DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County",
            "y_name": "count(*)",
            "x_data": [
                [
                    "75 Starke",
                    "71 St. Joseph",
                    "50 Marshall",
                    "46 LaPorte 71 St. Joseph",
                    "20 Elkhart"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart of county versus the total number, order in descending by the bars.",
            "Show each county along with the number of schools, I want to display in desc by the x axis please.",
            "Return a bar chart showing the number of schools in each county, and display in desc by the x-axis please."
        ]
    },
    "2704@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County",
            "y_name": "count(*)",
            "x_data": [
                [
                    "20 Elkhart",
                    "46 LaPorte 71 St. Joseph",
                    "75 Starke",
                    "71 St. Joseph",
                    "50 Marshall"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a bar chart showing the number of schools in each county, and display y-axis in ascending order.",
            "Show each county along with the number of schools, and display in ascending by the the total number .",
            "Draw a bar chart of county versus the total number, order by the Y in ascending please."
        ]
    },
    "2704@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County",
            "y_name": "count(*)",
            "x_data": [
                [
                    "50 Marshall",
                    "71 St. Joseph",
                    "75 Starke",
                    "46 LaPorte 71 St. Joseph",
                    "20 Elkhart"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart of county versus the total number, show by the y axis in desc.",
            "Show each county along with the number of schools, and display Y in desc order.",
            "Return a bar chart showing the number of schools in each county, and rank y axis from high to low order please."
        ]
    },
    "2706@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "20 Elkhart",
                    "46 LaPorte 71 St. Joseph",
                    "50 Marshall",
                    "71 St. Joseph",
                    "75 Starke"
                ]
            ],
            "y_data": [
                [
                    601,
                    852,
                    1098,
                    984,
                    620
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show sum enrollment from each county, and sort by the x axis in ascending.",
            "Please give me a bar chart for the total enrollment in each county, display by the x-axis from low to high.",
            "Compare the total enrollment in each county with a bar chart, and list by the names from low to high please."
        ]
    },
    "2706@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "75 Starke",
                    "71 St. Joseph",
                    "50 Marshall",
                    "46 LaPorte 71 St. Joseph",
                    "20 Elkhart"
                ]
            ],
            "y_data": [
                [
                    620,
                    984,
                    1098,
                    852,
                    601
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Please give me a bar chart for the total enrollment in each county, could you rank County in descending order?",
            "Compare the total enrollment in each county with a bar chart, and could you order in desc by the x axis?",
            "Show sum enrollment from each county, and I want to list X in desc order please."
        ]
    },
    "2706@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "20 Elkhart",
                    "75 Starke",
                    "46 LaPorte 71 St. Joseph",
                    "71 St. Joseph",
                    "50 Marshall"
                ]
            ],
            "y_data": [
                [
                    601,
                    620,
                    852,
                    984,
                    1098
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show sum enrollment from each county, sort y-axis from low to high order.",
            "Compare the total enrollment in each county with a bar chart, sort y-axis from low to high order.",
            "Please give me a bar chart for the total enrollment in each county, sort in asc by the total number."
        ]
    },
    "2706@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "50 Marshall",
                    "71 St. Joseph",
                    "46 LaPorte 71 St. Joseph",
                    "75 Starke",
                    "20 Elkhart"
                ]
            ],
            "y_data": [
                [
                    1098,
                    984,
                    852,
                    620,
                    601
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show sum enrollment from each county, sort from high to low by the y axis.",
            "Compare the total enrollment in each county with a bar chart, show y axis in descending order.",
            "Please give me a bar chart for the total enrollment in each county, and order by the sum enrollment in desc."
        ]
    },
    "2051@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Date , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Date ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Date , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Date ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Sales",
            "x_data": [
                [
                    "December 16, 2001",
                    "December 22, 2001",
                    "December 30, 2001",
                    "November 12, 2001",
                    "November 18, 2001",
                    "November 4, 2001",
                    "October 14, 2001",
                    "October 29, 2001",
                    "September 9, 2001"
                ]
            ],
            "y_data": [
                [
                    2804,
                    1934,
                    3798,
                    6532,
                    3421,
                    1232,
                    4798,
                    1763,
                    798
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the date and the corresponding sales of the journal which did not have any of the listed editors serving on the committee by a bar chart, and rank X-axis in ascending order."
        ]
    },
    "2051@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Date , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Date DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Date , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Date DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Sales",
            "x_data": [
                [
                    "September 9, 2001",
                    "October 29, 2001",
                    "October 14, 2001",
                    "November 4, 2001",
                    "November 18, 2001",
                    "November 12, 2001",
                    "December 30, 2001",
                    "December 22, 2001",
                    "December 16, 2001"
                ]
            ],
            "y_data": [
                [
                    798,
                    1763,
                    4798,
                    1232,
                    3421,
                    6532,
                    3798,
                    1934,
                    2804
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the date and the corresponding sales of the journal which did not have any of the listed editors serving on the committee by a bar chart, rank by the bar in desc."
        ]
    },
    "2051@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Date , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Sales ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Date , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Sales ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Sales",
            "x_data": [
                [
                    "September 9, 2001",
                    "November 4, 2001",
                    "October 29, 2001",
                    "December 22, 2001",
                    "December 16, 2001",
                    "November 18, 2001",
                    "December 30, 2001",
                    "October 14, 2001",
                    "November 12, 2001"
                ]
            ],
            "y_data": [
                [
                    798,
                    1232,
                    1763,
                    1934,
                    2804,
                    3421,
                    3798,
                    4798,
                    6532
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the date and the corresponding sales of the journal which did not have any of the listed editors serving on the committee by a bar chart, and list in ascending by the total number."
        ]
    },
    "2051@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Date , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Sales DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Date , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Sales DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Sales",
            "x_data": [
                [
                    "November 12, 2001",
                    "October 14, 2001",
                    "December 30, 2001",
                    "November 18, 2001",
                    "December 16, 2001",
                    "December 22, 2001",
                    "October 29, 2001",
                    "November 4, 2001",
                    "September 9, 2001"
                ]
            ],
            "y_data": [
                [
                    6532,
                    4798,
                    3798,
                    3421,
                    2804,
                    1934,
                    1763,
                    1232,
                    798
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the date and the corresponding sales of the journal which did not have any of the listed editors serving on the committee by a bar chart, show by the Sales in desc."
        ]
    },
    "2052@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Theme , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Theme ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Theme , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Theme ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Theme",
            "y_name": "Sales",
            "x_data": [
                [
                    "Baltimore Ravens",
                    "Cleveland Browns",
                    "Green Bay Packers",
                    "Jacksonville Jaguars",
                    "Miami Dolphins",
                    "Tampa Bay Buccaneers",
                    "at Cincinnati Bengals",
                    "at Oakland Raiders",
                    "at Pittsburgh Steelers"
                ]
            ],
            "y_data": [
                [
                    6532,
                    3798,
                    2804,
                    1232,
                    798,
                    4798,
                    3421,
                    1934,
                    1763
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a bar chart to show the theme and their sales of the journal which did not have any of the listed editors serving on the committee, and list x-axis from low to high order."
        ]
    },
    "2052@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Theme , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Theme DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Theme , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Theme DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Theme",
            "y_name": "Sales",
            "x_data": [
                [
                    "at Pittsburgh Steelers",
                    "at Oakland Raiders",
                    "at Cincinnati Bengals",
                    "Tampa Bay Buccaneers",
                    "Miami Dolphins",
                    "Jacksonville Jaguars",
                    "Green Bay Packers",
                    "Cleveland Browns",
                    "Baltimore Ravens"
                ]
            ],
            "y_data": [
                [
                    1763,
                    1934,
                    3421,
                    4798,
                    798,
                    1232,
                    2804,
                    3798,
                    6532
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a bar chart to show the theme and their sales of the journal which did not have any of the listed editors serving on the committee, rank in descending by the x axis."
        ]
    },
    "2052@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Theme , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Sales ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Theme , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Sales ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Theme",
            "y_name": "Sales",
            "x_data": [
                [
                    "Miami Dolphins",
                    "Jacksonville Jaguars",
                    "at Pittsburgh Steelers",
                    "at Oakland Raiders",
                    "Green Bay Packers",
                    "at Cincinnati Bengals",
                    "Cleveland Browns",
                    "Tampa Bay Buccaneers",
                    "Baltimore Ravens"
                ]
            ],
            "y_data": [
                [
                    798,
                    1232,
                    1763,
                    1934,
                    2804,
                    3421,
                    3798,
                    4798,
                    6532
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a bar chart to show the theme and their sales of the journal which did not have any of the listed editors serving on the committee, and I want to order by the total number in ascending."
        ]
    },
    "2052@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Theme , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Sales DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Theme , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Sales DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Theme",
            "y_name": "Sales",
            "x_data": [
                [
                    "Baltimore Ravens",
                    "Tampa Bay Buccaneers",
                    "Cleveland Browns",
                    "at Cincinnati Bengals",
                    "Green Bay Packers",
                    "at Oakland Raiders",
                    "at Pittsburgh Steelers",
                    "Jacksonville Jaguars",
                    "Miami Dolphins"
                ]
            ],
            "y_data": [
                [
                    6532,
                    4798,
                    3798,
                    3421,
                    2804,
                    1934,
                    1763,
                    1232,
                    798
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a bar chart to show the theme and their sales of the journal which did not have any of the listed editors serving on the committee, and sort in desc by the Y-axis."
        ]
    },
    "2053@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM editor ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM editor ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Anna Powierza",
                    "Grażyna Wolszczak",
                    "Kamila Porczyk",
                    "Marek Siudym",
                    "Maria Góralczyk",
                    "Mariusz Zalejski",
                    "Piotr Pręgowski",
                    "Szymon Wydra",
                    "Władysław Grzywna"
                ]
            ],
            "y_data": [
                [
                    35,
                    54,
                    34,
                    21,
                    38,
                    25,
                    43,
                    20,
                    24
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart to show editors' names and their ages, and I want to sort from low to high by the Name.",
            "Display a bar chart for the names and the ages of editors, list by the bar from low to high.",
            "Compare each editors' ages using a bar chart, sort by the x axis in ascending.",
            "Draw a bar chart of name versus age, and I want to rank by the x axis in asc.",
            "What are the names and ages of editors? Show me a bar chart, and I want to order by the x axis in ascending please."
        ]
    },
    "2053@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM editor ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM editor ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Władysław Grzywna",
                    "Szymon Wydra",
                    "Piotr Pręgowski",
                    "Mariusz Zalejski",
                    "Maria Góralczyk",
                    "Marek Siudym",
                    "Kamila Porczyk",
                    "Grażyna Wolszczak",
                    "Anna Powierza"
                ]
            ],
            "y_data": [
                [
                    24,
                    20,
                    43,
                    25,
                    38,
                    21,
                    34,
                    54,
                    35
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Compare each editors' ages using a bar chart, and could you list bars in descending order?",
            "Draw a bar chart of name versus age, and I want to list in desc by the x axis.",
            "What are the names and ages of editors? Show me a bar chart, I want to list in desc by the x axis.",
            "Visualize a bar chart to show editors' names and their ages, I want to rank bars from high to low order.",
            "Display a bar chart for the names and the ages of editors, and I want to rank bars from high to low order."
        ]
    },
    "2053@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM editor ORDER BY Age ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM editor ORDER BY Age ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Szymon Wydra",
                    "Marek Siudym",
                    "Władysław Grzywna",
                    "Mariusz Zalejski",
                    "Kamila Porczyk",
                    "Anna Powierza",
                    "Maria Góralczyk",
                    "Piotr Pręgowski",
                    "Grażyna Wolszczak"
                ]
            ],
            "y_data": [
                [
                    20,
                    21,
                    24,
                    25,
                    34,
                    35,
                    38,
                    43,
                    54
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart of name versus age, sort Y-axis in ascending order please.",
            "Compare each editors' ages using a bar chart, sort by the Y in asc.",
            "Visualize a bar chart to show editors' names and their ages, could you show total number from low to high order?",
            "What are the names and ages of editors? Show me a bar chart, and sort Y-axis in ascending order please.",
            "Display a bar chart for the names and the ages of editors, sort Y-axis in ascending order please."
        ]
    },
    "2053@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM editor ORDER BY Age DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM editor ORDER BY Age DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Grażyna Wolszczak",
                    "Piotr Pręgowski",
                    "Maria Góralczyk",
                    "Anna Powierza",
                    "Kamila Porczyk",
                    "Mariusz Zalejski",
                    "Władysław Grzywna",
                    "Marek Siudym",
                    "Szymon Wydra"
                ]
            ],
            "y_data": [
                [
                    54,
                    43,
                    38,
                    35,
                    34,
                    25,
                    24,
                    21,
                    20
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the names and ages of editors? Show me a bar chart, and sort in descending by the y-axis.",
            "Visualize a bar chart to show editors' names and their ages, and sort Y-axis in desc order.",
            "Compare each editors' ages using a bar chart, sort by the Y-axis in descending please.",
            "Display a bar chart for the names and the ages of editors, order by the total number in desc.",
            "Draw a bar chart of name versus age, and I want to rank by the y-axis in descending."
        ]
    },
    "2055@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Grażyna Wolszczak",
                    "Kamila Porczyk",
                    "Marek Siudym",
                    "Maria Góralczyk",
                    "Piotr Pręgowski",
                    "Władysław Grzywna"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Bar chart x axis name y axis how many name, could you rank in asc by the x axis?",
            "Group and count the name attribute for visualizing a bar chart, display in ascending by the Name."
        ]
    },
    "2055@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Władysław Grzywna",
                    "Piotr Pręgowski",
                    "Maria Góralczyk",
                    "Marek Siudym",
                    "Kamila Porczyk",
                    "Grażyna Wolszczak"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Group and count the name attribute for visualizing a bar chart, and display in descending by the names.",
            "Bar chart x axis name y axis how many name, sort by the X-axis in descending."
        ]
    },
    "2055@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY COUNT(Name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY COUNT(Name) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Kamila Porczyk",
                    "Marek Siudym",
                    "Maria Góralczyk",
                    "Piotr Pręgowski",
                    "Władysław Grzywna",
                    "Grażyna Wolszczak"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Bar chart x axis name y axis how many name, and could you sort in ascending by the Y?",
            "Group and count the name attribute for visualizing a bar chart, and display total number in asc order."
        ]
    },
    "2055@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY COUNT(Name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY COUNT(Name) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Grażyna Wolszczak",
                    "Władysław Grzywna",
                    "Piotr Pręgowski",
                    "Maria Góralczyk",
                    "Marek Siudym",
                    "Kamila Porczyk"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Group and count the name attribute for visualizing a bar chart, show y axis from high to low order please.",
            "Bar chart x axis name y axis how many name, could you sort Y in descending order please?"
        ]
    },
    "2060@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Grażyna Wolszczak",
                    "Kamila Porczyk",
                    "Maria Góralczyk",
                    "Władysław Grzywna"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "A bar chart for showing the number of the names of editors that are on the committee of journals with sales bigger than 3000, sort Name in asc order.",
            "Show the names of editors that are on the committee of journals with sales bigger than 3000, and count them by a bar chart, order Name from low to high order.",
            "Show the number of the names of editors that are on the committee of journals with sales bigger than 3000, list in asc by the x-axis please."
        ]
    },
    "2060@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Władysław Grzywna",
                    "Maria Góralczyk",
                    "Kamila Porczyk",
                    "Grażyna Wolszczak"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "A bar chart for showing the number of the names of editors that are on the committee of journals with sales bigger than 3000, and could you list from high to low by the Name?",
            "Show the names of editors that are on the committee of journals with sales bigger than 3000, and count them by a bar chart, sort Name from high to low order.",
            "Show the number of the names of editors that are on the committee of journals with sales bigger than 3000, sort Name from high to low order."
        ]
    },
    "2060@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name ORDER BY COUNT(Name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name ORDER BY COUNT(Name) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Kamila Porczyk",
                    "Maria Góralczyk",
                    "Władysław Grzywna",
                    "Grażyna Wolszczak"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Show the number of the names of editors that are on the committee of journals with sales bigger than 3000, display by the how many name in asc please.",
            "Show the names of editors that are on the committee of journals with sales bigger than 3000, and count them by a bar chart, could you sort by the Y from low to high?",
            "A bar chart for showing the number of the names of editors that are on the committee of journals with sales bigger than 3000, could you sort by the Y from low to high?"
        ]
    },
    "2060@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name ORDER BY COUNT(Name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name ORDER BY COUNT(Name) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Grażyna Wolszczak",
                    "Władysław Grzywna",
                    "Maria Góralczyk",
                    "Kamila Porczyk"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Show the number of the names of editors that are on the committee of journals with sales bigger than 3000, and display in descending by the total number.",
            "Show the names of editors that are on the committee of journals with sales bigger than 3000, and count them by a bar chart, and I want to list by the Y in desc.",
            "A bar chart for showing the number of the names of editors that are on the committee of journals with sales bigger than 3000, and could you rank by the y axis in descending?"
        ]
    },
    "2062@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID ORDER BY T1.Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID ORDER BY T1.Name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Editor_ID",
            "x_data": [
                [
                    "Grażyna Wolszczak",
                    "Kamila Porczyk",
                    "Marek Siudym",
                    "Maria Góralczyk",
                    "Piotr Pręgowski",
                    "Władysław Grzywna"
                ]
            ],
            "y_data": [
                [
                    8,
                    1,
                    3,
                    9,
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Just show the id and name of each editor using a bar chart, rank from low to high by the X-axis."
        ]
    },
    "2062@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID ORDER BY T1.Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID ORDER BY T1.Name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Editor_ID",
            "x_data": [
                [
                    "Władysław Grzywna",
                    "Piotr Pręgowski",
                    "Maria Góralczyk",
                    "Marek Siudym",
                    "Kamila Porczyk",
                    "Grażyna Wolszczak"
                ]
            ],
            "y_data": [
                [
                    6,
                    4,
                    9,
                    3,
                    1,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Just show the id and name of each editor using a bar chart, rank Name from high to low order."
        ]
    },
    "2062@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID ORDER BY T1.Editor_ID ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID ORDER BY T1.Editor_ID ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Editor_ID",
            "x_data": [
                [
                    "Kamila Porczyk",
                    "Marek Siudym",
                    "Piotr Pręgowski",
                    "Władysław Grzywna",
                    "Grażyna Wolszczak",
                    "Maria Góralczyk"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    4,
                    6,
                    8,
                    9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Just show the id and name of each editor using a bar chart, order by the y axis in ascending."
        ]
    },
    "2062@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID ORDER BY T1.Editor_ID DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID ORDER BY T1.Editor_ID DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Editor_ID",
            "x_data": [
                [
                    "Maria Góralczyk",
                    "Grażyna Wolszczak",
                    "Władysław Grzywna",
                    "Piotr Pręgowski",
                    "Marek Siudym",
                    "Kamila Porczyk"
                ]
            ],
            "y_data": [
                [
                    9,
                    8,
                    6,
                    4,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Just show the id and name of each editor using a bar chart, and could you show in desc by the Editor_ID?"
        ]
    },
    "2063@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Grażyna Wolszczak",
                    "Kamila Porczyk",
                    "Marek Siudym",
                    "Maria Góralczyk",
                    "Piotr Pręgowski",
                    "Władysław Grzywna"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Just compare the number of journal committees of each editor using a histogram, show bar in ascending order.",
            "Show the name of each editor and the number of journal committees they are on using a bar chart, list in asc by the x axis."
        ]
    },
    "2063@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Władysław Grzywna",
                    "Piotr Pręgowski",
                    "Maria Góralczyk",
                    "Marek Siudym",
                    "Kamila Porczyk",
                    "Grażyna Wolszczak"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the name of each editor and the number of journal committees they are on using a bar chart, and order by the X-axis in descending.",
            "Just compare the number of journal committees of each editor using a histogram, and list in desc by the bar."
        ]
    },
    "2063@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Kamila Porczyk",
                    "Marek Siudym",
                    "Maria Góralczyk",
                    "Piotr Pręgowski",
                    "Władysław Grzywna",
                    "Grażyna Wolszczak"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the name of each editor and the number of journal committees they are on using a bar chart, show by the total number in ascending please.",
            "Just compare the number of journal committees of each editor using a histogram, and show from low to high by the Y-axis."
        ]
    },
    "2063@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Grażyna Wolszczak",
                    "Władysław Grzywna",
                    "Piotr Pręgowski",
                    "Maria Góralczyk",
                    "Marek Siudym",
                    "Kamila Porczyk"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Just compare the number of journal committees of each editor using a histogram, display by the total number in descending please.",
            "Show the name of each editor and the number of journal committees they are on using a bar chart, and sort the total number in descending order please."
        ]
    },
    "3038@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Ananthapuri Express",
                    "Guruvayur Express",
                    "Island Express",
                    "Jayanthi Janatha Express",
                    "Madurai Fast Passenger",
                    "Parasuram Express",
                    "Quilon Fast Passenger"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Show the name of all trains, count the name and show them with a bar chart, could you rank in asc by the X please?",
            "Plot the number of name by grouped by name as a bar graph, and could you show Name in asc order?",
            "Visualize a bar chart, group by name and compute each group's total number, and display X-axis in ascending order."
        ]
    },
    "3038@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Quilon Fast Passenger",
                    "Parasuram Express",
                    "Madurai Fast Passenger",
                    "Jayanthi Janatha Express",
                    "Island Express",
                    "Guruvayur Express",
                    "Ananthapuri Express"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Plot the number of name by grouped by name as a bar graph, and order names from high to low order.",
            "Show the name of all trains, count the name and show them with a bar chart, and display by the bar from high to low.",
            "Visualize a bar chart, group by name and compute each group's total number, could you display Name in descending order please?"
        ]
    },
    "3038@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Madurai Fast Passenger",
                    "Parasuram Express",
                    "Quilon Fast Passenger",
                    "Ananthapuri Express",
                    "Guruvayur Express",
                    "Island Express",
                    "Jayanthi Janatha Express"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Show the name of all trains, count the name and show them with a bar chart, and could you list Y from low to high order?",
            "Plot the number of name by grouped by name as a bar graph, could you list Y in ascending order?",
            "Visualize a bar chart, group by name and compute each group's total number, could you show by the the number of name in ascending?"
        ]
    },
    "3038@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Jayanthi Janatha Express",
                    "Island Express",
                    "Guruvayur Express",
                    "Ananthapuri Express",
                    "Quilon Fast Passenger",
                    "Parasuram Express",
                    "Madurai Fast Passenger"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Visualize a bar chart, group by name and compute each group's total number, and I want to list the number of name from high to low order please.",
            "Show the name of all trains, count the name and show them with a bar chart, show by the Y-axis from high to low please.",
            "Plot the number of name by grouped by name as a bar graph, and I want to list the number of name in desc order please."
        ]
    },
    "3043@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    10
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "A bar chart shows how many locations, and order in ascending by the X-axis please.",
            "Bar graph to show how many location from different location, order in ascending by the X-axis please.",
            "How many locations? Draw a bar chart, and list by the X-axis in ascending."
        ]
    },
    "3043@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "London",
                    "Glasgow",
                    "Birmingham"
                ]
            ],
            "y_data": [
                [
                    10,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "How many locations? Draw a bar chart, could you sort X-axis in descending order?",
            "Bar graph to show how many location from different location, list X-axis in desc order.",
            "A bar chart shows how many locations, and sort from high to low by the X."
        ]
    },
    "3043@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    10
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "Bar graph to show how many location from different location, and list total number from low to high order.",
            "How many locations? Draw a bar chart, sort total number from low to high order.",
            "A bar chart shows how many locations, list Y-axis in asc order."
        ]
    },
    "3043@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "London",
                    "Glasgow",
                    "Birmingham"
                ]
            ],
            "y_data": [
                [
                    10,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "A bar chart shows how many locations, list by the the number of location from high to low.",
            "How many locations? Draw a bar chart, order by the Y from high to low.",
            "Bar graph to show how many location from different location, and sort Y from high to low order."
        ]
    },
    "3045@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "SUM(Number_of_Platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    13,
                    17,
                    140
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "What is the number of platforms for each location? Show the comparison with a bar chart, and show from low to high by the X.",
            "Give me a bar chart about the number of platforms in different locations, rank from low to high by the bars.",
            "Create a bar chart showing total number of number of platforms across location, rank from low to high by the X-axis."
        ]
    },
    "3045@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "SUM(Number_of_Platforms)",
            "x_data": [
                [
                    "London",
                    "Glasgow",
                    "Birmingham"
                ]
            ],
            "y_data": [
                [
                    140,
                    17,
                    13
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "Create a bar chart showing total number of number of platforms across location, sort by the x-axis in desc.",
            "What is the number of platforms for each location? Show the comparison with a bar chart, rank bars from high to low order.",
            "Give me a bar chart about the number of platforms in different locations, sort by the x-axis in desc."
        ]
    },
    "3045@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "SUM(Number_of_Platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    13,
                    17,
                    140
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "Give me a bar chart about the number of platforms in different locations, show total number in asc order.",
            "Create a bar chart showing total number of number of platforms across location, and show total number in asc order.",
            "What is the number of platforms for each location? Show the comparison with a bar chart, I want to order by the Y in asc."
        ]
    },
    "3045@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "SUM(Number_of_Platforms)",
            "x_data": [
                [
                    "London",
                    "Glasgow",
                    "Birmingham"
                ]
            ],
            "y_data": [
                [
                    140,
                    17,
                    13
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "Give me a bar chart about the number of platforms in different locations, and I want to list from high to low by the total number please.",
            "What is the number of platforms for each location? Show the comparison with a bar chart, and could you order by the total number in desc?",
            "Create a bar chart showing total number of number of platforms across location, show from high to low by the total number of number of platforms."
        ]
    },
    "3046@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "AVG(Number_of_Platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    13,
                    17,
                    14
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "What is the average of number_of_platforms for each location? Show the comparison with a bar chart, could you list x-axis in ascending order?",
            "Bar chart x axis location y axis the average of number of platforms, could you list x-axis in ascending order?",
            "Give me a bar chart about the average of number_of_platforms in different locations, and rank X from low to high order."
        ]
    },
    "3046@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "AVG(Number_of_Platforms)",
            "x_data": [
                [
                    "London",
                    "Glasgow",
                    "Birmingham"
                ]
            ],
            "y_data": [
                [
                    14,
                    17,
                    13
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "What is the average of number_of_platforms for each location? Show the comparison with a bar chart, I want to order X-axis from high to low order please.",
            "Bar chart x axis location y axis the average of number of platforms, and show x axis from high to low order.",
            "Give me a bar chart about the average of number_of_platforms in different locations, sort from high to low by the x axis."
        ]
    },
    "3046@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "AVG(Number_of_Platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "London",
                    "Glasgow"
                ]
            ],
            "y_data": [
                [
                    13,
                    14,
                    17
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "What is the average of number_of_platforms for each location? Show the comparison with a bar chart, and sort Y-axis in ascending order please.",
            "Give me a bar chart about the average of number_of_platforms in different locations, and list by the total number in ascending please.",
            "Bar chart x axis location y axis the average of number of platforms, and show in ascending by the y-axis."
        ]
    },
    "3046@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "AVG(Number_of_Platforms)",
            "x_data": [
                [
                    "Glasgow",
                    "London",
                    "Birmingham"
                ]
            ],
            "y_data": [
                [
                    17,
                    14,
                    13
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "Bar chart x axis location y axis the average of number of platforms, and rank total number in descending order.",
            "Give me a bar chart about the average of number_of_platforms in different locations, and rank total number in descending order.",
            "What is the average of number_of_platforms for each location? Show the comparison with a bar chart, and sort from high to low by the total number."
        ]
    },
    "3050@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Total_Passengers",
            "x_data": [
                [
                    "Birmingham New Street",
                    "Glasgow Central"
                ]
            ],
            "y_data": [
                [
                    36.330999999999996,
                    29.658
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the names and total passengers for all train stations not in London Visualize by bar chart, and I want to sort in ascending by the bars please.",
            "Show the names and total passengers for all train stations not in London with a bar chart, and could you display by the x axis from low to high please?"
        ]
    },
    "3050@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Total_Passengers",
            "x_data": [
                [
                    "Glasgow Central",
                    "Birmingham New Street"
                ]
            ],
            "y_data": [
                [
                    29.658,
                    36.330999999999996
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the names and total passengers for all train stations not in London Visualize by bar chart, and show by the X-axis from high to low.",
            "Show the names and total passengers for all train stations not in London with a bar chart, rank in descending by the Name please."
        ]
    },
    "3050@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Total_Passengers",
            "x_data": [
                [
                    "Glasgow Central",
                    "Birmingham New Street"
                ]
            ],
            "y_data": [
                [
                    29.658,
                    36.330999999999996
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the names and total passengers for all train stations not in London with a bar chart, rank by the total number in asc.",
            "Show the names and total passengers for all train stations not in London Visualize by bar chart, I want to list in asc by the y-axis please."
        ]
    },
    "3050@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Total_Passengers",
            "x_data": [
                [
                    "Birmingham New Street",
                    "Glasgow Central"
                ]
            ],
            "y_data": [
                [
                    36.330999999999996,
                    29.658
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the names and total passengers for all train stations not in London with a bar chart, show Total_Passengers in desc order please.",
            "Show the names and total passengers for all train stations not in London Visualize by bar chart, rank y axis in desc order."
        ]
    },
    "3052@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "sum(number_of_platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    13,
                    17,
                    140
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all locations and the total number of platforms for all train stations in each location in a bar chart, sort by the Location in ascending.",
            "Bar chart of total number of number of platforms from each location, and display by the X-axis in asc please.",
            "Show the total number of platforms of locations in each location in a bar chart, and list by the X from low to high."
        ]
    },
    "3052@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "sum(number_of_platforms)",
            "x_data": [
                [
                    "London",
                    "Glasgow",
                    "Birmingham"
                ]
            ],
            "y_data": [
                [
                    140,
                    17,
                    13
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the total number of platforms of locations in each location in a bar chart, could you order by the names from high to low?",
            "Bar chart of total number of number of platforms from each location, sort bars from high to low order.",
            "Show all locations and the total number of platforms for all train stations in each location in a bar chart, I want to order by the x axis in desc."
        ]
    },
    "3052@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "sum(number_of_platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    13,
                    17,
                    140
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the total number of platforms of locations in each location in a bar chart, I want to show y axis in asc order please.",
            "Bar chart of total number of number of platforms from each location, and I want to show y axis in asc order please.",
            "Show all locations and the total number of platforms for all train stations in each location in a bar chart, and rank by the Y-axis from low to high please."
        ]
    },
    "3052@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "sum(number_of_platforms)",
            "x_data": [
                [
                    "London",
                    "Glasgow",
                    "Birmingham"
                ]
            ],
            "y_data": [
                [
                    140,
                    17,
                    13
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all locations and the total number of platforms for all train stations in each location in a bar chart, and order by the y-axis in desc.",
            "Bar chart of total number of number of platforms from each location, could you show in descending by the y-axis please?",
            "Show the total number of platforms of locations in each location in a bar chart, and could you show in descending by the y-axis please?"
        ]
    },
    "3053@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "sum(total_passengers)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    36.330999999999996,
                    29.658,
                    498.50700000000006
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the total number of passengers of each location in a bar chart, and display in asc by the x-axis.",
            "Visualize a bar chart showing each location's total number of passengers, rank in ascending by the x-axis please.",
            "Bar chart x axis location y axis sum total passengers, show from low to high by the x axis."
        ]
    },
    "3053@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "sum(total_passengers)",
            "x_data": [
                [
                    "London",
                    "Glasgow",
                    "Birmingham"
                ]
            ],
            "y_data": [
                [
                    498.50700000000006,
                    29.658,
                    36.330999999999996
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart showing each location's total number of passengers, and I want to sort by the bars in desc please.",
            "Bar chart x axis location y axis sum total passengers, I want to sort in descending by the Location please.",
            "Show the total number of passengers of each location in a bar chart, I want to sort by the bars in desc please."
        ]
    },
    "3053@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "sum(total_passengers)",
            "x_data": [
                [
                    "Glasgow",
                    "Birmingham",
                    "London"
                ]
            ],
            "y_data": [
                [
                    29.658,
                    36.330999999999996,
                    498.50700000000006
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis location y axis sum total passengers, order from low to high by the y axis please.",
            "Visualize a bar chart showing each location's total number of passengers, and rank total number in asc order.",
            "Show the total number of passengers of each location in a bar chart, and sort Y-axis in asc order."
        ]
    },
    "3053@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "sum(total_passengers)",
            "x_data": [
                [
                    "London",
                    "Birmingham",
                    "Glasgow"
                ]
            ],
            "y_data": [
                [
                    498.50700000000006,
                    36.330999999999996,
                    29.658
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis location y axis sum total passengers, and sort by the total number in desc.",
            "Visualize a bar chart showing each location's total number of passengers, show by the y-axis from high to low.",
            "Show the total number of passengers of each location in a bar chart, and sort in desc by the total number of total passengers."
        ]
    },
    "1991@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) ASC",
                "binning": "BIN Date_Claim_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) ASC BIN Date_Claim_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "Mon",
                    "Sat",
                    "Sun",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Among all the claims, which claims have a claimed amount larger than the average? Please Bin date the claim was made into week day interval and count them to show a bar chart, and could you list in asc by the total number?",
            "For all the claims whose claimed amount is larger than the average, bin the claim date into day of week interval and count them for visualizing a bar chart, I want to list total number in asc order."
        ]
    },
    "1991@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) DESC",
                "binning": "BIN Date_Claim_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) DESC BIN Date_Claim_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "Fri",
                    "Thur",
                    "Wed",
                    "Tue",
                    "Sun",
                    "Sat",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY WEEKDAY"
        },
        "nl_queries": [
            "For all the claims whose claimed amount is larger than the average, bin the claim date into day of week interval and count them for visualizing a bar chart, order from high to low by the y axis.",
            "Among all the claims, which claims have a claimed amount larger than the average? Please Bin date the claim was made into week day interval and count them to show a bar chart, and could you show in desc by the y axis?"
        ]
    },
    "1992@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Settled) ASC",
                "binning": "BIN Date_Claim_Settled BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Settled) ASC BIN Date_Claim_Settled BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "Fri",
                    "Thur",
                    "Tue",
                    "Mon",
                    "Sat",
                    "Sun",
                    "Wed"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Settled BY WEEKDAY"
        },
        "nl_queries": [
            "For all the claims whose claimed amount is larger than the average, bin the settlement date into the day of week interval and count them for visualizing a bar chart, and order from low to high by the y axis please.",
            "Among all the claims, which claims have a claimed amount larger than the average? Please Bin the date it was settled into weekday interval and count them to show a bar chart, and show by the total number in ascending."
        ]
    },
    "1992@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Settled) DESC",
                "binning": "BIN Date_Claim_Settled BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Settled) DESC BIN Date_Claim_Settled BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "Wed",
                    "Sun",
                    "Sat",
                    "Mon",
                    "Tue",
                    "Thur",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Settled BY WEEKDAY"
        },
        "nl_queries": [
            "For all the claims whose claimed amount is larger than the average, bin the settlement date into the day of week interval and count them for visualizing a bar chart, display y-axis in descending order.",
            "Among all the claims, which claims have a claimed amount larger than the average? Please Bin the date it was settled into weekday interval and count them to show a bar chart, and display by the y axis from high to low."
        ]
    },
    "1994@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Customer_Details , T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id ORDER BY T1.Customer_Details ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Customer_Details , T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id ORDER BY T1.Customer_Details ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Customer_Details",
            "y_name": "Customer_ID",
            "x_data": [
                [
                    "Dr. Diana Rath",
                    "Ellsworth Paucek",
                    "Lauriane Ferry PhD",
                    "Mrs. Hanna Willms"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the the customer details and id for the customers who had more than one policy, could you order by the bar in ascending?"
        ]
    },
    "1994@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Customer_Details , T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id ORDER BY T1.Customer_Details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Customer_Details , T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id ORDER BY T1.Customer_Details DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Customer_Details",
            "y_name": "Customer_ID",
            "x_data": [
                [
                    "Mrs. Hanna Willms",
                    "Lauriane Ferry PhD",
                    "Ellsworth Paucek",
                    "Dr. Diana Rath"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the the customer details and id for the customers who had more than one policy, and order in descending by the X."
        ]
    },
    "1994@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Customer_Details , T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id ORDER BY T1.Customer_ID ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Customer_Details , T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id ORDER BY T1.Customer_ID ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Customer_Details",
            "y_name": "Customer_ID",
            "x_data": [
                [
                    "Ellsworth Paucek",
                    "Mrs. Hanna Willms",
                    "Dr. Diana Rath",
                    "Lauriane Ferry PhD"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the the customer details and id for the customers who had more than one policy, and rank by the Y in asc."
        ]
    },
    "1994@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Customer_Details , T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id ORDER BY T1.Customer_ID DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Customer_Details , T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id ORDER BY T1.Customer_ID DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Customer_Details",
            "y_name": "Customer_ID",
            "x_data": [
                [
                    "Lauriane Ferry PhD",
                    "Dr. Diana Rath",
                    "Mrs. Hanna Willms",
                    "Ellsworth Paucek"
                ]
            ],
            "y_data": [
                [
                    6,
                    4,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the the customer details and id for the customers who had more than one policy, list total number in desc order."
        ]
    },
    "2010@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "COUNT(Payment_Method_Code)",
            "x_data": [
                [
                    "American Express",
                    "Discover Card",
                    "MasterCard",
                    "Visa"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    7,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "Compare the frequency of each payment method code using a bar chart, I want to display by the x axis in asc.",
            "Plot the number of payment method code by grouped by payment method code as a bar graph, and show by the Payment_Method_Code from low to high."
        ]
    },
    "2010@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "COUNT(Payment_Method_Code)",
            "x_data": [
                [
                    "Visa",
                    "MasterCard",
                    "Discover Card",
                    "American Express"
                ]
            ],
            "y_data": [
                [
                    4,
                    7,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "Compare the frequency of each payment method code using a bar chart, and could you display x-axis in descending order please?",
            "Plot the number of payment method code by grouped by payment method code as a bar graph, order in descending by the Payment_Method_Code."
        ]
    },
    "2010@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY COUNT(Payment_Method_Code) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY COUNT(Payment_Method_Code) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "COUNT(Payment_Method_Code)",
            "x_data": [
                [
                    "American Express",
                    "Discover Card",
                    "Visa",
                    "MasterCard"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    4,
                    7
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "Compare the frequency of each payment method code using a bar chart, rank Y-axis in asc order.",
            "Plot the number of payment method code by grouped by payment method code as a bar graph, show by the y axis in asc."
        ]
    },
    "2010@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY COUNT(Payment_Method_Code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY COUNT(Payment_Method_Code) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "COUNT(Payment_Method_Code)",
            "x_data": [
                [
                    "MasterCard",
                    "Visa",
                    "Discover Card",
                    "American Express"
                ]
            ],
            "y_data": [
                [
                    7,
                    4,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "Compare the frequency of each payment method code using a bar chart, rank by the how many payment method code from high to low.",
            "Plot the number of payment method code by grouped by payment method code as a bar graph, and list by the total number from high to low."
        ]
    },
    "2011@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "American Express",
                    "Discover Card",
                    "MasterCard",
                    "Visa"
                ]
            ],
            "y_data": [
                [
                    177130,
                    232825,
                    2531865,
                    794713
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "How many total amounts of payments by each method code? You can give me a bar chart, and order x-axis in ascending order.",
            "Please use a bar chart to show the total amount of payment by each payment method code, and rank by the Payment_Method_Code in ascending.",
            "Bar chart of sum amount payment from each payment method code, rank by the Payment_Method_Code in ascending."
        ]
    },
    "2011@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "Visa",
                    "MasterCard",
                    "Discover Card",
                    "American Express"
                ]
            ],
            "y_data": [
                [
                    794713,
                    2531865,
                    232825,
                    177130
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "How many total amounts of payments by each method code? You can give me a bar chart, show in desc by the Payment_Method_Code.",
            "Please use a bar chart to show the total amount of payment by each payment method code, could you sort by the names from high to low?",
            "Bar chart of sum amount payment from each payment method code, and sort X in descending order."
        ]
    },
    "2011@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY SUM(Amount_Payment) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY SUM(Amount_Payment) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "American Express",
                    "Discover Card",
                    "Visa",
                    "MasterCard"
                ]
            ],
            "y_data": [
                [
                    177130,
                    232825,
                    794713,
                    2531865
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "Please use a bar chart to show the total amount of payment by each payment method code, rank total number in ascending order.",
            "How many total amounts of payments by each method code? You can give me a bar chart, and I want to sort total number in asc order.",
            "Bar chart of sum amount payment from each payment method code, and could you sort in asc by the Y?"
        ]
    },
    "2011@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY SUM(Amount_Payment) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY SUM(Amount_Payment) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "MasterCard",
                    "Visa",
                    "Discover Card",
                    "American Express"
                ]
            ],
            "y_data": [
                [
                    2531865,
                    794713,
                    232825,
                    177130
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "Please use a bar chart to show the total amount of payment by each payment method code, and I want to display by the Y-axis from high to low.",
            "How many total amounts of payments by each method code? You can give me a bar chart, list by the y axis in desc.",
            "Bar chart of sum amount payment from each payment method code, and show by the y axis from high to low."
        ]
    },
    "2012@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "American Express",
                    "Discover Card",
                    "MasterCard",
                    "Visa"
                ]
            ],
            "y_data": [
                [
                    177130,
                    77608.33333333333,
                    361695,
                    198678.25
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "Bar graph to show the average of amount payment from different payment method code, rank Payment_Method_Code in asc order.",
            "What about the average amounts of payments by each method code? You can give me a bar chart, could you list by the Payment_Method_Code from low to high?",
            "Please use a bar chart to show the average amount of payment by each payment method code, rank x-axis from low to high order."
        ]
    },
    "2012@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "Visa",
                    "MasterCard",
                    "Discover Card",
                    "American Express"
                ]
            ],
            "y_data": [
                [
                    198678.25,
                    361695,
                    77608.33333333333,
                    177130
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "What about the average amounts of payments by each method code? You can give me a bar chart, display from high to low by the X.",
            "Bar graph to show the average of amount payment from different payment method code, display from high to low by the X.",
            "Please use a bar chart to show the average amount of payment by each payment method code, and could you display by the bar in descending?"
        ]
    },
    "2012@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY AVG(Amount_Payment) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY AVG(Amount_Payment) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "Discover Card",
                    "American Express",
                    "Visa",
                    "MasterCard"
                ]
            ],
            "y_data": [
                [
                    77608.33333333333,
                    177130,
                    198678.25,
                    361695
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "Please use a bar chart to show the average amount of payment by each payment method code, sort by the the average of amount payment in ascending.",
            "What about the average amounts of payments by each method code? You can give me a bar chart, and could you rank in ascending by the the average of amount payment please?",
            "Bar graph to show the average of amount payment from different payment method code, and could you rank in ascending by the the average of amount payment please?"
        ]
    },
    "2012@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY AVG(Amount_Payment) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY AVG(Amount_Payment) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "MasterCard",
                    "Visa",
                    "American Express",
                    "Discover Card"
                ]
            ],
            "y_data": [
                [
                    361695,
                    198678.25,
                    177130,
                    77608.33333333333
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code"
        },
        "nl_queries": [
            "Bar graph to show the average of amount payment from different payment method code, could you list the average of amount payment from high to low order?",
            "What about the average amounts of payments by each method code? You can give me a bar chart, sort from high to low by the y-axis.",
            "Please use a bar chart to show the average amount of payment by each payment method code, and could you show total number in descending order?"
        ]
    },
    "2017@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements  ORDER BY COUNT(Date_Claim_Settled) ASC",
                "binning": "BIN Date_Claim_Settled BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements  ORDER BY COUNT(Date_Claim_Settled) ASC BIN Date_Claim_Settled BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    5,
                    10
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Settled BY YEAR"
        },
        "nl_queries": [
            "Bin the claim date into Year interval and count them for visualizing a bar chart, show Y-axis in asc order.",
            "Bar chart x axis date claim settled y axis the number of date claim settled, and sort y-axis in ascending order please."
        ]
    },
    "2017@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements  ORDER BY COUNT(Date_Claim_Settled) DESC",
                "binning": "BIN Date_Claim_Settled BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements  ORDER BY COUNT(Date_Claim_Settled) DESC BIN Date_Claim_Settled BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "2018",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    10,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Settled BY YEAR"
        },
        "nl_queries": [
            "Bin the claim date into Year interval and count them for visualizing a bar chart, and could you order by the the number of date claim settled from high to low?",
            "Bar chart x axis date claim settled y axis the number of date claim settled, rank from high to low by the Y-axis."
        ]
    },
    "2018@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements  ORDER BY COUNT(Date_Claim_Settled) ASC",
                "binning": "BIN Date_Claim_Settled BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements  ORDER BY COUNT(Date_Claim_Settled) ASC BIN Date_Claim_Settled BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "Mon",
                    "Fri",
                    "Sat",
                    "Thur",
                    "Wed",
                    "Sun",
                    "Tue"
                ]
            ],
            "y_data": [
                [
                    0,
                    2,
                    2,
                    2,
                    2,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Settled BY WEEKDAY"
        },
        "nl_queries": [
            "Bin the settlement date for each settlement case into the day of week interval and count them for visualizing a bar chart, and order Y-axis from low to high order.",
            "Bar chart x axis date claim settled y axis the number of date claim settled, order Y-axis from low to high order."
        ]
    },
    "2018@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements  ORDER BY COUNT(Date_Claim_Settled) DESC",
                "binning": "BIN Date_Claim_Settled BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements  ORDER BY COUNT(Date_Claim_Settled) DESC BIN Date_Claim_Settled BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "Tue",
                    "Sun",
                    "Wed",
                    "Thur",
                    "Sat",
                    "Fri",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2,
                    2,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Settled BY WEEKDAY"
        },
        "nl_queries": [
            "Bar chart x axis date claim settled y axis the number of date claim settled, and order the number of date claim settled in descending order.",
            "Bin the settlement date for each settlement case into the day of week interval and count them for visualizing a bar chart, show by the Y-axis in desc."
        ]
    },
    "2019@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements  ORDER BY COUNT(Date_Claim_Made) ASC",
                "binning": "BIN Date_Claim_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements  ORDER BY COUNT(Date_Claim_Made) ASC BIN Date_Claim_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "2018",
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    3,
                    4,
                    8
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY YEAR"
        },
        "nl_queries": [
            "Create a bar chart showing the number of date claim made across date claim made, and could you order in asc by the Y-axis?",
            "Bin the claim date into the Year interval and count them for visualizing a bar chart, could you list Y-axis in ascending order please?"
        ]
    },
    "2019@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements  ORDER BY COUNT(Date_Claim_Made) DESC",
                "binning": "BIN Date_Claim_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements  ORDER BY COUNT(Date_Claim_Made) DESC BIN Date_Claim_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "2017",
                    "2016",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    8,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY YEAR"
        },
        "nl_queries": [
            "Bin the claim date into the Year interval and count them for visualizing a bar chart, and show in desc by the y-axis.",
            "Create a bar chart showing the number of date claim made across date claim made, rank from high to low by the y-axis."
        ]
    },
    "2020@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements  ORDER BY COUNT(Date_Claim_Made) ASC",
                "binning": "BIN Date_Claim_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements  ORDER BY COUNT(Date_Claim_Made) ASC BIN Date_Claim_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "Thur",
                    "Sun",
                    "Wed",
                    "Fri",
                    "Mon",
                    "Sat",
                    "Tue"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    2,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Bin the claim date into the Day of Week interval and count them for visualizing a bar chart, display by the y axis in ascending.",
            "Create a bar chart showing the number of date claim made across date claim made, could you list y-axis from low to high order?"
        ]
    },
    "2020@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements  ORDER BY COUNT(Date_Claim_Made) DESC",
                "binning": "BIN Date_Claim_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements  ORDER BY COUNT(Date_Claim_Made) DESC BIN Date_Claim_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "Tue",
                    "Sat",
                    "Mon",
                    "Fri",
                    "Wed",
                    "Sun",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    3,
                    2,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Create a bar chart showing the number of date claim made across date claim made, I want to sort in descending by the how many date claim made please.",
            "Bin the claim date into the Day of Week interval and count them for visualizing a bar chart, and rank y axis in descending order."
        ]
    },
    "2021@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements GROUP BY Date_Claim_Settled ORDER BY Date_Claim_Settled ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements GROUP BY Date_Claim_Settled ORDER BY Date_Claim_Settled ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "2017-10-06",
                    "2017-11-04",
                    "2017-11-15",
                    "2017-11-30",
                    "2017-12-24",
                    "2018-01-16",
                    "2018-01-27",
                    "2018-02-04",
                    "2018-02-11",
                    "2018-02-14",
                    "2018-02-15",
                    "2018-02-20",
                    "2018-03-02"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_Claim_Settled"
        },
        "nl_queries": [
            "Plot date claim settled by the number of date claim settled as a line chart, and list by the X from low to high.",
            "Tell me the trend about the claim dates using a trend line, and could you show Date_Claim_Settled from low to high order please?",
            "Show the trend about the frequency of the claim dates, and list by the X from low to high."
        ]
    },
    "2021@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements GROUP BY Date_Claim_Settled ORDER BY Date_Claim_Settled DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements GROUP BY Date_Claim_Settled ORDER BY Date_Claim_Settled DESC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "2018-03-02",
                    "2018-02-20",
                    "2018-02-15",
                    "2018-02-14",
                    "2018-02-11",
                    "2018-02-04",
                    "2018-01-27",
                    "2018-01-16",
                    "2017-12-24",
                    "2017-11-30",
                    "2017-11-15",
                    "2017-11-04",
                    "2017-10-06"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_Claim_Settled"
        },
        "nl_queries": [
            "Tell me the trend about the claim dates using a trend line, and sort by the Date_Claim_Settled in desc.",
            "Show the trend about the frequency of the claim dates, and I want to order in desc by the X.",
            "Plot date claim settled by the number of date claim settled as a line chart, and I want to order in desc by the X."
        ]
    },
    "2022@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) ASC",
                "binning": "BIN Date_Claim_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) ASC BIN Date_Claim_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "2016",
                    "2018",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY YEAR"
        },
        "nl_queries": [
            "Return the number of the claim start date for the claims whose claimed amount is no more than the average, could you show by the Y-axis in ascending?",
            "A bar chart for returning the number of the claim start date for the claims whose claimed amount is no more than the average, and display the number of date claim made in ascending order please.",
            "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date, and count them by a bar chart, order by the Y-axis in asc.",
            "Return the claim start date for the claims whose claimed amount is no more than the averag, and count them by a bar chart, and order by the Y-axis in asc."
        ]
    },
    "2022@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) DESC",
                "binning": "BIN Date_Claim_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) DESC BIN Date_Claim_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "2017",
                    "2018",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY YEAR"
        },
        "nl_queries": [
            "A bar chart for returning the number of the claim start date for the claims whose claimed amount is no more than the average, and rank from high to low by the y axis.",
            "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date, and count them by a bar chart, and I want to order Y from high to low order.",
            "Return the number of the claim start date for the claims whose claimed amount is no more than the average, rank from high to low by the y axis.",
            "Return the claim start date for the claims whose claimed amount is no more than the averag, and count them by a bar chart, I want to list Y-axis from high to low order please."
        ]
    },
    "2023@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) ASC",
                "binning": "BIN Date_Claim_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) ASC BIN Date_Claim_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Sun",
                    "Thur",
                    "Wed",
                    "Fri",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Return the number of the claim start date for the claims whose claimed amount is no more than the average, and list by the y axis from low to high.",
            "Return the claim start date for the claims whose claimed amount is no more than the averag, and count them by a bar chart, and list by the y-axis in ascending.",
            "A bar chart for returning the number of the claim start date for the claims whose claimed amount is no more than the average, rank y axis from low to high order.",
            "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date, and count them by a bar chart, and rank y axis from low to high order."
        ]
    },
    "2023@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) DESC",
                "binning": "BIN Date_Claim_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) DESC BIN Date_Claim_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "Sat",
                    "Fri",
                    "Wed",
                    "Thur",
                    "Sun",
                    "Tue",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date, and count them by a bar chart, show in desc by the total number.",
            "Return the claim start date for the claims whose claimed amount is no more than the averag, and count them by a bar chart, and could you display y-axis in desc order please?",
            "Return the number of the claim start date for the claims whose claimed amount is no more than the average, show total number from high to low order.",
            "A bar chart for returning the number of the claim start date for the claims whose claimed amount is no more than the average, and sort Y in desc order."
        ]
    },
    "2024@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) ASC",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) ASC BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "COUNT(Date_Payment_Made)",
            "x_data": [
                [
                    "2018",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and count them for a bar chart, sort by the how many date payment made in asc.",
            "For those payments processed with Visa, show me the number of payments of each year using a bar chart, and sort y-axis in asc order."
        ]
    },
    "2024@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) DESC",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) DESC BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "COUNT(Date_Payment_Made)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and count them for a bar chart, order from high to low by the y axis.",
            "For those payments processed with Visa, show me the number of payments of each year using a bar chart, show in descending by the how many date payment made please."
        ]
    },
    "2027@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY SUM(Amount_Payment) ASC",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY SUM(Amount_Payment) ASC BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "2018",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    7343,
                    787370
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and compute the total amount payment as the Y-axis, could you rank by the Y in ascending please?",
            "Sum the amount for all the payments processed with Visa by each year using a bar chart, and rank by the y-axis in asc."
        ]
    },
    "2027@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY SUM(Amount_Payment) DESC",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY SUM(Amount_Payment) DESC BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    787370,
                    7343
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and compute the total amount payment as the Y-axis, and sort by the y axis in descending please.",
            "Sum the amount for all the payments processed with Visa by each year using a bar chart, and could you sort by the total number from high to low please?"
        ]
    },
    "2028@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY AVG(Amount_Payment) ASC",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY AVG(Amount_Payment) ASC BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "2018",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    7343,
                    262456.6666666667
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and compute the average amount payment as the Y-axis, sort by the y-axis from low to high.",
            "Calculate the average of amount for all the payments processed with Visa by each year using a bar chart, rank by the Y-axis in asc."
        ]
    },
    "2028@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY AVG(Amount_Payment) DESC",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY AVG(Amount_Payment) DESC BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    262456.6666666667,
                    7343
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR"
        },
        "nl_queries": [
            "Calculate the average of amount for all the payments processed with Visa by each year using a bar chart, and could you order y axis in desc order?",
            "For those payments processed with Visa, bin the payment day into Year interval and compute the average amount payment as the Y-axis, sort y axis from high to low order."
        ]
    },
    "2030@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa' ORDER BY Date_Payment_Made ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa' ORDER BY Date_Payment_Made ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "Amount_Payment",
            "x_data": [
                [
                    "2017-05-03",
                    "2017-05-28",
                    "2017-12-16",
                    "2018-02-24"
                ]
            ],
            "y_data": [
                [
                    172309,
                    155654,
                    459407,
                    7343
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a histogram to show the date and the amount for all the payments processed with Visa, and show Date_Payment_Made in ascending order please.",
            "Which Payments were processed with Visa? List the date and the amount using a bar chart, list by the x axis from low to high please.",
            "Show the amount for all the payments processed with Visa distributing the payment date with a bar chart, rank in asc by the x-axis."
        ]
    },
    "2030@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa' ORDER BY Date_Payment_Made DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa' ORDER BY Date_Payment_Made DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "Amount_Payment",
            "x_data": [
                [
                    "2018-02-24",
                    "2017-12-16",
                    "2017-05-28",
                    "2017-05-03"
                ]
            ],
            "y_data": [
                [
                    7343,
                    459407,
                    155654,
                    172309
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a histogram to show the date and the amount for all the payments processed with Visa, order in desc by the X please.",
            "Show the amount for all the payments processed with Visa distributing the payment date with a bar chart, display in descending by the Date_Payment_Made please.",
            "Which Payments were processed with Visa? List the date and the amount using a bar chart, and could you show in desc by the bar please?"
        ]
    },
    "2030@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa' ORDER BY Amount_Payment ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa' ORDER BY Amount_Payment ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "Amount_Payment",
            "x_data": [
                [
                    "2018-02-24",
                    "2017-05-28",
                    "2017-05-03",
                    "2017-12-16"
                ]
            ],
            "y_data": [
                [
                    7343,
                    155654,
                    172309,
                    459407
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the amount for all the payments processed with Visa distributing the payment date with a bar chart, I want to order in ascending by the Amount_Payment please.",
            "Give me a histogram to show the date and the amount for all the payments processed with Visa, and show in asc by the Y-axis please.",
            "Which Payments were processed with Visa? List the date and the amount using a bar chart, and rank by the Y from low to high please."
        ]
    },
    "2030@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa' ORDER BY Amount_Payment DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa' ORDER BY Amount_Payment DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "Amount_Payment",
            "x_data": [
                [
                    "2017-12-16",
                    "2017-05-03",
                    "2017-05-28",
                    "2018-02-24"
                ]
            ],
            "y_data": [
                [
                    459407,
                    172309,
                    155654,
                    7343
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the amount for all the payments processed with Visa distributing the payment date with a bar chart, show Amount_Payment from high to low order.",
            "Give me a histogram to show the date and the amount for all the payments processed with Visa, order y axis in descending order.",
            "Which Payments were processed with Visa? List the date and the amount using a bar chart, order by the y axis in desc."
        ]
    },
    "2031@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) ASC",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) ASC BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "COUNT(Date_Payment_Made)",
            "x_data": [
                [
                    "Fri",
                    "Mon",
                    "Thur",
                    "Tue",
                    "Sun",
                    "Wed",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "For those payments processed with Visa, show me the number of payments of each day of the week using a bar chart, and sort total number in ascending order.",
            "For those payments processed with Visa, bin the payment day into the Day of week interval and count them for a bar chart, and sort total number in ascending order."
        ]
    },
    "2031@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) DESC",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) DESC BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "COUNT(Date_Payment_Made)",
            "x_data": [
                [
                    "Sat",
                    "Wed",
                    "Sun",
                    "Tue",
                    "Thur",
                    "Mon",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into the Day of week interval and count them for a bar chart, and list total number in descending order.",
            "For those payments processed with Visa, show me the number of payments of each day of the week using a bar chart, show from high to low by the Y."
        ]
    },
    "2035@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY SUM(Amount_Payment) ASC",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY SUM(Amount_Payment) ASC BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "Fri",
                    "Mon",
                    "Thur",
                    "Tue",
                    "Sun",
                    "Wed",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    155654,
                    172309,
                    466750
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into the Day of Week interval and compute the total amount payment as the Y-axis, and rank Y-axis in ascending order.",
            "Sum the amount for all the payments processed with Visa of each day of week using a bar chart, show Y from low to high order please."
        ]
    },
    "2035@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY SUM(Amount_Payment) DESC",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY SUM(Amount_Payment) DESC BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "Sat",
                    "Wed",
                    "Sun",
                    "Tue",
                    "Thur",
                    "Mon",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    466750,
                    172309,
                    155654,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Sum the amount for all the payments processed with Visa of each day of week using a bar chart, and I want to sort by the y axis in descending.",
            "For those payments processed with Visa, bin the payment day into the Day of Week interval and compute the total amount payment as the Y-axis, I want to sort by the y axis in descending."
        ]
    },
    "2036@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY AVG(Amount_Payment) ASC",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY AVG(Amount_Payment) ASC BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "Fri",
                    "Mon",
                    "Thur",
                    "Tue",
                    "Sun",
                    "Wed",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    155654,
                    172309,
                    233375
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Calculate the average amount for all the payments processed with Visa of each day of week using a bar chart, and display y-axis in asc order.",
            "For those payments processed with Visa, bin the payment day into the Day of Week interval and compute the average amount payment as the Y-axis, and list in asc by the total number."
        ]
    },
    "2036@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY AVG(Amount_Payment) DESC",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY AVG(Amount_Payment) DESC BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "Sat",
                    "Wed",
                    "Sun",
                    "Tue",
                    "Thur",
                    "Mon",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    233375,
                    172309,
                    155654,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY WEEKDAY"
        },
        "nl_queries": [
            "Calculate the average amount for all the payments processed with Visa of each day of week using a bar chart, rank y-axis in descending order.",
            "For those payments processed with Visa, bin the payment day into the Day of Week interval and compute the average amount payment as the Y-axis, rank y-axis in descending order."
        ]
    },
    "3260@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Venue",
            "y_name": "COUNT(Venue)",
            "x_data": [
                [
                    "Istanbul Turkey",
                    "London UK",
                    "New Jersey USA",
                    "New York USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Venue"
        },
        "nl_queries": [
            "Show the number of venue from each venue, rank by the X in asc.",
            "Return the number of venues of each workshop in a bar chart, and rank X-axis in ascending order.",
            "A bar chart shows the venue for each workshop, could you sort from low to high by the names?",
            "Draw a bar chart that counts the number of venues of each workshop, and I want to order in ascending by the X."
        ]
    },
    "3260@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Venue",
            "y_name": "COUNT(Venue)",
            "x_data": [
                [
                    "New York USA",
                    "New Jersey USA",
                    "London UK",
                    "Istanbul Turkey"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Venue"
        },
        "nl_queries": [
            "Return the number of venues of each workshop in a bar chart, display by the X in desc please.",
            "Draw a bar chart that counts the number of venues of each workshop, order from high to low by the x-axis please.",
            "Show the number of venue from each venue, display by the X in desc please.",
            "A bar chart shows the venue for each workshop, and show by the x-axis from high to low."
        ]
    },
    "3260@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Venue",
            "y_name": "COUNT(Venue)",
            "x_data": [
                [
                    "Istanbul Turkey",
                    "New Jersey USA",
                    "London UK",
                    "New York USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Venue"
        },
        "nl_queries": [
            "Return the number of venues of each workshop in a bar chart, could you rank by the total number in asc?",
            "Draw a bar chart that counts the number of venues of each workshop, could you rank by the total number in asc?",
            "A bar chart shows the venue for each workshop, and could you display Y from low to high order please?",
            "Show the number of venue from each venue, could you list by the Y-axis in asc please?"
        ]
    },
    "3260@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Venue",
            "y_name": "COUNT(Venue)",
            "x_data": [
                [
                    "New York USA",
                    "London UK",
                    "New Jersey USA",
                    "Istanbul Turkey"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Venue"
        },
        "nl_queries": [
            "Draw a bar chart that counts the number of venues of each workshop, and rank by the Y-axis in descending.",
            "A bar chart shows the venue for each workshop, sort how many venue in desc order.",
            "Show the number of venue from each venue, sort how many venue in desc order.",
            "Return the number of venues of each workshop in a bar chart, and could you rank y-axis in desc order?"
        ]
    },
    "3261@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Result",
            "y_name": "COUNT(Result)",
            "x_data": [
                [
                    "Accepted",
                    "Rejected"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Result"
        },
        "nl_queries": [
            "Bar graph to show how many result from different result, sort in asc by the X.",
            "Group by the result and count them by a bar chart, and list by the x-axis from low to high.",
            "For each submission, group its acceptance result and count them Visualize them in a bar chart, and show in ascending by the X please."
        ]
    },
    "3261@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Result",
            "y_name": "COUNT(Result)",
            "x_data": [
                [
                    "Rejected",
                    "Accepted"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Result"
        },
        "nl_queries": [
            "For each submission, group its acceptance result and count them Visualize them in a bar chart, rank from high to low by the x axis.",
            "Group by the result and count them by a bar chart, could you list by the x-axis in descending?",
            "Bar graph to show how many result from different result, could you rank by the names from high to low?"
        ]
    },
    "3261@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Result",
            "y_name": "COUNT(Result)",
            "x_data": [
                [
                    "Accepted",
                    "Rejected"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Result"
        },
        "nl_queries": [
            "Group by the result and count them by a bar chart, rank from low to high by the Y.",
            "For each submission, group its acceptance result and count them Visualize them in a bar chart, and I want to sort in ascending by the y axis.",
            "Bar graph to show how many result from different result, and rank in ascending by the Y-axis."
        ]
    },
    "3261@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Result",
            "y_name": "COUNT(Result)",
            "x_data": [
                [
                    "Rejected",
                    "Accepted"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Result"
        },
        "nl_queries": [
            "For each submission, group its acceptance result and count them Visualize them in a bar chart, and could you order by the Y in desc?",
            "Bar graph to show how many result from different result, show by the y axis in descending.",
            "Group by the result and count them by a bar chart, show from high to low by the y axis."
        ]
    },
    "3263@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Author",
            "y_name": "COUNT(Author)",
            "x_data": [
                [
                    "Jeff Lloyd",
                    "Sammy Green",
                    "Sherman Smith",
                    "Steve Niehaus",
                    "Steve Raible"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Author"
        },
        "nl_queries": [
            "Show the authors of their total submissions with a bar chart, and display by the x axis in asc.",
            "Create a bar chart showing the number of author across author, could you list in asc by the Author?",
            "Visualize a bar chart for how many authors submit to the workshop, and list bars in asc order."
        ]
    },
    "3263@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Author",
            "y_name": "COUNT(Author)",
            "x_data": [
                [
                    "Steve Raible",
                    "Steve Niehaus",
                    "Sherman Smith",
                    "Sammy Green",
                    "Jeff Lloyd"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Author"
        },
        "nl_queries": [
            "Create a bar chart showing the number of author across author, and show from high to low by the x axis.",
            "Visualize a bar chart for how many authors submit to the workshop, sort Author in descending order please.",
            "Show the authors of their total submissions with a bar chart, and display x axis from high to low order."
        ]
    },
    "3263@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Author",
            "y_name": "COUNT(Author)",
            "x_data": [
                [
                    "Jeff Lloyd",
                    "Sherman Smith",
                    "Steve Niehaus",
                    "Steve Raible",
                    "Sammy Green"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Author"
        },
        "nl_queries": [
            "Show the authors of their total submissions with a bar chart, display from low to high by the y-axis.",
            "Create a bar chart showing the number of author across author, and order total number from low to high order.",
            "Visualize a bar chart for how many authors submit to the workshop, order total number from low to high order."
        ]
    },
    "3263@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Author",
            "y_name": "COUNT(Author)",
            "x_data": [
                [
                    "Sammy Green",
                    "Steve Raible",
                    "Steve Niehaus",
                    "Sherman Smith",
                    "Jeff Lloyd"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Author"
        },
        "nl_queries": [
            "Create a bar chart showing the number of author across author, and order y-axis from high to low order.",
            "Show the authors of their total submissions with a bar chart, and order from high to low by the how many author please.",
            "Visualize a bar chart for how many authors submit to the workshop, and rank in desc by the Y-axis."
        ]
    },
    "3266@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Author",
            "y_name": "COUNT(DISTINCT T1.workshop_id)",
            "x_data": [
                [
                    "Jeff Lloyd",
                    "Sammy Green",
                    "Sherman Smith",
                    "Steve Niehaus",
                    "Steve Raible"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show each author and the number of workshops they submitted to Show bar chart, and show by the bar in asc.",
            "How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart, and could you display by the X in asc?",
            "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops, display names from low to high order.",
            "Show each author and the number of workshops they submitted to with a bar chart, and display by the x-axis from low to high.",
            "Give me a histogram for how many workshops did each author submit to? Return the author name and the number of workshops, display by the x-axis from low to high.",
            "How many workshops did each author submit to? Return the author name and the number of workshops Plot them as bar chart, and list X-axis in asc order."
        ]
    },
    "3266@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Author",
            "y_name": "COUNT(DISTINCT T1.workshop_id)",
            "x_data": [
                [
                    "Steve Raible",
                    "Steve Niehaus",
                    "Sherman Smith",
                    "Sammy Green",
                    "Jeff Lloyd"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show each author and the number of workshops they submitted to Show bar chart, and I want to order x-axis in descending order.",
            "How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart, could you order names in desc order?",
            "How many workshops did each author submit to? Return the author name and the number of workshops Plot them as bar chart, and display bar in desc order.",
            "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops, and could you order names in desc order?",
            "Give me a histogram for how many workshops did each author submit to? Return the author name and the number of workshops, and could you rank by the X-axis in desc?",
            "Show each author and the number of workshops they submitted to with a bar chart, and could you rank by the X-axis in desc?"
        ]
    },
    "3266@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Author",
            "y_name": "COUNT(DISTINCT T1.workshop_id)",
            "x_data": [
                [
                    "Jeff Lloyd",
                    "Sherman Smith",
                    "Steve Niehaus",
                    "Steve Raible",
                    "Sammy Green"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show each author and the number of workshops they submitted to with a bar chart, and display in asc by the Y-axis please.",
            "How many workshops did each author submit to? Return the author name and the number of workshops Plot them as bar chart, and I want to show by the y axis from low to high.",
            "How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart, rank Y-axis from low to high order.",
            "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops, sort workshop_id) in ascending order.",
            "Show each author and the number of workshops they submitted to Show bar chart, show in asc by the total number.",
            "Give me a histogram for how many workshops did each author submit to? Return the author name and the number of workshops, and show total number in asc order."
        ]
    },
    "3266@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Author",
            "y_name": "COUNT(DISTINCT T1.workshop_id)",
            "x_data": [
                [
                    "Sammy Green",
                    "Steve Raible",
                    "Steve Niehaus",
                    "Sherman Smith",
                    "Jeff Lloyd"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show each author and the number of workshops they submitted to with a bar chart, could you order workshop_id) in desc order?",
            "Show each author and the number of workshops they submitted to Show bar chart, show by the Y-axis in desc.",
            "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops, and could you sort Y from high to low order?",
            "How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart, and order from high to low by the Y-axis.",
            "Give me a histogram for how many workshops did each author submit to? Return the author name and the number of workshops, order in descending by the y axis.",
            "How many workshops did each author submit to? Return the author name and the number of workshops Plot them as bar chart, display in descending by the Y."
        ]
    }
}