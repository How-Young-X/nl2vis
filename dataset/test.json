{
    "351": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Height , Weight FROM people",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Height , Weight FROM people"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "body_builder",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Height",
            "y_name": "Weight",
            "x_data": [
                [
                    215,
                    205,
                    196,
                    195,
                    192,
                    182
                ]
            ],
            "y_data": [
                [
                    102,
                    92,
                    89,
                    100,
                    90,
                    80
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the height and weight of people in descending order of height in a scatter chart",
            "List the height and weight of people in descending order of height. Show scatter chart.",
            "Plot a scatter chart, height by weight."
        ]
    },
    "352": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Body_Builder_ID , People_ID FROM body_builder",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "body_builder",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Body_Builder_ID",
            "y_name": "People_ID",
            "x_data": [
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    5,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the relationship between  Body_Builder_ID and  People_ID ?",
            "Visualize the relationship between  Body_Builder_ID and  People_ID .",
            "A scatter chart shows the correlation between  Body_Builder_ID and  People_ID .",
            "Show me about the correlation between  Body_Builder_ID and  People_ID  in a scatter chart.",
            "Visualize a scatter chart about the correlation between  Body_Builder_ID and  People_ID .",
            "Plot a scatter chart, body builder id by people_id."
        ]
    },
    "353": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Clean_Jerk , Total FROM body_builder",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "body_builder",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Clean_Jerk",
            "y_name": "Total",
            "x_data": [
                [
                    175,
                    177.5,
                    175,
                    175,
                    162.5
                ]
            ],
            "y_data": [
                [
                    317.5,
                    315,
                    315,
                    312.5,
                    292.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me about the correlation between  Clean_Jerk and  Total  in a scatter chart.",
            "Visualize a scatter chart about the correlation between  Clean_Jerk and  Total .",
            "What is the relationship between  Clean_Jerk and  Total ?",
            "Return a scatter chart about the correlation between  Clean_Jerk and  Total .",
            "A scatter chart shows the correlation between  Clean_Jerk and  Total .",
            "Plot a scatter chart, clean jerk by total."
        ]
    },
    "354": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Snatch , Total FROM body_builder",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Snatch , Total FROM body_builder"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "body_builder",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Snatch",
            "y_name": "Total",
            "x_data": [
                [
                    142.5,
                    137.5,
                    140,
                    137.5,
                    130
                ]
            ],
            "y_data": [
                [
                    317.5,
                    315,
                    315,
                    312.5,
                    292.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a scatter chart about the correlation between  Snatch and  Total .",
            "Return a scatter chart about the correlation between  Snatch and  Total .",
            "A scatter chart shows the correlation between  Snatch and  Total .",
            "Show me about the correlation between  Snatch and  Total  in a scatter chart.",
            "What is the relationship between  Snatch and  Total ?",
            "Scatter plot to show snatch on x axis and total on y axis."
        ]
    },
    "355": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Body_Builder_ID , Snatch FROM body_builder",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "body_builder",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Body_Builder_ID",
            "y_name": "Snatch",
            "x_data": [
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ]
            ],
            "y_data": [
                [
                    142.5,
                    137.5,
                    140,
                    137.5,
                    130
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the relationship between  Body_Builder_ID and  Snatch ?",
            "Draw a scatter chart about the correlation between  Body_Builder_ID and  Snatch .",
            "Visualize the relationship between  Body_Builder_ID and  Snatch .",
            "Show me about the correlation between  Body_Builder_ID and  Snatch  in a scatter chart.",
            "Return a scatter chart about the correlation between  Body_Builder_ID and  Snatch .",
            "Scatter plot to show body builder id on x axis and snatch on y axis."
        ]
    },
    "356": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Snatch , Clean_Jerk FROM body_builder",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "body_builder",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Snatch",
            "y_name": "Clean_Jerk",
            "x_data": [
                [
                    142.5,
                    137.5,
                    140,
                    137.5,
                    130
                ]
            ],
            "y_data": [
                [
                    175,
                    177.5,
                    175,
                    175,
                    162.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a scatter chart about the correlation between  Snatch and  Clean_Jerk .",
            "What is the relationship between  Snatch and  Clean_Jerk ?",
            "Visualize the relationship between  Snatch and  Clean_Jerk .",
            "Return a scatter chart about the correlation between  Snatch and  Clean_Jerk .",
            "Show me about the correlation between  Snatch and  Clean_Jerk  in a scatter chart.",
            "Scatter plot to show snatch on x axis and clean_jerk on y axis."
        ]
    },
    "357": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT People_ID , Snatch FROM body_builder",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT People_ID , Snatch FROM body_builder"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "body_builder",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "People_ID",
            "y_name": "Snatch",
            "x_data": [
                [
                    1,
                    2,
                    3,
                    5,
                    6
                ]
            ],
            "y_data": [
                [
                    142.5,
                    137.5,
                    140,
                    137.5,
                    130
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a scatter chart about the correlation between  People_ID and  Snatch .",
            "Visualize the relationship between  People_ID and  Snatch .",
            "Return a scatter chart about the correlation between  People_ID and  Snatch .",
            "A scatter chart shows the correlation between  People_ID and  Snatch .",
            "Show me about the correlation between  People_ID and  Snatch  in a scatter chart.",
            "Plot a scatter chart, people id by snatch."
        ]
    },
    "358": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Body_Builder_ID , Total FROM body_builder",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "body_builder",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Body_Builder_ID",
            "y_name": "Total",
            "x_data": [
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ]
            ],
            "y_data": [
                [
                    317.5,
                    315,
                    315,
                    312.5,
                    292.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "A scatter chart shows the correlation between  Body_Builder_ID and  Total .",
            "Draw a scatter chart about the correlation between  Body_Builder_ID and  Total .",
            "What is the relationship between  Body_Builder_ID and  Total ?",
            "Return a scatter chart about the correlation between  Body_Builder_ID and  Total .",
            "Show me about the correlation between  Body_Builder_ID and  Total  in a scatter chart.",
            "Show me a scatter plot of body builder id and total for ."
        ]
    },
    "359": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT People_ID , Total FROM body_builder",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT People_ID , Total FROM body_builder"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "body_builder",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "People_ID",
            "y_name": "Total",
            "x_data": [
                [
                    1,
                    2,
                    3,
                    5,
                    6
                ]
            ],
            "y_data": [
                [
                    317.5,
                    315,
                    315,
                    312.5,
                    292.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a scatter chart about the correlation between  People_ID and  Total .",
            "What is the relationship between  People_ID and  Total ?",
            "Return a scatter chart about the correlation between  People_ID and  Total .",
            "Show me about the correlation between  People_ID and  Total  in a scatter chart.",
            "A scatter chart shows the correlation between  People_ID and  Total .",
            "Show me a scatter plot of people id and total for ."
        ]
    },
    "360": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Body_Builder_ID , Clean_Jerk FROM body_builder",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "body_builder",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Body_Builder_ID",
            "y_name": "Clean_Jerk",
            "x_data": [
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ]
            ],
            "y_data": [
                [
                    175,
                    177.5,
                    175,
                    175,
                    162.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the relationship between  Body_Builder_ID and  Clean_Jerk ?",
            "A scatter chart shows the correlation between  Body_Builder_ID and  Clean_Jerk .",
            "Show me about the correlation between  Body_Builder_ID and  Clean_Jerk  in a scatter chart.",
            "Visualize a scatter chart about the correlation between  Body_Builder_ID and  Clean_Jerk .",
            "Return a scatter chart about the correlation between  Body_Builder_ID and  Clean_Jerk .",
            "Plot a scatter chart, body builder id by clean_jerk."
        ]
    },
    "361": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT People_ID , Clean_Jerk FROM body_builder",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "body_builder",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "People_ID",
            "y_name": "Clean_Jerk",
            "x_data": [
                [
                    1,
                    2,
                    3,
                    5,
                    6
                ]
            ],
            "y_data": [
                [
                    175,
                    177.5,
                    175,
                    175,
                    162.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize the relationship between  People_ID and  Clean_Jerk .",
            "Visualize a scatter chart about the correlation between  People_ID and  Clean_Jerk .",
            "Return a scatter chart about the correlation between  People_ID and  Clean_Jerk .",
            "What is the relationship between  People_ID and  Clean_Jerk ?",
            "A scatter chart shows the correlation between  People_ID and  Clean_Jerk .",
            "Show me a scatter plot of people id and clean_jerk for ."
        ]
    },
    "362": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Snatch , Clean_Jerk FROM body_builder",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "body_builder",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Snatch",
            "y_name": "Clean_Jerk",
            "x_data": [
                [
                    130,
                    137.5,
                    137.5,
                    140,
                    142.5
                ]
            ],
            "y_data": [
                [
                    162.5,
                    177.5,
                    175,
                    175,
                    175
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the snatch score and clean jerk score of body builders in ascending order of snatch score in a scatter chart",
            "List the snatch score and clean jerk score of body builders in ascending order of snatch score. Plot them as scatter chart.",
            "Scatter plot to show snatch on x axis and clean_jerk on y axis."
        ]
    },
    "590": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester ,  year ORDER BY T1.title",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester ,  year ORDER BY T1.title"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2003-01-01",
                    "2004-01-01",
                    "2005-01-01",
                    "2006-01-01",
                    "2007-01-01",
                    "2008-01-01",
                    "2009-01-01"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    1,
                    0,
                    1,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [
                "Fall",
                "Spring"
            ],
            "describe": "GROUP BY semester, GROUP BY year"
        },
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each year with a group line chart grouping by semester.",
            "How many courses are in the Psychology department in each year? Show a group line chart grouping by semester."
        ]
    },
    "591": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester ORDER BY T1.title",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester ORDER BY T1.title BIN year BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    3,
                    2,
                    2,
                    2,
                    1
                ],
                [
                    4,
                    2,
                    4,
                    4,
                    4,
                    4,
                    2
                ]
            ],
            "classify": [
                "Fall",
                "Spring"
            ],
            "describe": "GROUP BY semester, BIN year BY YEAR"
        },
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each year with a group line chart grouping by semester.",
            "How many courses are in the Psychology department in each year? Show a group line chart grouping by semester."
        ]
    },
    "593": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT semester , COUNT(semester) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester ORDER BY T1.title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT semester , COUNT(semester) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester ORDER BY T1.title"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "semester",
            "y_name": "COUNT(semester)",
            "x_data": [
                [
                    "Fall",
                    "Spring"
                ]
            ],
            "y_data": [
                [
                    3,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY semester"
        },
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each semester with a bar chart.",
            "How many courses are in the Psychology department for each semester? Return a bar chart."
        ]
    },
    "609": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Chandler",
                    "Fairchild",
                    "Lambea",
                    "Lamberton",
                    "Main",
                    "Nassa",
                    "Saucon",
                    "Stabler",
                    "Taylor",
                    "Whitman"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each building with a bar chart.",
            "How many courses are in the Psychology department in each building? Draw a bar chart."
        ]
    },
    "610": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT semester , COUNT(semester) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT semester , COUNT(semester) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "pie",
            "x_name": "semester",
            "y_name": "COUNT(semester)",
            "x_data": [
                [
                    "Fall",
                    "Spring"
                ]
            ],
            "y_data": [
                [
                    3,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY semester"
        },
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each semester with a pie chart.",
            "How many courses are in the Psychology department for each semester? Return a pie chart."
        ]
    },
    "611": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY year",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY year"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2003-01-01",
                    "2004-01-01",
                    "2005-01-01",
                    "2006-01-01",
                    "2007-01-01",
                    "2008-01-01",
                    "2009-01-01"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each year with a line chart.",
            "How many courses are in the Psychology department for each year? Return a line chart."
        ]
    },
    "612": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology'",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each year with a line chart.",
            "How many courses are in the Psychology department for each year? Return a line chart."
        ]
    },
    "613": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , COUNT(dept_name) FROM instructor GROUP BY dept_name ORDER BY salary",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , COUNT(dept_name) FROM instructor GROUP BY dept_name ORDER BY salary"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "COUNT(dept_name)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "Languages",
                    "Marketing",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    5,
                    2,
                    2,
                    4,
                    4,
                    4,
                    1,
                    1,
                    3,
                    4,
                    2,
                    2,
                    3,
                    2,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "Return a bar chart about the distribution of  dept_name and the amount of dept_name , and group by attribute dept_name.",
            "Draw a bar chart about the distribution of  dept_name and the amount of dept_name , and group by attribute dept_name.",
            "Find  dept_name and the amount of dept_name , and group by attribute dept_name, and visualize them by a bar chart.",
            "Show me about the distribution of  dept_name and the amount of dept_name , and group by attribute dept_name in a bar chart.",
            "A bar chart shows the distribution of  dept_name and the amount of dept_name , and group by attribute dept_name."
        ]
    },
    "616": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , SUM(salary) FROM instructor GROUP BY dept_name ORDER BY salary",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , SUM(salary) FROM instructor GROUP BY dept_name ORDER BY salary"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "SUM(salary)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "Languages",
                    "Marketing",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    194865,
                    79070,
                    385488,
                    122574,
                    196266,
                    385383,
                    296649,
                    288354,
                    105311,
                    99382,
                    172264,
                    336388,
                    159625,
                    229152,
                    300158,
                    122285,
                    406770
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "Draw a bar chart about the distribution of  dept_name and the sum of salary , and group by attribute dept_name.",
            "Return a bar chart about the distribution of  dept_name and the sum of salary , and group by attribute dept_name.",
            "Find  dept_name and the sum of salary , and group by attribute dept_name, and visualize them by a bar chart.",
            "Visualize a bar chart about the distribution of  dept_name and the sum of salary , and group by attribute dept_name.",
            "Show me about the distribution of  dept_name and the sum of salary , and group by attribute dept_name in a bar chart."
        ]
    },
    "617": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY salary",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY salary"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "AVG(salary)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "Languages",
                    "Marketing",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    48716.25,
                    79070,
                    77097.6,
                    61287,
                    98133,
                    96345.75,
                    74162.25,
                    72088.5,
                    105311,
                    99382,
                    57421.333333333336,
                    84097,
                    79812.5,
                    114576,
                    100052.66666666667,
                    61142.5,
                    67795
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "A bar chart shows the distribution of  dept_name and the average of salary , and group by attribute dept_name.",
            "Draw a bar chart about the distribution of  dept_name and the average of salary , and group by attribute dept_name.",
            "Return a bar chart about the distribution of  dept_name and the average of salary , and group by attribute dept_name.",
            "Visualize a bar chart about the distribution of  dept_name and the average of salary , and group by attribute dept_name.",
            "Show me about the distribution of  dept_name and the average of salary , and group by attribute dept_name in a bar chart."
        ]
    },
    "618": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT ID , salary FROM instructor ORDER BY salary",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT ID , salary FROM instructor ORDER BY salary"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "ID",
            "y_name": "salary",
            "x_data": [
                [
                    14365,
                    50885,
                    42782,
                    28097,
                    36897,
                    57180,
                    64871,
                    80759,
                    72553,
                    79081,
                    59795,
                    41930,
                    97302,
                    95030,
                    90643,
                    78699,
                    22591,
                    4034,
                    35579,
                    58558,
                    31955,
                    15347,
                    81991,
                    43779,
                    65931,
                    3335,
                    3199,
                    28400,
                    48570,
                    52647,
                    4233,
                    79653,
                    73623,
                    25946,
                    99052,
                    63395,
                    16807,
                    77346,
                    63287,
                    37687,
                    6569,
                    74426,
                    48507,
                    50330,
                    34175,
                    90376,
                    95709,
                    96895,
                    74420,
                    19368
                ]
            ],
            "y_data": [
                [
                    32241.56,
                    32570.5,
                    34272.67,
                    35023.18,
                    43770.36,
                    43966.29,
                    45310.53,
                    45538.32,
                    46397.59,
                    47307.1,
                    48803.38,
                    50482.03,
                    51647.57,
                    54805.11,
                    57807.09,
                    59303.62,
                    59706.49,
                    61387.56,
                    62579.61,
                    66143.25,
                    71351.42,
                    72140.88,
                    77036.18,
                    79070.08,
                    79866.95,
                    80797.83,
                    82534.37,
                    84982.92,
                    87549.8,
                    87958.01,
                    88791.45,
                    89805.83,
                    90038.09,
                    90891.69,
                    93348.83,
                    94333.99,
                    98333.65,
                    99382.59,
                    103146.87,
                    104563.38,
                    105311.38,
                    106554.73,
                    107978.47,
                    108011.81,
                    115469.11,
                    117836.5,
                    118143.98,
                    119921.41,
                    121141.99,
                    124651.41
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a scatter chart about the correlation between  ID and  salary .",
            "Visualize the relationship between  ID and  salary .",
            "Return a scatter chart about the correlation between  ID and  salary .",
            "What is the relationship between  ID and  salary ?",
            "A scatter chart shows the correlation between  ID and  salary ."
        ]
    },
    "619": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "min(salary)",
            "x_data": [
                [
                    "Astronomy",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Finance",
                    "Geology",
                    "Marketing",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci."
                ]
            ],
            "y_data": [
                [
                    79070.08,
                    80797.83,
                    79866.95,
                    105311.38,
                    99382.59,
                    43770.36,
                    51647.57,
                    108011.81,
                    87549.8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the minimum salary for the departments whose average salary is above the average payment of all instructors. Plot them as bar chart.",
            "Display a bar chart for what is the lowest salary in departments with average salary greater than the overall average.",
            "Give me a histogram for what is the lowest salary in departments with average salary greater than the overall average.",
            "What is the lowest salary in departments with average salary greater than the overall average. Plot them as bar chart.",
            "Bar chart of minimal salary from each dept name"
        ]
    },
    "620": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Garfield",
                    "Gates",
                    "Lambea",
                    "Nassa",
                    "Painter",
                    "Rathbone",
                    "Saucon",
                    "Stabler",
                    "Taylor",
                    "Whitman"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of rooms with more than 50 capacity for each building. Show bar chart.",
            "Display a bar chart for how many rooms in each building have a capacity of over 50?",
            "How many rooms in each building have a capacity of over 50. Visualize by bar chart."
        ]
    },
    "621": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , sum(credits) FROM course GROUP BY dept_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , sum(credits) FROM course GROUP BY dept_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "sum(credits)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Civil Eng.",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "History",
                    "Languages",
                    "Marketing",
                    "Math",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    40,
                    37,
                    30,
                    23,
                    34,
                    37,
                    67,
                    28,
                    28,
                    49,
                    33,
                    29,
                    37,
                    20,
                    34,
                    40,
                    38,
                    23,
                    44,
                    21
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the total credits of courses provided by different department. Plot them as bar chart.",
            "Show me a bar chart for how many total credits are offered by each department?",
            "Draw a bar chart for how many total credits are offered by each department?",
            "How many total credits are offered by each department. Show bar chart.",
            "Bar chart of total number of credits from each dept name"
        ]
    },
    "622": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT max(capacity) , avg(capacity) FROM classroom GROUP BY building",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT max(capacity) , avg(capacity) FROM classroom GROUP BY building"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "max(capacity)",
            "y_name": "avg(capacity)",
            "x_data": [
                [
                    47,
                    12,
                    11,
                    18,
                    27,
                    59,
                    65,
                    34,
                    51,
                    10,
                    30,
                    92,
                    97,
                    28,
                    12,
                    60,
                    109,
                    113,
                    115,
                    120
                ]
            ],
            "y_data": [
                [
                    36.5,
                    12,
                    10.5,
                    18,
                    27,
                    59,
                    37.5,
                    34,
                    51,
                    10,
                    26,
                    92,
                    97,
                    28,
                    11,
                    60,
                    49.33333333333334,
                    113,
                    93,
                    76
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the relationship between average and maximum capacity among rooms in each building with a scatter chart.",
            "What is the relationship between average and greatest capacity for rooms in each building? Show me a scatter chart.",
            "Plot a scatter chart, max(capacity) by mean capacity."
        ]
    },
    "623": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , max(capacity) FROM classroom GROUP BY building",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , max(capacity) FROM classroom GROUP BY building"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "max(capacity)",
            "x_data": [
                [
                    "Alumni",
                    "Bronfman",
                    "Chandler",
                    "Drown",
                    "Fairchild",
                    "Garfield",
                    "Gates",
                    "Grace",
                    "Lambea",
                    "Lamberton",
                    "Main",
                    "Nassa",
                    "Painter",
                    "Polya",
                    "Power",
                    "Rathbone",
                    "Saucon",
                    "Stabler",
                    "Taylor",
                    "Whitman"
                ]
            ],
            "y_data": [
                [
                    47,
                    12,
                    11,
                    18,
                    27,
                    59,
                    65,
                    34,
                    51,
                    10,
                    30,
                    92,
                    97,
                    28,
                    12,
                    60,
                    109,
                    113,
                    115,
                    120
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the maximum capacity among rooms in each building with a bar chart.",
            "What is the greatest capacity for rooms in each building? Draw a bar chart.",
            "Bar chart x axis building y axis maximal capacity"
        ]
    },
    "624": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , avg(capacity) FROM classroom GROUP BY building",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , avg(capacity) FROM classroom GROUP BY building"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "avg(capacity)",
            "x_data": [
                [
                    "Alumni",
                    "Bronfman",
                    "Chandler",
                    "Drown",
                    "Fairchild",
                    "Garfield",
                    "Gates",
                    "Grace",
                    "Lambea",
                    "Lamberton",
                    "Main",
                    "Nassa",
                    "Painter",
                    "Polya",
                    "Power",
                    "Rathbone",
                    "Saucon",
                    "Stabler",
                    "Taylor",
                    "Whitman"
                ]
            ],
            "y_data": [
                [
                    36.5,
                    12,
                    10.5,
                    18,
                    27,
                    59,
                    37.5,
                    34,
                    51,
                    10,
                    26,
                    92,
                    97,
                    28,
                    11,
                    60,
                    49.33333333333334,
                    113,
                    93,
                    76
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the average capacity among rooms in each building with a bar chart.",
            "What is the average capacity for rooms in each building? Draw a bar chart.",
            "Bar chart x axis building y axis the average of capacity"
        ]
    },
    "625": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM department GROUP BY building",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM department GROUP BY building"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Brodhead",
                    "Bronfman",
                    "Candlestick",
                    "Chandler",
                    "Lambea",
                    "Lamberton",
                    "Linderman",
                    "Main",
                    "Mercer",
                    "Palmer",
                    "Rauch",
                    "Saucon",
                    "Taylor",
                    "Thompson",
                    "Whitman",
                    "Wrigley"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    3,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "List the number of departments for each building with a bar chart.",
            "How many departments for each building? Draw a bar chart.",
            "Bar chart of how many building from each building"
        ]
    },
    "626": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "Differential Geometry",
                    "Elastic Structures",
                    "Electron Microscopy",
                    "Embedded Systems",
                    "Game Programming",
                    "Graph Theory",
                    "Groups and Rings",
                    "Immunology",
                    "International Practicum",
                    "Operating Systems",
                    "Ponzi Schemes",
                    "Rock and Roll",
                    "World History"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Find the number of courses that have two prerequisites for each title in a bar chart.",
            "How many courses have two prerequisites? Show me a bar chart grouping by title."
        ]
    },
    "627": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "AVG(salary)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "Languages",
                    "Marketing",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    48716.5925,
                    79070.08,
                    77098.198,
                    61287.25,
                    98133.47,
                    96346.5675,
                    74162.73999999999,
                    72089.04999999999,
                    105311.38,
                    99382.59,
                    57421.85666666668,
                    84097.4375,
                    79813.02,
                    114576.9,
                    100053.07333333332,
                    61143.05,
                    67795.44166666668
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the names and average salaries of all departments whose average salary is greater than 42000. ",
            "Display a bar chart for what are the names and average salaries for departments with average salary higher than 42000?",
            "Give me a histogram for what are the names and average salaries for departments with average salary higher than 42000?",
            "What are the names and average salaries for departments with average salary higher than 42000. Plot them as bar chart.",
            "Bar chart of mean salary from each dept name"
        ]
    },
    "628": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT count(DISTINCT T2.id) , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT count(DISTINCT T2.id) , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name"
        },
        "chart": "Scatter",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "count(DISTINCT T2.id)",
            "y_name": "count(DISTINCT T3.id)",
            "x_data": [
                [
                    99,
                    106,
                    92,
                    100,
                    108,
                    86,
                    98,
                    95,
                    97,
                    92,
                    119,
                    85,
                    105,
                    96,
                    109,
                    100,
                    85
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    5,
                    2,
                    2,
                    4,
                    4,
                    4,
                    1,
                    1,
                    3,
                    4,
                    2,
                    2,
                    3,
                    2,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the relationship between total number of students and total number of instructors in a scatter chart.",
            "What is the relationship between total number of students and total number of instructors? Return a scatter chart."
        ]
    },
    "629": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.dept_name , count(DISTINCT T2.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.dept_name , count(DISTINCT T2.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(DISTINCT T2.id)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "Languages",
                    "Marketing",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    99,
                    106,
                    92,
                    100,
                    108,
                    86,
                    98,
                    95,
                    97,
                    92,
                    119,
                    85,
                    105,
                    96,
                    109,
                    100,
                    85
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the total number of students for each department with a bar chart.",
            "How many students are in each department? Show me a bar chart."
        ]
    },
    "630": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(DISTINCT T3.id)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "Languages",
                    "Marketing",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    5,
                    2,
                    2,
                    4,
                    4,
                    4,
                    1,
                    1,
                    3,
                    4,
                    2,
                    2,
                    3,
                    2,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the total number of instructors for each department with a bar chart.",
            "How many instructors are in each department? Show me a bar chart."
        ]
    },
    "631": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , COUNT(dept_name) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , COUNT(dept_name) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "COUNT(dept_name)",
            "x_data": [
                [
                    "Athletics",
                    "Biology",
                    "Civil Eng.",
                    "Comp. Sci.",
                    "Cybernetics",
                    "English",
                    "Finance",
                    "History",
                    "Marketing",
                    "Mech. Eng.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "Find the number of courses that have more than one prerequisites for each department in a bar chart.",
            "How many courses have more than one prerequisite for each department? Visualize with a bar chart."
        ]
    },
    "632": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "SUM(credits)",
            "x_data": [
                [
                    "Athletics",
                    "Biology",
                    "Civil Eng.",
                    "Comp. Sci.",
                    "Cybernetics",
                    "English",
                    "Finance",
                    "History",
                    "Marketing",
                    "Mech. Eng.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    7,
                    3,
                    7,
                    8,
                    7,
                    3,
                    4,
                    3,
                    3,
                    6,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "Find the sum of credits of courses that have more than one prerequisites for each department with a bar chart.",
            "What is the sum of credit value of courses with more than one prerequisite for each department? Return a bar chart."
        ]
    },
    "633": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "AVG(credits)",
            "x_data": [
                [
                    "Athletics",
                    "Biology",
                    "Civil Eng.",
                    "Comp. Sci.",
                    "Cybernetics",
                    "English",
                    "Finance",
                    "History",
                    "Marketing",
                    "Mech. Eng.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    3.5,
                    3,
                    3.5,
                    4,
                    3.5,
                    3,
                    4,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "Find the average of credits of courses that have more than one prerequisite for each department with a bar chart.",
            "What is the average of credit value of courses with more than one prerequisite for each department? Return a bar chart."
        ]
    },
    "634": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "Aquatic Chemistry",
                    "Cat Herding",
                    "Differential Geometry",
                    "Elastic Structures",
                    "Electron Microscopy",
                    "Embedded Systems",
                    "Fiction Writing",
                    "Game Programming",
                    "Graph Theory",
                    "Groups and Rings",
                    "Immunology",
                    "International Practicum",
                    "Operating Systems",
                    "Ponzi Schemes",
                    "Rock and Roll",
                    "World History"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Find the number of courses that have more than one prerequisites for each title with a bar chart.",
            "How many courses with more than one prerequisite for each title? Return a bar chart."
        ]
    },
    "635": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(credits)",
            "x_data": [
                [
                    "Aquatic Chemistry",
                    "Cat Herding",
                    "Differential Geometry",
                    "Elastic Structures",
                    "Electron Microscopy",
                    "Embedded Systems",
                    "Fiction Writing",
                    "Game Programming",
                    "Graph Theory",
                    "Groups and Rings",
                    "Immunology",
                    "International Practicum",
                    "Operating Systems",
                    "Ponzi Schemes",
                    "Rock and Roll",
                    "World History"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    3,
                    3,
                    4,
                    3,
                    8,
                    3,
                    4,
                    3,
                    7,
                    3,
                    3,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Find the sum of credits of courses that have more than one prerequisite for each title with a bar chart.",
            "What is the sum of credit value of courses with more than one prerequisite for each title? Return a bar chart."
        ]
    },
    "636": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(credits)",
            "x_data": [
                [
                    "Aquatic Chemistry",
                    "Cat Herding",
                    "Differential Geometry",
                    "Elastic Structures",
                    "Electron Microscopy",
                    "Embedded Systems",
                    "Fiction Writing",
                    "Game Programming",
                    "Graph Theory",
                    "Groups and Rings",
                    "Immunology",
                    "International Practicum",
                    "Operating Systems",
                    "Ponzi Schemes",
                    "Rock and Roll",
                    "World History"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    3,
                    3,
                    4,
                    3,
                    4,
                    3,
                    4,
                    3,
                    3.5,
                    3,
                    3,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Find the average of credits of courses that have more than one prerequisite for each title with a bar chart.",
            "What is the average of credit value of courses with more than one prerequisite for each title? Return a bar chart."
        ]
    },
    "640": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION GROUP BY year",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY year"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2001-01-01",
                    "2002-01-01",
                    "2003-01-01",
                    "2004-01-01",
                    "2005-01-01",
                    "2006-01-01",
                    "2007-01-01",
                    "2008-01-01",
                    "2009-01-01",
                    "2010-01-01"
                ]
            ],
            "y_data": [
                [
                    5,
                    13,
                    12,
                    7,
                    8,
                    13,
                    12,
                    10,
                    9,
                    11
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "Find the number of courses provided in each year with a line chart.",
            "How many courses are provided in each year? Visualize with a line chart.",
            "Visualize the general trend of how many courses are given over the year."
        ]
    },
    "642": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2001",
                    "2002",
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010"
                ]
            ],
            "y_data": [
                [
                    5,
                    13,
                    12,
                    7,
                    8,
                    13,
                    12,
                    10,
                    9,
                    11
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "Find the number of courses provided in each year, by binning year with a line chart.",
            "How many courses are provided in each year? binning year and Visualize a line chart.",
            "Plot year and binning year, then count the total number as a trend line"
        ]
    },
    "647": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION GROUP BY semester ,  year",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY semester ,  year"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2001-01-01",
                    "2002-01-01",
                    "2003-01-01",
                    "2004-01-01",
                    "2005-01-01",
                    "2006-01-01",
                    "2007-01-01",
                    "2008-01-01",
                    "2009-01-01",
                    "2010-01-01"
                ]
            ],
            "y_data": [
                [
                    2,
                    9,
                    6,
                    3,
                    4,
                    8,
                    6,
                    1,
                    7,
                    5
                ],
                [
                    3,
                    4,
                    6,
                    4,
                    4,
                    5,
                    6,
                    9,
                    2,
                    6
                ]
            ],
            "classify": [
                "Fall",
                "Spring"
            ],
            "describe": "GROUP BY semester, GROUP BY year"
        },
        "nl_queries": [
            "Find the number of courses provided in each year with a group line chart that groups by semester.",
            "How many courses are provided in each year? Visualize with a group line chart grouping by semester.",
            "I want to see trend the total number over year by semester"
        ]
    },
    "648": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION GROUP BY semester",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY semester BIN year BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2001",
                    "2002",
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010"
                ]
            ],
            "y_data": [
                [
                    2,
                    9,
                    6,
                    3,
                    4,
                    8,
                    6,
                    1,
                    7,
                    5
                ],
                [
                    3,
                    4,
                    6,
                    4,
                    4,
                    5,
                    6,
                    9,
                    2,
                    6
                ]
            ],
            "classify": [
                "Fall",
                "Spring"
            ],
            "describe": "GROUP BY semester, BIN year BY YEAR"
        },
        "nl_queries": [
            "Find the number of courses provided in each year, bining year, with a grouping line chart that groups by semester .",
            "How many courses are provided in each year? binning by year and visualize with a grouping line chart by different semesters .",
            "I want to see trend count(*) over year by semester, and binning by year,"
        ]
    },
    "652": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY name"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Bietzk",
                    "DAgostino",
                    "Dale",
                    "Jaekel",
                    "Mahmoud",
                    "Mingoz",
                    "Ullman "
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "List the number of courses in year 2008 for each instructor in a bar chart.",
            "Show how many courses in 2008 for every instructor with a bar chart."
        ]
    },
    "653": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY title"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "Animal Behavior",
                    "Elastic Structures",
                    "Embedded Systems",
                    "Marine Mammals",
                    "Networking",
                    "Race Car Driving",
                    "Surfing",
                    "Transaction Processing",
                    "World History"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "List the number of instructors for each course in year 2008 with a bar chart.",
            "How many instructors for every course in 2008? Show me a bar chart grouping by course title."
        ]
    },
    "654": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , count(*) FROM student GROUP BY dept_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , count(*) FROM student GROUP BY dept_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Civil Eng.",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "History",
                    "Languages",
                    "Marketing",
                    "Math",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    99,
                    106,
                    92,
                    100,
                    120,
                    108,
                    86,
                    98,
                    95,
                    97,
                    92,
                    117,
                    119,
                    85,
                    91,
                    105,
                    96,
                    109,
                    100,
                    85
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the total number of students in each department. Show bar chart.",
            "Visualize a bar chart for how many students are in each department?",
            "how many students are in each department?",
            "How many students are in each department. Plot them as bar chart.",
            "Give me a bar chart for the total number of each dept name"
        ]
    },
    "655": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department)",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department)"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "budget",
            "x_data": [
                [
                    "Biology",
                    "History",
                    "Physics",
                    "Pol. Sci.",
                    "English",
                    "Languages",
                    "Finance",
                    "Cybernetics",
                    "Astronomy",
                    "Athletics",
                    "Psychology",
                    "Math"
                ]
            ],
            "y_data": [
                [
                    647610.55,
                    699140.86,
                    942162.76,
                    573745.09,
                    611042.66,
                    601283.6,
                    866831.75,
                    794541.46,
                    617253.94,
                    734550.7,
                    848175.04,
                    777605.11
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and budget of departments whose budgets are more than the average budget. Visualize by bar chart.",
            "Return a histogram on what are the names and budgets of departments with budgets greater than the average?",
            "Display a bar chart for what are the names and budgets of departments with budgets greater than the average?",
            "What are the names and budgets of departments with budgets greater than the average. Plot them as bar chart."
        ]
    },
    "657": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM department WHERE budget > (SELECT avg(budget) FROM department) GROUP BY building",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM department WHERE budget > (SELECT avg(budget) FROM department) GROUP BY building"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Brodhead",
                    "Bronfman",
                    "Candlestick",
                    "Linderman",
                    "Mercer",
                    "Palmer",
                    "Taylor",
                    "Thompson",
                    "Whitman",
                    "Wrigley"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "How many departments whose budget is more than the average budget in each building? Show me a bar chart.",
            "Give the number of departments with greater than average budget in each building with a bar chart."
        ]
    },
    "658": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , COUNT(dept_name) FROM student GROUP BY dept_name ORDER BY tot_cred",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , COUNT(dept_name) FROM student GROUP BY dept_name ORDER BY tot_cred"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "COUNT(dept_name)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Civil Eng.",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "History",
                    "Languages",
                    "Marketing",
                    "Math",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    99,
                    106,
                    92,
                    100,
                    120,
                    108,
                    86,
                    98,
                    95,
                    97,
                    92,
                    117,
                    119,
                    85,
                    91,
                    105,
                    96,
                    109,
                    100,
                    85
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "Find the number of students in each department with a bar chart.",
            "How many students in each department? Give me a bar chart."
        ]
    },
    "689": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM singer GROUP BY country",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Country , count(*) FROM singer GROUP BY country"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "France",
                    "Netherlands",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all countries and the number of singers in each country by a pie chart.",
            "Show all countries and the number of singers in each country. Show the proportion.",
            "Display a pie chart for how many singers are from each country?",
            "Pie chart. how many singers are from each country?",
            "How many singers are from each country. Visualize by pie chart.",
            "Compute the total the total number across country as a pie chart."
        ]
    },
    "690": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM singer GROUP BY country",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , count(*) FROM singer GROUP BY country"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "France",
                    "Netherlands",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all countries and the number of singers in each country in a bar chart.",
            "Show all countries and the number of singers in each country. Show bar chart.",
            "Return a bar chart on how many singers are from each country?",
            "Give me a histogram for how many singers are from each country?",
            "How many singers are from each country. ",
            "Draw a bar chart of country versus the total number "
        ]
    },
    "691": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "John Nizinik",
                    "Justin Brown",
                    "Rose White",
                    "Timbaland",
                    "Tribal King"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "What are the names of the singers who performed in a concert in 2014, and count them by a pie chart",
            "List all singer names in concerts in year 2014, and count them by a pie chart",
            "A pie chart for what are the number of the names of the singers who performed in a concert in 2014?",
            "What are the number of the names of the singers who performed in a concert in 2014?"
        ]
    },
    "692": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "John Nizinik",
                    "Justin Brown",
                    "Rose White",
                    "Timbaland",
                    "Tribal King"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "A bar chart for what are the number of the names of the singers who performed in a concert in 2014?",
            "What are the names of the singers who performed in a concert in 2014, and count them by a bar chart",
            "What are the number of the names of the singers who performed in a concert in 2014?",
            "List all singer names in concerts in year 2014, and count them by a bar chart"
        ]
    },
    "693": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM singer GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM singer GROUP BY Country"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "France",
                    "Netherlands",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Show the number of singers in each country with a bar chart.",
            "What is the number of singers for each country? Show a bar chart.",
            "Give me a bar chart for the number of country of each country"
        ]
    },
    "696": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , AVG(Age) FROM singer GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM singer GROUP BY Country"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "France",
                    "Netherlands",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    34.5,
                    52,
                    32
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Show the average age of singers for each country with a bar chart.",
            "What is the average age of singers for each country? Visualize with a bar chart.",
            "Show the average of age from each country"
        ]
    },
    "697": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM singer ORDER BY age DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM singer ORDER BY age DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Joe Sharp",
                    "John Nizinik",
                    "Rose White",
                    "Timbaland",
                    "Justin Brown",
                    "Tribal King"
                ]
            ],
            "y_data": [
                [
                    52,
                    43,
                    41,
                    32,
                    29,
                    25
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the age of each singer in a bar chart from the oldest to the youngest.",
            "What is the age of every singer? Return a bar chart in descending order of age?"
        ]
    },
    "698": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM singer GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM singer GROUP BY Country"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "France",
                    "Netherlands",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Show the number of singers in each country with a pie chart.",
            "What is the number of singers for each country? Return a pie chart.",
            "Compute the total how many country across country as a pie chart."
        ]
    },
    "699": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Timbaland",
                    "Justin Brown",
                    "Rose White",
                    "John Nizinik",
                    "Tribal King"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List singer names and number of concerts for each singer by a pie chart.",
            "List singer names and number of concerts for each singer. Show the proportion.",
            "Give the proportion of what are the names of the singers and number of concerts for each person?",
            "Display a pie chart for what are the names of the singers and number of concerts for each person?",
            "What are the names of the singers and number of concerts for each person. Show the proportion."
        ]
    },
    "700": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Timbaland",
                    "Justin Brown",
                    "Rose White",
                    "John Nizinik",
                    "Tribal King"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List singer names and number of concerts for each singer with a bar chart.",
            "List singer names and number of concerts for each singer. ",
            "A bar chart about what are the names of the singers and number of concerts for each person?",
            "Give me a histogram for what are the names of the singers and number of concerts for each person?",
            "What are the names of the singers and number of concerts for each person. Show bar chart."
        ]
    },
    "705": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Theme",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Free choice",
                    "Free choice 2",
                    "Bleeding Love",
                    "Wide Awake",
                    "Happy Tonight",
                    "Party All Night"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the number of each theme? Plot as a bar chart."
        ]
    },
    "722": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "pie",
            "x_name": "role_description",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Editor",
                    "Manager",
                    "Proof Manager",
                    "Photo"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many employees does each role have? Plot a pie chart."
        ]
    },
    "723": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_description",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Editor",
                    "Manager",
                    "Proof Manager",
                    "Photo"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show a bar chart about how many employees does each role have?"
        ]
    },
    "724": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "pie",
            "x_name": "role_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ED",
                    "MG",
                    "PR",
                    "PT"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many employees does each role have? List role id and number of employees in a pie chart."
        ]
    },
    "725": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ED",
                    "MG",
                    "PR",
                    "PT"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many employees does each role have? Plot a bar chart listing role id and number of employees."
        ]
    },
    "726": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT receipt_date , COUNT(receipt_date) FROM Documents",
                "binning": "BIN receipt_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT receipt_date , COUNT(receipt_date) FROM Documents BIN receipt_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "receipt_date",
            "y_name": "COUNT(receipt_date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    2,
                    1,
                    3,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN receipt_date BY WEEKDAY"
        },
        "nl_queries": [
            "List the number of documents for each receipt date and bin by weekday in a bar chart.",
            "Bar chart of the number of receipt date from each receipt date"
        ]
    },
    "729": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT receipt_date , COUNT(receipt_date) FROM Documents",
                "binning": "BIN receipt_date BY YEAR"
            },
            "VQL": "Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents BIN receipt_date BY YEAR"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "line",
            "x_name": "receipt_date",
            "y_name": "COUNT(receipt_date)",
            "x_data": [
                [
                    "1973~1977",
                    "1978~1982",
                    "1983~1987",
                    "1988~1992",
                    "1993~1997",
                    "1998~2002",
                    "2003~2007",
                    "2008~2012",
                    "2013~2017"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    3,
                    0,
                    2,
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN receipt_date BY YEAR"
        },
        "nl_queries": [
            "List the number of documents for each receipt date and bin by year with a line chart.",
            "I want to see trend of how many receipt date by receipt date"
        ]
    },
    "767": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Destruction_Authorised_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Destruction_Authorised_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Destruction_Authorised_by_Employee_ID",
            "y_name": "count(*)",
            "x_data": [
                [
                    30,
                    38,
                    55,
                    123,
                    156,
                    183
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3,
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the id of each employee and the number of document destruction authorised by that employee by a scatter chart.",
            "Show the id of each employee and the number of document destruction authorised by that employee. Show scatter chart.",
            "plot scatter on what are the id of each employee and the number of document destruction authorised by that employee?",
            "Return a scatter chart on what are the id of each employee and the number of document destruction authorised by that employee?",
            "What are the id of each employee and the number of document destruction authorised by that employee. Visualize by scatter chart.",
            "Scatter plot to show destruction authorised by employee id on x axis and the total number on y axis."
        ]
    },
    "768": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Location_Code",
            "y_name": "COUNT(Location_Code)",
            "x_data": [
                [
                    "b",
                    "c",
                    "e",
                    "n",
                    "x"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    4,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location_Code"
        },
        "nl_queries": [
            "Show the number of documents for each location code in a pie chart.",
            "How many documents for different location code? Plot a pie chart to show the proportion.",
            "Compute the total the number of location code across location code as a pie chart."
        ]
    },
    "769": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location_Code",
            "y_name": "COUNT(Location_Code)",
            "x_data": [
                [
                    "b",
                    "c",
                    "e",
                    "n",
                    "x"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    4,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location_Code"
        },
        "nl_queries": [
            "Show the number of documents for each location code in a bar chart.",
            "How many documents for different location code? Plot a bar chart to show the proportion.",
            "Bar chart x axis location code y axis how many location code"
        ]
    },
    "770": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "1972-03-31",
                    "1985-05-13",
                    "1986-10-14",
                    "1997-03-10",
                    "2008-06-08",
                    "2009-08-18",
                    "2010-11-26",
                    "2017-01-06"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_in_Location_From"
        },
        "nl_queries": [
            "Show the number of documents in different starting date and group by starting date with a line chart.",
            "How many documents in different starting date? Return a line chart grouping by starting date.",
            "Plot how many date in location from over date in location from in a line chart"
        ]
    },
    "771": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations",
                "binning": "BIN Date_in_Location_From BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations BIN Date_in_Location_From BY YEAR"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "1972~1976",
                    "1977~1981",
                    "1982~1986",
                    "1987~1991",
                    "1992~1996",
                    "1997~2001",
                    "2002~2006",
                    "2007~2011",
                    "2012~2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    3,
                    0,
                    3,
                    0,
                    0,
                    1,
                    0,
                    3,
                    0,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN Date_in_Location_From BY YEAR"
        },
        "nl_queries": [
            "Show the number of documents in different starting date and bin starting date by year interval with a line chart.",
            "How many documents in different starting date? Return a line chart binning starting date by year interval.",
            "Can you draw the trend of how many date in location from over the date in location from?"
        ]
    },
    "772": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations",
                "binning": "BIN Date_in_Location_From BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations BIN Date_in_Location_From BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    0,
                    0,
                    9,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Date_in_Location_From BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of documents in different starting date and bin starting date by weekday interval with a bar chart.",
            "How many documents in different starting date? Return a bar chart binning starting date by weekday interval.",
            "Bar chart x axis date in location from y axis the number of date in location from"
        ]
    },
    "773": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "1976-06-15",
                    "1986-10-14",
                    "1987-11-05",
                    "1995-01-01",
                    "1997-03-10",
                    "2008-06-08",
                    "2009-08-18",
                    "2010-11-26",
                    "2012-07-03",
                    "2017-01-06"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_in_Locaton_To"
        },
        "nl_queries": [
            "Show the number of documents in different ending date and group by ending date with a line chart.",
            "How many documents in different ending date? Return a line chart grouping by ending date.",
            "Can you draw the trend of how many date in locaton to over the date in locaton to?"
        ]
    },
    "774": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations",
                "binning": "BIN Date_in_Locaton_To BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations BIN Date_in_Locaton_To BY YEAR"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "1976~1979",
                    "1980~1983",
                    "1984~1987",
                    "1988~1991",
                    "1992~1995",
                    "1996~1999",
                    "2000~2003",
                    "2004~2007",
                    "2008~2011",
                    "2012~2015",
                    "2016~2017"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    4,
                    0,
                    1,
                    1,
                    0,
                    0,
                    5,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Date_in_Locaton_To BY YEAR"
        },
        "nl_queries": [
            "Show the number of documents in different ending date and bin ending date by year interval with a line chart.",
            "How many documents in different ending date? Return a line chart binning ending date by year interval.",
            "I want to see trend of the number of date in locaton to by date in locaton to"
        ]
    },
    "775": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations",
                "binning": "BIN Date_in_Locaton_To BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations BIN Date_in_Locaton_To BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    6,
                    0,
                    2,
                    4,
                    0,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Date_in_Locaton_To BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of documents in different ending date and bin ending date by weekday with a bar chart.",
            "How many documents in different ending date? Return a bar chart binning ending date by weekday.",
            "Create a bar chart showing the number of date in locaton to across date in locaton to"
        ]
    },
    "776": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code",
                "binning": "BIN Date_in_Location_From BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code BIN Date_in_Location_From BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "1972~1976",
                    "1977~1981",
                    "1982~1986",
                    "1987~1991",
                    "1992~1996",
                    "1997~2001",
                    "2002~2006",
                    "2007~2011",
                    "2012~2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    3,
                    0,
                    5,
                    0,
                    0,
                    1,
                    0,
                    3,
                    0,
                    6
                ],
                [
                    4,
                    0,
                    5,
                    0,
                    0,
                    1,
                    0,
                    3,
                    0,
                    7
                ],
                [
                    5,
                    0,
                    5,
                    0,
                    0,
                    1,
                    0,
                    5,
                    0,
                    8
                ],
                [
                    5,
                    0,
                    5,
                    0,
                    0,
                    1,
                    0,
                    5,
                    0,
                    9
                ],
                [
                    6,
                    0,
                    6,
                    0,
                    0,
                    2,
                    0,
                    6,
                    0,
                    10
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, BIN Date_in_Location_From BY YEAR"
        },
        "nl_queries": [
            "Show the number of documents in different starting date. Bin starting date by year interval and group by location code with a group line chart.",
            "Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code"
        ]
    },
    "777": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code",
                "binning": "BIN Date_in_Location_From BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code BIN Date_in_Location_From BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    0,
                    0,
                    1,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0
                ],
                [
                    0,
                    1,
                    0,
                    0,
                    3,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0
                ],
                [
                    1,
                    1,
                    0,
                    0,
                    2,
                    0,
                    1
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, BIN Date_in_Location_From BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of documents in different starting date. Bin starting date by weekday and group by location code with a stacked bar chart.",
            "Stacked bar chart of how many date in location from for with each Location_Code in each date in location from"
        ]
    },
    "778": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "1976-06-15",
                    "1986-10-14",
                    "1987-11-05",
                    "1995-01-01",
                    "1997-03-10",
                    "2008-06-08",
                    "2009-08-18",
                    "2010-11-26",
                    "2012-07-03",
                    "2017-01-06"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    0,
                    1,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0
                ],
                [
                    0,
                    1,
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    1
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    0
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, GROUP BY Date_in_Locaton_To"
        },
        "nl_queries": [
            "Give me a group line chart showing the number of documents in different ending date. The x-axis is ending date and group by location code.",
            "I want to see trend the number of date in locaton to over date in locaton to by Location_Code"
        ]
    },
    "779": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code",
                "binning": "BIN Date_in_Locaton_To BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code BIN Date_in_Locaton_To BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "1976~1979",
                    "1980~1983",
                    "1984~1987",
                    "1988~1991",
                    "1992~1995",
                    "1996~1999",
                    "2000~2003",
                    "2004~2007",
                    "2008~2011",
                    "2012~2015",
                    "2016~2017"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    5,
                    0,
                    2,
                    1,
                    0,
                    0,
                    6,
                    1,
                    1
                ],
                [
                    2,
                    0,
                    6,
                    0,
                    2,
                    1,
                    0,
                    0,
                    7,
                    1,
                    1
                ],
                [
                    2,
                    0,
                    8,
                    0,
                    2,
                    1,
                    0,
                    0,
                    8,
                    1,
                    2
                ],
                [
                    2,
                    0,
                    8,
                    0,
                    2,
                    2,
                    0,
                    0,
                    8,
                    1,
                    2
                ],
                [
                    4,
                    0,
                    8,
                    0,
                    2,
                    2,
                    0,
                    0,
                    10,
                    2,
                    2
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, BIN Date_in_Locaton_To BY YEAR"
        },
        "nl_queries": [
            "Show the number of documents in different ending date. Bin ending date by year interval and group by location code with a group line chart.",
            "Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code"
        ]
    },
    "780": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code",
                "binning": "BIN Date_in_Locaton_To BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code BIN Date_in_Locaton_To BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    0,
                    0,
                    1,
                    0,
                    1
                ],
                [
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    0
                ],
                [
                    0,
                    1,
                    0,
                    1,
                    1,
                    0,
                    1
                ],
                [
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    4,
                    0,
                    0,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, BIN Date_in_Locaton_To BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of documents in different ending date. Bin ending date by weekday and group by location code with a stacked bar chart.",
            "Stacked bar of date in locaton to and the number of date in locaton to colored by Location_Code"
        ]
    },
    "781": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Role_Code , count(*) FROM Employees GROUP BY role_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Role_Code , count(*) FROM Employees GROUP BY role_code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Role_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ED",
                    "HR",
                    "MG",
                    "PR",
                    "PT"
                ]
            ],
            "y_data": [
                [
                    7,
                    1,
                    1,
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all role codes and the number of employees in each role with a pie chart.",
            "Show all role codes and the number of employees in each role. Show a pie chart.",
            "A pie chart about what is the code of each role and the number of employees in each role?",
            "What is the code of each role and the number of employees in each role. Plot them as pie chart.",
            "I want to know the proportion of employees for each role code."
        ]
    },
    "782": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Role_Code , count(*) FROM Employees GROUP BY role_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Role_Code , count(*) FROM Employees GROUP BY role_code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Role_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ED",
                    "HR",
                    "MG",
                    "PR",
                    "PT"
                ]
            ],
            "y_data": [
                [
                    7,
                    1,
                    1,
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all role codes and the number of employees in each role by a bar chart.",
            "Show all role codes and the number of employees in each role. Show bar chart.",
            "Give me a histogram for what is the code of each role and the number of employees in each role?",
            "Return a histogram on what is the code of each role and the number of employees in each role?",
            "What is the code of each role and the number of employees in each role. Show bar chart.",
            "Bar chart x axis role code y axis the total number "
        ]
    },
    "783": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar",
                "binning": "BIN Calendar_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar BIN Calendar_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Calendar_Date",
            "y_name": "COUNT(Calendar_Date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    4,
                    5,
                    0,
                    1,
                    3,
                    0,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Calendar_Date BY WEEKDAY"
        },
        "nl_queries": [
            "Show all calendar dates and bin by weekday in a bar chart.",
            "What are all the calendar dates? Show a bar chart binning calendar date by weekday.",
            "Bar chart x axis calendar date y axis the number of calendar date"
        ]
    },
    "787": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar",
                "binning": "BIN Calendar_Date BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar BIN Calendar_Date BY YEAR"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Calendar_Date",
            "y_name": "COUNT(Calendar_Date)",
            "x_data": [
                [
                    "1972~1976",
                    "1977~1981",
                    "1982~1986",
                    "1987~1991",
                    "1992~1996",
                    "1997~2001",
                    "2002~2006",
                    "2007~2011",
                    "2012~2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    2,
                    2,
                    2,
                    1,
                    0,
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Calendar_Date BY YEAR"
        },
        "nl_queries": [
            "Show all calendar dates and bin by year in a line chart.",
            "What are all the calendar dates? Give me a line chart binning calendar dates by year.",
            "Plot calendar date by how many calendar date as a line chart"
        ]
    },
    "789": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Calendar_Date , Day_Number FROM Ref_calendar",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Calendar_Date",
            "y_name": "Day_Number",
            "x_data": [
                [
                    "1972-03-31",
                    "1976-06-15",
                    "1985-05-13",
                    "1986-10-14",
                    "1987-11-05",
                    "1988-02-01",
                    "1994-11-15",
                    "1995-01-01",
                    "1997-03-10",
                    "2007-05-28",
                    "2008-06-08",
                    "2009-08-18",
                    "2010-11-26",
                    "2012-07-03",
                    "2017-01-06"
                ]
            ],
            "y_data": [
                [
                    5,
                    7,
                    7,
                    1,
                    3,
                    8,
                    9,
                    1,
                    7,
                    2,
                    3,
                    8,
                    7,
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all calendar dates and day Numbers in a line chart.",
            "Show all calendar dates and day Numbers. Plot them as line chart.",
            "Return a line on what are all the calendar dates and day Numbers?",
            "Show me the trend about what are all the calendar dates and day Numbers?",
            "What are all the calendar dates and day Numbers. Show the trend.",
            "I want to see trend of day_number by calendar date"
        ]
    },
    "790": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Location_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "b",
                    "c",
                    "e",
                    "n",
                    "x"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    4,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the location codes and the number of documents in each location with a pie chart.",
            "Show the location codes and the number of documents in each location. Show a pie chart.",
            "Show me the proportion on what is the code of each location and the number of documents in that location?",
            "Pie. what is the code of each location and the number of documents in that location?",
            "What is the code of each location and the number of documents in that location. Visualize by pie chart.",
            "Give me a pie to show the total number from different location code."
        ]
    },
    "791": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "b",
                    "c",
                    "e",
                    "n",
                    "x"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    4,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the location codes and the number of documents in each location in a bar chart.",
            "Show the location codes and the number of documents in each location. Visualize by bar chart.",
            "what is the code of each location and the number of documents in that location?",
            "Display a bar chart for what is the code of each location and the number of documents in that location?",
            "What is the code of each location and the number of documents in that location. Show bar chart.",
            "Create a bar chart showing the total number across location code"
        ]
    },
    "792": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Destroyed_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Destroyed_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Destroyed_by_Employee_ID",
            "y_name": "count(*)",
            "x_data": [
                [
                    38,
                    55,
                    99,
                    136,
                    138,
                    156,
                    173
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the employee ids and the number of documents destroyed by each employee by a scatter chart.",
            "Show the employee ids and the number of documents destroyed by each employee. Show the correlation.",
            "Draw a scatter chart for what are the id of each employee and the number of document destroyed by that employee?",
            "A scatter chart about what are the id of each employee and the number of document destroyed by that employee?",
            "What are the id of each employee and the number of document destroyed by that employee. Visualize by scatter chart.",
            "Show me a scatter plot of destroyed by employee id and the total number for ."
        ]
    },
    "793": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",
                "binning": "BIN Date_Stored BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date BIN Date_Stored BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Stored",
            "y_name": "COUNT(Date_Stored)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    3,
                    7,
                    0,
                    1,
                    0,
                    0,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Stored BY WEEKDAY"
        },
        "nl_queries": [
            "How many documents are stored? Bin the store date by weekday in a bar chart.",
            "Return a bar chart showing the number of documents stored in each weekday."
        ]
    },
    "798": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",
                "binning": "BIN Date_Stored BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date BIN Date_Stored BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_Stored",
            "y_name": "COUNT(Date_Stored)",
            "x_data": [
                [
                    "1976~1979",
                    "1980~1983",
                    "1984~1987",
                    "1988~1991",
                    "1992~1995",
                    "1996~1999",
                    "2000~2003",
                    "2004~2007",
                    "2008~2011",
                    "2012"
                ]
            ],
            "y_data": [
                [
                    3,
                    0,
                    2,
                    0,
                    1,
                    3,
                    0,
                    0,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Stored BY YEAR"
        },
        "nl_queries": [
            "Show how many documents are stored and bin by year in a line chart."
        ]
    },
    "908": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_category_code",
            "y_name": "avg(product_price)",
            "x_data": [
                [
                    "Book",
                    "Food",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    35,
                    2.88,
                    66.67
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a pie chart on what is the average price of the products for each category?",
            "Visualize a pie chart with what is the average price of the products for each category?",
            "What is the average price of the products for each category, Show a pie chart.",
            "Return the average price of products that have each category code in a pie chart.",
            "A pie chart about the average price of products that have each category code."
        ]
    },
    "909": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_category_code",
            "y_name": "avg(product_price)",
            "x_data": [
                [
                    "Book",
                    "Food",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    35,
                    2.88,
                    66.67
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "A bar chart about what is the average price of the products for each category?",
            "Show me a bar chart for what is the average price of the products for each category?",
            "What is the average price of the products for each category. ",
            "Return the average price of products that have each category code in a bar chart.",
            "Return the average price of products that have each category code. ",
            "Bar graph to show the average of product price from different product category code"
        ]
    },
    "910": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Chocolate",
                    "Keyboard",
                    "Mouse",
                    "The Great Gatsby"
                ]
            ],
            "y_data": [
                [
                    6,
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the name of all products along with the number of complaints that they have received in a pie chart.",
            "List the name of all products along with the number of complaints that they have received. Show a pie chart.",
            "Return a pie chart on what are all the different product names, and how many complains has each received?",
            "Display a pie chart for what are all the different product names, and how many complains has each received?",
            "What are all the different product names, and how many complains has each received. Show the proportion."
        ]
    },
    "911": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Chocolate",
                    "Keyboard",
                    "Mouse",
                    "The Great Gatsby"
                ]
            ],
            "y_data": [
                [
                    6,
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the name of all products along with the number of complaints that they have received with a bar chart.",
            "List the name of all products along with the number of complaints that they have received. ",
            "Draw a bar chart for what are all the different product names, and how many complains has each received?",
            "what are all the different product names, and how many complains has each received?",
            "What are all the different product names, and how many complains has each received. Show bar chart."
        ]
    },
    "913": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT customer_name , COUNT(customer_name) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\" GROUP BY customer_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT customer_name , COUNT(customer_name) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\" GROUP BY customer_name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "pie",
            "x_name": "customer_name",
            "y_name": "COUNT(customer_name)",
            "x_data": [
                [
                    "Clifford Pagac",
                    "Kitty Padberg III",
                    "Prof. Alexzander Hamill",
                    "Prof. Reyes Berge II"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY customer_name"
        },
        "nl_queries": [
            "A pie chart showing the proportion of the number of orders that have the status \"Delivered\" for each customer name.",
            "What is the number of orders that have the status \"Delivered\" for each customer name? Show in pie chart."
        ]
    },
    "914": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_name , COUNT(customer_name) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\" GROUP BY customer_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_name , COUNT(customer_name) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\" GROUP BY customer_name"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_name",
            "y_name": "COUNT(customer_name)",
            "x_data": [
                [
                    "Clifford Pagac",
                    "Kitty Padberg III",
                    "Prof. Alexzander Hamill",
                    "Prof. Reyes Berge II"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY customer_name"
        },
        "nl_queries": [
            "Return a bar chart showing the proportion of the number of orders that have the status \"Delivered\" for each customer name.",
            "What is the number of orders that have the status \"Delivered\" for each customer name? Visualize in a bar chart."
        ]
    },
    "915": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT order_date , COUNT(order_date) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\"",
                "binning": "BIN order_date BY DAY"
            },
            "VQL": "Visualize LINE SELECT order_date , COUNT(order_date) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\" BIN order_date BY DAY"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "line",
            "x_name": "order_date",
            "y_name": "COUNT(order_date)",
            "x_data": [
                [
                    "4th",
                    "5th",
                    "6th",
                    "7th",
                    "8th",
                    "9th",
                    "10th",
                    "11th",
                    "12th",
                    "13th",
                    "14th",
                    "15th",
                    "16th",
                    "17th",
                    "18th",
                    "19th",
                    "20th",
                    "21th",
                    "22th"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    1,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN order_date BY DAY"
        },
        "nl_queries": [
            "Find the number of orders in each day and show in a line chart.",
            "How many orders in each day? Return a bar chart to show."
        ]
    },
    "916": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT order_date , COUNT(order_date) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\"",
                "binning": "BIN order_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT order_date , COUNT(order_date) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\" BIN order_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "order_date",
            "y_name": "COUNT(order_date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    0,
                    2,
                    1,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN order_date BY WEEKDAY"
        },
        "nl_queries": [
            "Find the number of orders in each weekday and show in a bar chart.",
            "How many orders in each weekday? Return a bar chart to show."
        ]
    },
    "917": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT order_date , COUNT(order_date) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\" GROUP BY customer_name",
                "binning": "BIN order_date BY DAY"
            },
            "VQL": "Visualize LINE SELECT order_date , COUNT(order_date) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\" GROUP BY customer_name BIN order_date BY DAY"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "line",
            "x_name": "order_date",
            "y_name": "COUNT(order_date)",
            "x_data": [
                [
                    "4th",
                    "5th",
                    "6th",
                    "7th",
                    "8th",
                    "9th",
                    "10th",
                    "11th",
                    "12th",
                    "13th",
                    "14th",
                    "15th",
                    "16th",
                    "17th",
                    "18th",
                    "19th",
                    "20th",
                    "21th",
                    "22th"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    1,
                    0,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                ],
                [
                    1,
                    0,
                    2,
                    0,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                ],
                [
                    1,
                    0,
                    2,
                    0,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                ],
                [
                    2,
                    0,
                    2,
                    0,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                ]
            ],
            "classify": [
                "Clifford Pagac",
                "Kitty Padberg III",
                "Prof. Alexzander Hamill",
                "Prof. Reyes Berge II"
            ],
            "describe": "GROUP BY customer_name, BIN order_date BY DAY"
        },
        "nl_queries": [
            "Find the number of orders in each day and bin the number of orders by customers in a line chart."
        ]
    },
    "918": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT order_date , COUNT(order_date) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\" GROUP BY customer_name",
                "binning": "BIN order_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT order_date , COUNT(order_date) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\" GROUP BY customer_name BIN order_date BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "order_date",
            "y_name": "COUNT(order_date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    1,
                    0,
                    0,
                    1,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                ]
            ],
            "classify": [
                "Clifford Pagac",
                "Kitty Padberg III",
                "Prof. Alexzander Hamill",
                "Prof. Reyes Berge II"
            ],
            "describe": "GROUP BY customer_name, BIN order_date BY WEEKDAY"
        },
        "nl_queries": [
            "Find the number of orders in each weekday and bin the number of orders by customers in a line chart."
        ]
    },
    "919": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name",
                "binning": "BIN active_from_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name BIN active_from_date BY YEAR"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "active_from_date",
            "y_name": "COUNT(active_from_date)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    5,
                    1
                ],
                [
                    6,
                    2
                ]
            ],
            "classify": [
                "Devin Mills",
                "Tillman Ernser"
            ],
            "describe": "GROUP BY customer_name, BIN active_from_date BY YEAR"
        },
        "nl_queries": [
            "Find the number of customers that use email as the contact channel and group by customer name and bin active date by year in a stacked bar chart.",
            "How many customers using email as the contact channel? Group by customer name and bin active date by year in a stacked bar chart."
        ]
    },
    "920": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email'",
                "binning": "BIN active_from_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' BIN active_from_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "active_from_date",
            "y_name": "COUNT(active_from_date)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN active_from_date BY YEAR"
        },
        "nl_queries": [
            "Find the number of customers that use email as the contact channel for each year. Visualize with a bar chart.",
            "Return a bar chart showing how many customers whose contact channel code is email for each year."
        ]
    },
    "921": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name",
                "binning": "BIN active_from_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name BIN active_from_date BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "active_from_date",
            "y_name": "COUNT(active_from_date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    2,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0
                ]
            ],
            "classify": [
                "Devin Mills",
                "Tillman Ernser"
            ],
            "describe": "GROUP BY customer_name, BIN active_from_date BY WEEKDAY"
        },
        "nl_queries": [
            "Find the number of customers that use email as the contact channel and group by customer name and bin active date by weekday in a stacked bar chart.",
            "How many customers using email as the contact channel? Group by customer name and bin active date by weekday in a stacked bar chart."
        ]
    },
    "922": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email'",
                "binning": "BIN active_from_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' BIN active_from_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "active_from_date",
            "y_name": "COUNT(active_from_date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    2,
                    2,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN active_from_date BY WEEKDAY"
        },
        "nl_queries": [
            "Find the number of customers that use email as the contact channel for each weekday. Visualize with a bar chart.",
            "Return a bar chart showing how many customers whose contact channel code is email for each weekday."
        ]
    },
    "923": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20",
                "binning": "BIN date_became_customer BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20 BIN date_became_customer BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_became_customer",
            "y_name": "COUNT(date_became_customer)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN date_became_customer BY MONTH"
        },
        "nl_queries": [
            "Find the number of the \"date became customers\" of the customers whose ID is between 10 and 20.",
            "What are the number of the dates when customers with ids between 10 and 20 became customers?",
            "A bar chart for what are the number of the dates when customers with ids between 10 and 20 became customers?",
            "What are the dates when customers with ids between 10 and 20 became customers, and count them by a bar chart",
            "Find the \"date became customers\" of the customers whose ID is between 10 and 20, and count them by a bar chart",
            "A bar chart for finding the number of the \"date became customers\" of the customers whose ID is between 10 and 20."
        ]
    },
    "924": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20",
                "binning": "BIN date_became_customer BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20 BIN date_became_customer BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_became_customer",
            "y_name": "COUNT(date_became_customer)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    3,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_became_customer BY WEEKDAY"
        },
        "nl_queries": [
            "Find the number of the \"date became customers\" of the customers whose ID is between 10 and 20.",
            "What are the number of the dates when customers with ids between 10 and 20 became customers?",
            "A bar chart for what are the number of the dates when customers with ids between 10 and 20 became customers?",
            "What are the dates when customers with ids between 10 and 20 became customers, and count them by a bar chart",
            "Find the \"date became customers\" of the customers whose ID is between 10 and 20, and count them by a bar chart",
            "A bar chart for finding the number of the \"date became customers\" of the customers whose ID is between 10 and 20."
        ]
    },
    "925": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT gender , count(*) FROM Customers GROUP BY gender",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT gender , count(*) FROM Customers GROUP BY gender"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "gender",
            "y_name": "count(*)",
            "x_data": [
                [
                    0,
                    1
                ]
            ],
            "y_data": [
                [
                    9,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the number of customers for each gender in a scatter chart",
            "Show the number of customers for each gender. Show scatter chart.",
            "Return a scatter on how many customers are there of each gender?",
            "Display a scatter chart for how many customers are there of each gender?",
            "How many customers are there of each gender. Visualize by scatter chart.",
            "Scatter plot to show gender on x axis and the total number on y axis."
        ]
    },
    "926": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "other_account_details",
            "y_name": "COUNT(other_account_details)",
            "x_data": [
                [
                    "Regular",
                    "VIP"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": "GROUP BY other_account_details"
        },
        "nl_queries": [
            "Show the number of accounts in a bar chart that groups by other account details.",
            "How many accounts for different account details? Draw a bar chart.",
            "Bar chart x axis other account details y axis how many other account details"
        ]
    },
    "927": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details",
                "binning": "BIN date_account_opened BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details BIN date_account_opened BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    1,
                    0,
                    3,
                    2,
                    0
                ],
                [
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    2
                ]
            ],
            "classify": [
                "Regular",
                "VIP"
            ],
            "describe": "GROUP BY other_account_details, BIN date_account_opened BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of accounts opened in each day. Bin the account open day by weekday and group by other account details in a stacked bar chart.",
            "How many accounts are opened in each day? Bin the account open day by weekday and group by other account details in a stacked bar chart.",
            "Stacked bar chart of the number of date account opened for with each other_account_details in each date account opened"
        ]
    },
    "932": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts",
                "binning": "BIN date_account_opened BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts BIN date_account_opened BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    5,
                    2,
                    1,
                    0,
                    3,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_account_opened BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of accounts opened in each day. Bin the account open day by weekday in a bar chart.",
            "How many accounts are opened in each day? Bin the account open day by weekday in a bar chart.",
            "Show the number of date account opened from each date account opened"
        ]
    },
    "934": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT account_id , account_name FROM Accounts GROUP BY other_account_details",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT account_id , account_name FROM Accounts GROUP BY other_account_details"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "account_id",
            "y_name": "account_name",
            "x_data": [
                [
                    1,
                    3,
                    5,
                    6,
                    8,
                    9,
                    12,
                    13
                ],
                [
                    2,
                    4,
                    7,
                    10,
                    11,
                    14,
                    15
                ]
            ],
            "y_data": [
                [
                    900,
                    323,
                    935,
                    371,
                    710,
                    337,
                    601,
                    272
                ],
                [
                    520,
                    390,
                    398,
                    429,
                    191,
                    861,
                    662
                ]
            ],
            "classify": [
                "Regular",
                "VIP"
            ],
            "describe": "GROUP BY other_account_details"
        },
        "nl_queries": [
            "Show the relationship between account id and name for all accounts in a scatter chart.",
            "What is the relationship between account id and name for all account? Return a scatter chart.",
            "Scatterplot of account_name vs account id by other_account_details"
        ]
    },
    "939": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "pie",
            "x_name": "other_account_details",
            "y_name": "COUNT(other_account_details)",
            "x_data": [
                [
                    "Regular",
                    "VIP"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": "GROUP BY other_account_details"
        },
        "nl_queries": [
            "Show the number of accounts in a pie chart that groups by other account details.",
            "How many accounts for different account details? Draw a pie chart.",
            "Give me a pie to show how many other account details from different other account details."
        ]
    },
    "942": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details",
                "binning": "BIN date_account_opened BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details BIN date_account_opened BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    4,
                    1,
                    3,
                    0,
                    5,
                    3,
                    3,
                    1
                ],
                [
                    2,
                    2,
                    4,
                    2,
                    4,
                    0,
                    6,
                    4,
                    4,
                    2
                ]
            ],
            "classify": [
                "Regular",
                "VIP"
            ],
            "describe": "GROUP BY other_account_details, BIN date_account_opened BY YEAR"
        },
        "nl_queries": [
            "Show the number of accounts opened in each year for all accounts and group by other account details in a group line chart.",
            "How many accounts are opened in each year? Show a group line chart that group by other account details.",
            "Give me line charts of worldwide gross how many date account opened over year date account opened by major genres other_account_details"
        ]
    },
    "953": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts",
                "binning": "BIN date_account_opened BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts BIN date_account_opened BY YEAR"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    2,
                    0,
                    3,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_account_opened BY YEAR"
        },
        "nl_queries": [
            "Show the number of accounts opened in each year for all accounts in a line chart.",
            "How many accounts are opened in each year? Show a line chart.",
            "I want to see trend of how many date account opened by date account opened"
        ]
    },
    "956": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT account_id , account_name FROM Accounts",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT account_id , account_name FROM Accounts"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "account_id",
            "y_name": "account_name",
            "x_data": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15
                ]
            ],
            "y_data": [
                [
                    900,
                    520,
                    323,
                    390,
                    935,
                    371,
                    398,
                    710,
                    337,
                    429,
                    191,
                    601,
                    272,
                    861,
                    662
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between account id and name for all accounts in a scatter chart.",
            "What is the relationship between account id and name for all accounts? Return a scatter chart.",
            "Show me a scatter plot of account id and account_name for ."
        ]
    },
    "958": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT count(*) , customer_id FROM Accounts GROUP BY customer_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT count(*) , customer_id FROM Accounts GROUP BY customer_id"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "count(*)",
            "y_name": "customer_id",
            "x_data": [
                [
                    1,
                    1,
                    4,
                    1,
                    1,
                    4,
                    3
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    8,
                    9,
                    12,
                    13,
                    15
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "A scatter chart about how many accounts does each customer have? List the number and customer id.",
            "plot scatter on how many accounts does each customer have? List the number and customer id.",
            "How many accounts does each customer have? List the number and customer id with a scatter chart.",
            "How many accounts does each customer have? List the number and customer id. Show scatter chart.",
            "Count the number of accounts corresponding to each customer id in a scatter chart",
            "Count the number of accounts corresponding to each customer id. Plot them as scatter chart.",
            "Show me a scatter plot of count(*) and customer_id for ."
        ]
    },
    "959": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "pie",
            "x_name": "customer_first_name",
            "y_name": "customer_id",
            "x_data": [
                [
                    "Meaghan",
                    "Kieran",
                    "Ruby"
                ]
            ],
            "y_data": [
                [
                    8,
                    13,
                    15
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show first name and id for all customers with at least 2 accounts in a pie chart.",
            "Show first name and id for all customers with at least 2 accounts. Plot them as pie chart.",
            "Draw a pie chart for what are the first names and ids for customers who have two or more accounts?",
            "Display a pie chart for what are the first names and ids for customers who have two or more accounts?",
            "What are the first names and ids for customers who have two or more accounts. Visualize by pie chart."
        ]
    },
    "960": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_first_name",
            "y_name": "customer_id",
            "x_data": [
                [
                    "Meaghan",
                    "Kieran",
                    "Ruby"
                ]
            ],
            "y_data": [
                [
                    8,
                    13,
                    15
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show first name and id for all customers with at least 2 accounts in a bar chart.",
            "Show first name and id for all customers with at least 2 accounts. Show bar chart.",
            "Return a histogram on what are the first names and ids for customers who have two or more accounts?",
            "Visualize a bar chart for what are the first names and ids for customers who have two or more accounts?",
            "What are the first names and ids for customers who have two or more accounts. "
        ]
    },
    "961": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "sum(T1.product_quantity)",
            "x_data": [
                [
                    "Arts",
                    "Beer Menus",
                    "Chocolate",
                    "Fans",
                    "Hard Drive",
                    "Harry Potter 2",
                    "Harry Potter 3",
                    "Harry Potter 4",
                    "Learning English",
                    "TV"
                ]
            ],
            "y_data": [
                [
                    5,
                    2,
                    1,
                    9,
                    10,
                    8,
                    15,
                    3,
                    5,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all product names and the total quantity ordered for each product name in a bar chart.",
            "Show all product names and the total quantity ordered for each product name. ",
            "Draw a bar chart for what are the different product names, and what is the sum of quantity ordered for each product?",
            "A bar chart about what are the different product names, and what is the sum of quantity ordered for each product?",
            "What are the different product names, and what is the sum of quantity ordered for each product. Visualize by bar chart."
        ]
    },
    "962": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT order_id , count(DISTINCT product_id) FROM Order_items",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "order_id",
            "y_name": "count(DISTINCT product_id)",
            "x_data": [
                [
                    1,
                    2,
                    4,
                    10,
                    12,
                    13,
                    14,
                    15
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    3,
                    1,
                    1,
                    3,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show order ids and the number of products in each order by a scatter chart.",
            "Show order ids and the number of products in each order. Plot them as scatter chart.",
            "Visualize a scatter chart on how many different products correspond to each order id?",
            "Scatter. how many different products correspond to each order id?",
            "How many different products correspond to each order id. Plot them as scatter chart."
        ]
    },
    "963": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT order_id , count(*) FROM Invoices GROUP BY order_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT order_id , count(*) FROM Invoices GROUP BY order_id"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "order_id",
            "y_name": "count(*)",
            "x_data": [
                [
                    3,
                    4,
                    5,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    1,
                    1,
                    3,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the order ids and the number of invoices for each order with a scatter chart.",
            "Show the order ids and the number of invoices for each order. ",
            " how many invoices correspond to each order id?",
            "Draw a scatter chart for how many invoices correspond to each order id?",
            "How many invoices correspond to each order id. ",
            "Plot a scatter chart, order id by the total number ."
        ]
    },
    "964": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT invoice_number , count(*) FROM Financial_transactions GROUP BY invoice_number",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT invoice_number , count(*) FROM Financial_transactions GROUP BY invoice_number"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "invoice_number",
            "y_name": "count(*)",
            "x_data": [
                [
                    1,
                    2,
                    3,
                    5,
                    6,
                    12,
                    13,
                    14,
                    15
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    4,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the invoice number and the number of transactions for each invoice in a scatter chart",
            "Show the invoice number and the number of transactions for each invoice. Show the correlation.",
            "Draw a scatter chart for how many transactions correspond to each invoice number?",
            "Scatter chart. how many transactions correspond to each invoice number?",
            "How many transactions correspond to each invoice number. Plot them as scatter chart.",
            "Plot a scatter chart, invoice number by the total number ."
        ]
    },
    "965": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T3.order_id = T1.order_id GROUP BY T2.product_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T3.order_id = T1.order_id GROUP BY T2.product_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Arts",
                    "Beer Menus",
                    "Chocolate",
                    "Fans",
                    "Hard Drive",
                    "Harry Potter 2",
                    "Harry Potter 3",
                    "Harry Potter 4",
                    "Learning English",
                    "TV"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    4,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all product names and the number of customers having an order on each product with a bar chart.",
            "Show all product names and the number of customers having an order on each product. Plot them as bar chart.",
            "Give me a histogram for what are teh names of the different products, as well as the number of customers who have ordered each product.",
            "what are teh names of the different products, as well as the number of customers who have ordered each product.",
            "What are teh names of the different products, as well as the number of customers who have ordered each product. Visualize by bar chart."
        ]
    },
    "966": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT product_id , count(DISTINCT order_id) FROM Order_items",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "product_id",
            "y_name": "count(DISTINCT order_id)",
            "x_data": [
                [
                    3,
                    4,
                    5,
                    7,
                    9,
                    10,
                    12,
                    13,
                    14,
                    15
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the product ids and the number of unique orders containing each product by a scatter chart.",
            "Show the product ids and the number of unique orders containing each product. Plot them as scatter chart.",
            "Return a scatter chart on how many distinct order ids correspond to each product?",
            "Show me the correlation about how many distinct order ids correspond to each product?",
            "How many distinct order ids correspond to each product. Plot them as scatter chart."
        ]
    },
    "967": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT order_id , count(*) FROM Order_items GROUP BY order_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT order_id , count(*) FROM Order_items GROUP BY order_id"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "order_id",
            "y_name": "count(*)",
            "x_data": [
                [
                    1,
                    2,
                    4,
                    10,
                    12,
                    13,
                    14,
                    15
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    3,
                    1,
                    1,
                    4,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the order ids and the number of items in each order with a scatter chart.",
            "Show the order ids and the number of items in each order. ",
            "plot scatter on how many order items correspond to each order id?",
            "Return a scatter on how many order items correspond to each order id?",
            "How many order items correspond to each order id. Plot them as scatter chart.",
            "Scatter plot to show order id on x axis and the total number on y axis."
        ]
    },
    "968": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT account_name , count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT account_name , count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "account_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    390,
                    371,
                    710,
                    337,
                    191,
                    601,
                    272,
                    861
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    1,
                    4,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between account name and the number of transactions for each account in a scatter chart.",
            "What is the relationship between account name and the number of transactions for each account? Return a scatter chart."
        ]
    },
    "969": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT account_name , T1.account_id FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT account_name , T1.account_id FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "account_name",
            "y_name": "account_id",
            "x_data": [
                [
                    390,
                    371,
                    710,
                    337,
                    191,
                    601,
                    272,
                    861
                ]
            ],
            "y_data": [
                [
                    4,
                    6,
                    8,
                    9,
                    11,
                    12,
                    13,
                    14
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between account id and name for each account in a scatter chart.",
            "What is the relationship between account name and id for each account? Return a scatter chart."
        ]
    },
    "970": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.account_id , count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.account_id , count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "account_id",
            "y_name": "count(*)",
            "x_data": [
                [
                    4,
                    6,
                    8,
                    9,
                    11,
                    12,
                    13,
                    14
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    1,
                    4,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between account id and the number of transactions for each account in a scatter chart.",
            "What is the relationship between account id and the number of transactions for each account? Return a scatter chart."
        ]
    },
    "971": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "pie",
            "x_name": "transaction_type",
            "y_name": "sum(transaction_amount)",
            "x_data": [
                [
                    "Payment",
                    "Refund"
                ]
            ],
            "y_data": [
                [
                    8743.15,
                    11192.69
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the transaction types and the total amount of transactions with a pie chart.",
            "Show the transaction types and the total amount of transactions. ",
            "Give the proportion of what are total transaction amounts for each transaction type?",
            "what are total transaction amounts for each transaction type?",
            "What are total transaction amounts for each transaction type. Show a pie chart.",
            "Create a pie chart showing total number of transaction amount across transaction type."
        ]
    },
    "972": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "transaction_type",
            "y_name": "sum(transaction_amount)",
            "x_data": [
                [
                    "Payment",
                    "Refund"
                ]
            ],
            "y_data": [
                [
                    8743.15,
                    11192.69
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the transaction types and the total amount of transactions with a bar chart.",
            "Show the transaction types and the total amount of transactions. ",
            "Visualize a bar chart for what are total transaction amounts for each transaction type?",
            "what are total transaction amounts for each transaction type?",
            "What are total transaction amounts for each transaction type. ",
            "Show sum transaction amount from each transaction type"
        ]
    },
    "975": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'",
                "binning": "BIN date_account_opened BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan' BIN date_account_opened BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    2,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_account_opened BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of accounts for all accounts by the customer with first name 'Meaghan' opened in each day. Bin the account open day by weekday in a bar chart.",
            "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by weekday in a bar chart."
        ]
    },
    "982": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'",
                "binning": "BIN date_account_opened BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan' BIN date_account_opened BY YEAR"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    1,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_account_opened BY YEAR"
        },
        "nl_queries": [
            "Show the number of accounts for all accounts by the customer with first name 'Meaghan' opened in each day. Bin the account open day by year interval in a bar chart.",
            "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by year interval in a bar chart."
        ]
    },
    "983": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT account_id , account_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT account_id , account_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "account_id",
            "y_name": "account_name",
            "x_data": [
                [
                    1,
                    3,
                    9,
                    12
                ]
            ],
            "y_data": [
                [
                    900,
                    323,
                    337,
                    601
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between accout id and account name for all accounts by the customer with first name 'Meaghan' in a scatter chart.",
            "What is the relationship between accout id and account name for all accounts by the customer with first name 'Meaghan'? Return a scatter chart."
        ]
    },
    "986": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.customer_id , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.customer_id , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "customer_id",
            "y_name": "count(*)",
            "x_data": [
                [
                    3,
                    6,
                    8,
                    9,
                    12,
                    13,
                    15
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    4,
                    1,
                    1,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between number of accounts and customer id in a scatter chart.",
            "What is the relationship between number of accounts and customer id? Show me a scatter chart."
        ]
    },
    "988": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_first_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Joesph",
                    "Vesta",
                    "Meaghan",
                    "Abbey",
                    "Jensen",
                    "Kieran",
                    "Ruby"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    4,
                    1,
                    1,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the number of accounts for each customer in a bar chart grouping by customer's first name.",
            "How many accounts for each customer? Show a bar chart that groups by customer's first name."
        ]
    },
    "990": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_last_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Schaefer",
                    "Leuschke",
                    "Keeling",
                    "Ruecker",
                    "Muller",
                    "Auer",
                    "Boyle"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    4,
                    1,
                    1,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the number of accounts for each customer in a bar chart grouping by customer's last name.",
            "How many accounts for each customer? Show a bar chart that groups by customer's last name."
        ]
    },
    "991": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT order_id , sum(product_quantity) FROM Order_items GROUP BY order_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT order_id , sum(product_quantity) FROM Order_items GROUP BY order_id"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "order_id",
            "y_name": "sum(product_quantity)",
            "x_data": [
                [
                    1,
                    2,
                    4,
                    10,
                    12,
                    13,
                    14,
                    15
                ]
            ],
            "y_data": [
                [
                    12,
                    3,
                    17,
                    4,
                    1,
                    18,
                    1,
                    9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show order ids and the total quantity in each order by a scatter chart.",
            "Show order ids and the total quantity in each order. Visualize by scatter chart.",
            "Give the order ids for all orders, as well as the total product quantity in each in a scatter chart",
            "Give the order ids for all orders, as well as the total product quantity in each. ",
            "Show me a scatter plot of order id and total number of product quantity for ."
        ]
    },
    "1084": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM member GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM member GROUP BY Country"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Canada",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "How many members are there in each country? Visualize in a pie chart.",
            "Give me a pie to show how many country from different country."
        ]
    },
    "1085": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM member GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM member GROUP BY Country"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Canada",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "A bar chart showing the number of members in each country.",
            "Plot how many country by grouped by country as a bar graph"
        ]
    },
    "1086": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT College_Location , COUNT(College_Location) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY College_Location ORDER BY T2.Name ASC",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT College_Location , COUNT(College_Location) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY College_Location ORDER BY T2.Name ASC"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "pie",
            "x_name": "College_Location",
            "y_name": "COUNT(College_Location)",
            "x_data": [
                [
                    "McGill",
                    "Minnesota",
                    "Ottawa",
                    "St. Francis Xavier",
                    "Western Ontario"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY College_Location"
        },
        "nl_queries": [
            "Return a pie chart showing how many members have visited for each college location."
        ]
    },
    "1087": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT College_Location , COUNT(College_Location) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY College_Location",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT College_Location , COUNT(College_Location) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY College_Location"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "College_Location",
            "y_name": "COUNT(College_Location)",
            "x_data": [
                [
                    "McGill",
                    "Minnesota",
                    "Ottawa",
                    "St. Francis Xavier",
                    "Western Ontario"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY College_Location"
        },
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college location."
        ]
    },
    "1088": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY T1.Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.Name , COUNT(T1.Name) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY T1.Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "B.C. School",
                    "Calgary School",
                    "Edmonton School",
                    "Saskatchewan School",
                    "Toronto School"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Return a pie chart showing how many members have visited for each college."
        ]
    },
    "1089": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY T1.Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Name , COUNT(T1.Name) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY T1.Name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "B.C. School",
                    "Calgary School",
                    "Edmonton School",
                    "Saskatchewan School",
                    "Toronto School"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college."
        ]
    },
    "1090": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM member GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Country , COUNT(*) FROM member GROUP BY Country"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Canada",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the different countries and the number of members from each by a pie chart.",
            "Visualize a pie chart about the different countries and the number of members from each.",
            "I want to know the proportion of the number of members for each country."
        ]
    },
    "1091": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM member GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM member GROUP BY Country"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Canada",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the different countries and the number of members from each with a bar chart.",
            "Show the different countries and the number of members from each. Visualize by bar chart.",
            "Plot the total number by grouped by country as a bar graph"
        ]
    },
    "1145": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Carrier , COUNT(Carrier) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Carrier",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Carrier , COUNT(Carrier) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Carrier"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "device",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Carrier",
            "y_name": "COUNT(Carrier)",
            "x_data": [
                [
                    "Bell Mobility",
                    "Vodafone AU"
                ]
            ],
            "y_data": [
                [
                    3,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Carrier"
        },
        "nl_queries": [
            "Show how many shops in each carrier with a pie chart."
        ]
    },
    "1146": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Carrier , COUNT(Carrier) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Carrier",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Carrier"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Carrier",
            "y_name": "COUNT(Carrier)",
            "x_data": [
                [
                    "Bell Mobility",
                    "Vodafone AU"
                ]
            ],
            "y_data": [
                [
                    3,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Carrier"
        },
        "nl_queries": [
            "Give a bar chart showing how many shops in each carrier.",
            "What are the names of device shops, and what are the carriers that they carry devices in stock for?"
        ]
    },
    "1147": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Shop_Name , COUNT(Shop_Name) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Shop_Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Shop_Name , COUNT(Shop_Name) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Shop_Name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Shop_Name",
            "y_name": "COUNT(Shop_Name)",
            "x_data": [
                [
                    "ATnT",
                    "Apple",
                    "Best Buy",
                    "Dinas Device",
                    "Ferndale",
                    "Gelli repair"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Shop_Name"
        },
        "nl_queries": [
            "Show how many carrriers for each shops in a bar chart."
        ]
    },
    "1148": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "device",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Software_Platform",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Android",
                    "iOS"
                ]
            ],
            "y_data": [
                [
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "A pie chart about what are the different software platforms for devices, and how many devices have each?",
            "Show me the proportion on what are the different software platforms for devices, and how many devices have each?",
            "What are the different software platforms for devices, and how many devices have each. ",
            "Give me a pie to show the total number from different software platform."
        ]
    },
    "1149": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Software_Platform",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Android",
                    "iOS"
                ]
            ],
            "y_data": [
                [
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "A bar chart about what are the different software platforms for devices, and how many devices have each?",
            "what are the different software platforms for devices, and how many devices have each?",
            "What are the different software platforms for devices, and how many devices have each. ",
            "Bar chart x axis software platform y axis the total number "
        ]
    },
    "1150": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM shop GROUP BY Location",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM shop GROUP BY Location"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Blaenllecha",
                    "Cymmer",
                    "Dinas",
                    "Gelli",
                    "Maerdy",
                    "Pentre",
                    "Penygraig",
                    "Porth",
                    "Wattstown"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "Return a bar chart showing how many shops in each location.",
            "Create a bar chart showing how many location across location"
        ]
    },
    "1323": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(*) FROM representative GROUP BY Party",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Party , COUNT(*) FROM representative GROUP BY Party"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Party",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Democratic",
                    "Republican"
                ]
            ],
            "y_data": [
                [
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Pie. what are the different parties of representative? Show the party name and the number of representatives in each party.",
            "Return a pie on what are the different parties of representative? Show the party name and the number of representatives in each party.",
            "What are the different parties of representative? Show the party name and the number of representatives in each party. Plot them as pie chart.",
            "Compute the total the total number across party as a pie chart."
        ]
    },
    "1324": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(*) FROM representative GROUP BY Party",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party , COUNT(*) FROM representative GROUP BY Party"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Democratic",
                    "Republican"
                ]
            ],
            "y_data": [
                [
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a histogram for what are the different parties of representative? Show the party name and the number of representatives in each party.",
            "What are the different parties of representative? Show the party name and the number of representatives in each party. ",
            "Bar chart of the total number from each party"
        ]
    },
    "1325": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Date , Vote_Percent FROM election",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Date , Vote_Percent FROM election"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Date",
            "y_name": "Vote_Percent",
            "x_data": [
                [
                    "July 1942",
                    "October 1942",
                    "1946",
                    "1949",
                    "1953"
                ]
            ],
            "y_data": [
                [
                    16.2,
                    18.5,
                    19.5,
                    19.5,
                    16
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the dates and vote percents of elections by a pie chart.",
            "List the dates and vote percents of elections. Plot them as pie chart.",
            "Give me a pie to show vote_percent from different date."
        ]
    },
    "1326": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date , Vote_Percent FROM election",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date , Vote_Percent FROM election"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Vote_Percent",
            "x_data": [
                [
                    "July 1942",
                    "October 1942",
                    "1946",
                    "1949",
                    "1953"
                ]
            ],
            "y_data": [
                [
                    16.2,
                    18.5,
                    19.5,
                    19.5,
                    16
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the dates and vote percents of elections in a bar chart.",
            "List the dates and vote percents of elections. Show bar chart.",
            "Show vote_percent from each date"
        ]
    },
    "1327": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(Party) FROM representative GROUP BY Party",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Party , COUNT(Party) FROM representative GROUP BY Party"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Party",
            "y_name": "COUNT(Party)",
            "x_data": [
                [
                    "Democratic",
                    "Republican"
                ]
            ],
            "y_data": [
                [
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Party"
        },
        "nl_queries": [
            "How many representatives in each party? Visualize with a pie chart.",
            "Create a pie chart showing the number of party across party."
        ]
    },
    "1328": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(Party) FROM representative GROUP BY Party",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party , COUNT(Party) FROM representative GROUP BY Party"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "COUNT(Party)",
            "x_data": [
                [
                    "Democratic",
                    "Republican"
                ]
            ],
            "y_data": [
                [
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Party"
        },
        "nl_queries": [
            "A bar chart showing how many representatives in each party.",
            "Plot how many party by grouped by party as a bar graph"
        ]
    },
    "1434": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Honda",
                    "Toyota"
                ]
            ],
            "y_data": [
                [
                    45,
                    95
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "A pie chart for finding the number of the names of Japanese constructors that have once earned more than 5 points?",
            "A pie chart for what are the number of the names of all the Japanese constructors that have earned more than 5 points?",
            "Find the number of the names of Japanese constructors that have once earned more than 5 points?",
            "What are the number of the names of all the Japanese constructors that have earned more than 5 points?",
            "What are the names of all the Japanese constructors that have earned more than 5 points, and count them by a pie chart",
            "Find the names of Japanese constructors that have once earned more than 5 points, and count them by a pie chart"
        ]
    },
    "1435": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Honda",
                    "Toyota"
                ]
            ],
            "y_data": [
                [
                    45,
                    95
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "Find the number of the names of Japanese constructors that have once earned more than 5 points?",
            "What are the names of all the Japanese constructors that have earned more than 5 points, and count them by a bar chart",
            "A bar chart for what are the number of the names of all the Japanese constructors that have earned more than 5 points?",
            "A bar chart for finding the number of the names of Japanese constructors that have once earned more than 5 points?",
            "What are the number of the names of all the Japanese constructors that have earned more than 5 points?",
            "Find the names of Japanese constructors that have once earned more than 5 points, and count them by a bar chart"
        ]
    },
    "1436": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT location , circuitId FROM circuits WHERE country = \"France\" OR country = \"Belgium\"",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT location , circuitId FROM circuits WHERE country = \"France\" OR country = \"Belgium\""
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "location",
            "y_name": "circuitId",
            "x_data": [
                [
                    "Magny Cours",
                    "Spa",
                    "Le Castellet",
                    "Heusden-Zolder",
                    "Dijon",
                    "Brussels",
                    "Clermont-Ferrand",
                    "Rouen",
                    "Le Mans",
                    "Reims"
                ]
            ],
            "y_data": [
                [
                    8,
                    13,
                    34,
                    40,
                    41,
                    50,
                    51,
                    53,
                    54,
                    55
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the id and location of circuits that belong to France or Belgium. Plot them as bar chart.",
            "Visualize a bar chart for what are the ids and locations of all circuits in France or Belgium?",
            "Display a bar chart for what are the ids and locations of all circuits in France or Belgium?",
            "What are the ids and locations of all circuits in France or Belgium. Show bar chart."
        ]
    },
    "1437": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2016-01-01",
                    "2017-01-01"
                ]
            ],
            "y_data": [
                [
                    2,
                    20
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart.",
            "Show me a bar chart about the number of races held in each year after 2014."
        ]
    },
    "1438": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 BIN year BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    2,
                    20
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart.",
            "Show me a bar chart about the number of races held in each year after 2014."
        ]
    },
    "1447": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\" GROUP BY year",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\" GROUP BY year"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2007-01-01",
                    "2008-01-01",
                    "2009-01-01",
                    "2010-01-01",
                    "2011-01-01",
                    "2012-01-01",
                    "2013-01-01",
                    "2014-01-01",
                    "2015-01-01",
                    "2016-01-01",
                    "2017-01-01"
                ]
            ],
            "y_data": [
                [
                    17,
                    18,
                    17,
                    19,
                    19,
                    20,
                    19,
                    19,
                    19,
                    21,
                    20
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart.",
            "How many races that had any driver whose forename is Lewis? Show me a line chart."
        ]
    },
    "1448": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\" BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    17,
                    18,
                    17,
                    19,
                    19,
                    20,
                    19,
                    19,
                    19,
                    21,
                    20
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart.",
            "How many races that had any driver whose forename is Lewis? Show me a line chart."
        ]
    },
    "1449": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.driverId , count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.driverId , count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "driverId",
            "y_name": "count(*)",
            "x_data": [
                [
                    7,
                    12,
                    19,
                    26,
                    28,
                    29,
                    34,
                    36,
                    38,
                    40,
                    42,
                    43,
                    45,
                    46,
                    47,
                    51,
                    52,
                    53,
                    54,
                    58,
                    59,
                    60,
                    61,
                    62,
                    66,
                    72,
                    73,
                    74,
                    76,
                    80,
                    82,
                    85,
                    86,
                    89,
                    93,
                    96,
                    97,
                    98,
                    101,
                    106,
                    107,
                    108,
                    111,
                    113,
                    115,
                    116,
                    120,
                    121,
                    124,
                    125,
                    126,
                    128,
                    130,
                    132,
                    134,
                    135,
                    141,
                    142,
                    143,
                    144,
                    147,
                    148,
                    149,
                    150,
                    151,
                    161,
                    162,
                    164,
                    165,
                    167,
                    168,
                    169,
                    171,
                    174,
                    179,
                    180,
                    183,
                    185,
                    186,
                    188,
                    189,
                    190,
                    191,
                    193,
                    195,
                    196,
                    198,
                    201,
                    204,
                    208,
                    209,
                    210,
                    213,
                    214,
                    215,
                    216,
                    217,
                    218,
                    220,
                    225,
                    226,
                    227,
                    228,
                    229,
                    234,
                    236,
                    237,
                    240,
                    241,
                    242,
                    244,
                    245,
                    246,
                    247,
                    248,
                    249,
                    251,
                    253,
                    254,
                    256,
                    257,
                    258,
                    259,
                    260,
                    261,
                    263,
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    279,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298,
                    299,
                    300,
                    301,
                    302,
                    303,
                    308,
                    310,
                    311,
                    312,
                    313,
                    315,
                    316,
                    317,
                    318,
                    319,
                    320,
                    321,
                    322,
                    323,
                    324,
                    325,
                    326,
                    329,
                    330,
                    331,
                    332,
                    334,
                    335,
                    336,
                    337,
                    338,
                    339,
                    340,
                    342,
                    343,
                    344,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    357,
                    359,
                    361,
                    362,
                    363,
                    365,
                    366,
                    367,
                    368,
                    369,
                    370,
                    371,
                    372,
                    375,
                    376,
                    377,
                    378,
                    379,
                    380,
                    381,
                    382,
                    383,
                    384,
                    387,
                    388,
                    389,
                    390,
                    391,
                    392,
                    393,
                    394,
                    395,
                    396,
                    397,
                    398,
                    399,
                    400,
                    401,
                    402,
                    405,
                    406,
                    407,
                    408,
                    409,
                    410,
                    411,
                    412,
                    413,
                    414,
                    415,
                    416,
                    417,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    428,
                    429,
                    431,
                    432,
                    433,
                    434,
                    435,
                    436,
                    437,
                    438,
                    439,
                    440,
                    441,
                    442,
                    443,
                    444,
                    445,
                    446,
                    447,
                    448,
                    449,
                    450,
                    451,
                    452,
                    453,
                    454,
                    455,
                    457,
                    458,
                    459,
                    460,
                    461,
                    462,
                    463,
                    464,
                    465,
                    466,
                    467,
                    468,
                    469,
                    470,
                    471,
                    472,
                    473,
                    474,
                    476,
                    477,
                    478,
                    480,
                    481,
                    482,
                    483,
                    484,
                    485,
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    580,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606,
                    607,
                    608,
                    609,
                    610,
                    611,
                    612,
                    613,
                    614,
                    615,
                    616,
                    617,
                    618,
                    619,
                    620,
                    621,
                    622,
                    623,
                    624,
                    625,
                    626,
                    628,
                    629,
                    630,
                    631,
                    632,
                    634,
                    635,
                    636,
                    637,
                    638,
                    639,
                    640,
                    641,
                    643,
                    644,
                    645,
                    646,
                    648,
                    649,
                    650,
                    651,
                    652,
                    653,
                    654,
                    655,
                    656,
                    657,
                    658,
                    659,
                    660,
                    661,
                    662,
                    663,
                    664,
                    665,
                    666,
                    667,
                    668,
                    669,
                    670,
                    671,
                    672,
                    673,
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729,
                    730,
                    731,
                    732,
                    733,
                    734,
                    735,
                    736,
                    737,
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801,
                    802,
                    803,
                    804,
                    805,
                    806,
                    810,
                    812,
                    816,
                    823,
                    827,
                    829,
                    833,
                    834,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843
                ]
            ],
            "y_data": [
                [
                    27,
                    28,
                    24,
                    28,
                    1,
                    21,
                    4,
                    7,
                    11,
                    11,
                    20,
                    28,
                    14,
                    18,
                    20,
                    16,
                    14,
                    5,
                    15,
                    26,
                    29,
                    21,
                    3,
                    16,
                    17,
                    1,
                    30,
                    16,
                    25,
                    1,
                    4,
                    28,
                    10,
                    18,
                    7,
                    11,
                    7,
                    3,
                    30,
                    10,
                    3,
                    27,
                    9,
                    2,
                    3,
                    2,
                    20,
                    13,
                    1,
                    6,
                    2,
                    29,
                    10,
                    3,
                    6,
                    7,
                    20,
                    13,
                    4,
                    2,
                    15,
                    22,
                    14,
                    2,
                    15,
                    10,
                    17,
                    7,
                    21,
                    21,
                    2,
                    12,
                    2,
                    16,
                    28,
                    9,
                    20,
                    22,
                    9,
                    23,
                    8,
                    19,
                    5,
                    15,
                    29,
                    30,
                    3,
                    15,
                    8,
                    14,
                    12,
                    5,
                    17,
                    2,
                    4,
                    13,
                    11,
                    1,
                    2,
                    7,
                    1,
                    2,
                    1,
                    29,
                    3,
                    5,
                    20,
                    6,
                    5,
                    3,
                    3,
                    6,
                    15,
                    5,
                    1,
                    2,
                    20,
                    6,
                    7,
                    15,
                    7,
                    13,
                    11,
                    5,
                    1,
                    2,
                    1,
                    16,
                    1,
                    12,
                    1,
                    4,
                    11,
                    6,
                    1,
                    2,
                    2,
                    17,
                    12,
                    8,
                    1,
                    1,
                    2,
                    8,
                    4,
                    3,
                    1,
                    1,
                    15,
                    1,
                    3,
                    13,
                    10,
                    6,
                    15,
                    2,
                    9,
                    2,
                    2,
                    1,
                    2,
                    1,
                    4,
                    2,
                    4,
                    13,
                    13,
                    2,
                    6,
                    23,
                    1,
                    3,
                    30,
                    14,
                    7,
                    1,
                    3,
                    1,
                    2,
                    29,
                    17,
                    1,
                    12,
                    4,
                    2,
                    1,
                    9,
                    11,
                    9,
                    10,
                    6,
                    3,
                    2,
                    1,
                    1,
                    13,
                    18,
                    13,
                    11,
                    2,
                    1,
                    15,
                    12,
                    29,
                    4,
                    4,
                    3,
                    1,
                    1,
                    6,
                    2,
                    17,
                    2,
                    1,
                    13,
                    19,
                    2,
                    1,
                    2,
                    9,
                    1,
                    8,
                    26,
                    1,
                    7,
                    10,
                    13,
                    2,
                    1,
                    2,
                    1,
                    26,
                    1,
                    9,
                    15,
                    2,
                    5,
                    2,
                    29,
                    3,
                    11,
                    3,
                    2,
                    27,
                    2,
                    3,
                    3,
                    2,
                    3,
                    1,
                    1,
                    1,
                    1,
                    1,
                    7,
                    1,
                    1,
                    5,
                    4,
                    5,
                    1,
                    6,
                    15,
                    7,
                    5,
                    4,
                    6,
                    12,
                    5,
                    26,
                    10,
                    5,
                    12,
                    4,
                    2,
                    1,
                    3,
                    2,
                    2,
                    2,
                    1,
                    12,
                    1,
                    1,
                    1,
                    11,
                    6,
                    13,
                    1,
                    1,
                    9,
                    5,
                    2,
                    3,
                    3,
                    3,
                    7,
                    1,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    28,
                    18,
                    20,
                    4,
                    10,
                    17,
                    15,
                    9,
                    1,
                    13,
                    2,
                    1,
                    2,
                    1,
                    2,
                    1,
                    1,
                    2,
                    1,
                    12,
                    1,
                    29,
                    1,
                    4,
                    7,
                    1,
                    1,
                    4,
                    9,
                    6,
                    4,
                    12,
                    3,
                    2,
                    9,
                    9,
                    5,
                    1,
                    5,
                    2,
                    10,
                    3,
                    9,
                    7,
                    2,
                    3,
                    1,
                    9,
                    9,
                    4,
                    8,
                    13,
                    1,
                    3,
                    4,
                    6,
                    2,
                    2,
                    3,
                    5,
                    5,
                    2,
                    2,
                    15,
                    3,
                    4,
                    1,
                    1,
                    1,
                    18,
                    1,
                    6,
                    1,
                    5,
                    1,
                    2,
                    9,
                    7,
                    1,
                    5,
                    6,
                    3,
                    3,
                    4,
                    4,
                    2,
                    3,
                    9,
                    3,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    26,
                    14,
                    1,
                    7,
                    1,
                    2,
                    9,
                    1,
                    1,
                    17,
                    14,
                    1,
                    6,
                    10,
                    3,
                    2,
                    5,
                    5,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    6,
                    9,
                    17,
                    12,
                    3,
                    9,
                    11,
                    4,
                    1,
                    8,
                    1,
                    1,
                    1,
                    7,
                    10,
                    1,
                    6,
                    2,
                    8,
                    7,
                    29,
                    5,
                    3,
                    4,
                    2,
                    11,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1,
                    23,
                    18,
                    17,
                    9,
                    5,
                    1,
                    12,
                    2,
                    5,
                    15,
                    1,
                    6,
                    5,
                    3,
                    4,
                    5,
                    6,
                    5,
                    25,
                    4,
                    1,
                    16,
                    7,
                    2,
                    3,
                    2,
                    1,
                    19,
                    12,
                    1,
                    2,
                    3,
                    1,
                    4,
                    1,
                    4,
                    1,
                    2,
                    7,
                    2,
                    1,
                    1,
                    1,
                    1,
                    7,
                    12,
                    5,
                    9,
                    2,
                    2,
                    3,
                    3,
                    1,
                    1,
                    1,
                    17,
                    1,
                    3,
                    2,
                    2,
                    5,
                    2,
                    13,
                    2,
                    1,
                    1,
                    5,
                    2,
                    2,
                    1,
                    2,
                    1,
                    1,
                    2,
                    1,
                    4,
                    1,
                    1,
                    2,
                    5,
                    3,
                    7,
                    2,
                    2,
                    3,
                    1,
                    2,
                    3,
                    3,
                    3,
                    3,
                    2,
                    2,
                    3,
                    2,
                    1,
                    4,
                    1,
                    2,
                    12,
                    2,
                    1,
                    2,
                    1,
                    4,
                    4,
                    3,
                    3,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1,
                    1,
                    2,
                    1,
                    1,
                    5,
                    5,
                    3,
                    2,
                    2,
                    1,
                    2,
                    1,
                    2,
                    2,
                    2,
                    6,
                    3,
                    1,
                    2,
                    1,
                    2,
                    1,
                    3,
                    1,
                    1,
                    1,
                    2,
                    2,
                    8,
                    3,
                    1,
                    2,
                    1,
                    1,
                    1,
                    5,
                    1,
                    1,
                    1,
                    2,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    19,
                    11,
                    20,
                    19,
                    1,
                    19,
                    13,
                    5,
                    12,
                    21,
                    29,
                    20,
                    2,
                    5,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the driver id and number of races of all drivers who have at most participated in 30 races. ",
            "For each id of a driver who participated in at most 30 races, how many races did they participate in. Plot them as scatter chart."
        ]
    },
    "1450": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.driverId , count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.driverId , count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "driverId",
            "y_name": "count(*)",
            "x_data": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                    123,
                    125,
                    126,
                    127,
                    128,
                    129,
                    130,
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157,
                    158,
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212,
                    213,
                    214,
                    215,
                    216,
                    217,
                    219,
                    220,
                    221,
                    222,
                    223,
                    224,
                    225,
                    227,
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235,
                    236,
                    237,
                    238,
                    239,
                    240,
                    241,
                    242,
                    243,
                    244,
                    245,
                    246,
                    247,
                    249,
                    250,
                    251,
                    252,
                    253,
                    254,
                    255,
                    256,
                    257,
                    258,
                    259,
                    260,
                    262,
                    263,
                    265,
                    267,
                    269,
                    270,
                    271,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    280,
                    282,
                    283,
                    284,
                    285,
                    288,
                    289,
                    290,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298,
                    299,
                    300,
                    302,
                    304,
                    305,
                    306,
                    307,
                    308,
                    309,
                    310,
                    311,
                    312,
                    313,
                    314,
                    315,
                    316,
                    317,
                    319,
                    320,
                    321,
                    322,
                    324,
                    326,
                    327,
                    328,
                    329,
                    330,
                    332,
                    333,
                    334,
                    335,
                    337,
                    338,
                    339,
                    340,
                    341,
                    342,
                    343,
                    344,
                    345,
                    346,
                    347,
                    350,
                    351,
                    352,
                    353,
                    354,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    368,
                    369,
                    370,
                    371,
                    373,
                    374,
                    375,
                    376,
                    377,
                    379,
                    380,
                    382,
                    383,
                    385,
                    386,
                    387,
                    388,
                    389,
                    390,
                    392,
                    394,
                    396,
                    397,
                    398,
                    399,
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407,
                    408,
                    409,
                    410,
                    411,
                    412,
                    413,
                    418,
                    420,
                    423,
                    424,
                    425,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433,
                    434,
                    435,
                    436,
                    437,
                    438,
                    439,
                    440,
                    441,
                    442,
                    444,
                    445,
                    446,
                    447,
                    449,
                    453,
                    454,
                    455,
                    456,
                    459,
                    460,
                    461,
                    462,
                    463,
                    464,
                    465,
                    467,
                    468,
                    475,
                    476,
                    477,
                    478,
                    479,
                    480,
                    481,
                    482,
                    483,
                    484,
                    486,
                    487,
                    489,
                    491,
                    494,
                    496,
                    498,
                    500,
                    501,
                    502,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    525,
                    526,
                    527,
                    528,
                    529,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    547,
                    549,
                    551,
                    553,
                    554,
                    555,
                    556,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    573,
                    577,
                    578,
                    579,
                    580,
                    581,
                    583,
                    585,
                    586,
                    589,
                    590,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    601,
                    606,
                    607,
                    608,
                    609,
                    610,
                    611,
                    612,
                    613,
                    615,
                    619,
                    620,
                    622,
                    623,
                    624,
                    625,
                    626,
                    627,
                    628,
                    629,
                    630,
                    631,
                    632,
                    633,
                    638,
                    640,
                    641,
                    642,
                    643,
                    644,
                    645,
                    647,
                    648,
                    649,
                    650,
                    651,
                    653,
                    654,
                    655,
                    656,
                    657,
                    658,
                    659,
                    660,
                    661,
                    663,
                    664,
                    665,
                    666,
                    667,
                    669,
                    670,
                    672,
                    673,
                    675,
                    677,
                    679,
                    680,
                    681,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    697,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    708,
                    709,
                    710,
                    712,
                    715,
                    717,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    728,
                    729,
                    730,
                    731,
                    732,
                    733,
                    734,
                    735,
                    736,
                    738,
                    740,
                    741,
                    742,
                    744,
                    746,
                    747,
                    748,
                    749,
                    756,
                    759,
                    762,
                    763,
                    764,
                    765,
                    766,
                    768,
                    770,
                    771,
                    772,
                    773,
                    774,
                    776,
                    778,
                    780,
                    784,
                    785,
                    786,
                    787,
                    789,
                    793,
                    797,
                    799,
                    807,
                    808,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843
                ]
            ],
            "y_data": [
                [
                    208,
                    184,
                    206,
                    293,
                    112,
                    36,
                    27,
                    273,
                    76,
                    95,
                    91,
                    28,
                    271,
                    247,
                    256,
                    128,
                    217,
                    309,
                    24,
                    199,
                    231,
                    326,
                    180,
                    81,
                    69,
                    28,
                    46,
                    21,
                    308,
                    95,
                    51,
                    37,
                    4,
                    165,
                    7,
                    107,
                    11,
                    48,
                    11,
                    38,
                    20,
                    28,
                    158,
                    14,
                    18,
                    20,
                    36,
                    159,
                    107,
                    16,
                    14,
                    5,
                    15,
                    202,
                    147,
                    165,
                    26,
                    29,
                    21,
                    3,
                    16,
                    111,
                    99,
                    165,
                    17,
                    55,
                    32,
                    58,
                    44,
                    122,
                    30,
                    16,
                    33,
                    25,
                    210,
                    75,
                    97,
                    70,
                    4,
                    32,
                    165,
                    28,
                    10,
                    63,
                    88,
                    18,
                    74,
                    42,
                    84,
                    7,
                    123,
                    192,
                    11,
                    7,
                    3,
                    78,
                    63,
                    30,
                    162,
                    47,
                    43,
                    215,
                    10,
                    3,
                    27,
                    70,
                    214,
                    9,
                    115,
                    2,
                    50,
                    3,
                    2,
                    202,
                    162,
                    257,
                    20,
                    13,
                    98,
                    164,
                    6,
                    2,
                    80,
                    29,
                    62,
                    10,
                    81,
                    3,
                    75,
                    6,
                    7,
                    41,
                    207,
                    80,
                    40,
                    103,
                    20,
                    13,
                    4,
                    2,
                    77,
                    32,
                    15,
                    22,
                    14,
                    2,
                    15,
                    82,
                    46,
                    124,
                    76,
                    88,
                    47,
                    143,
                    32,
                    111,
                    10,
                    17,
                    164,
                    7,
                    21,
                    54,
                    21,
                    2,
                    12,
                    70,
                    2,
                    180,
                    110,
                    16,
                    122,
                    88,
                    128,
                    117,
                    28,
                    9,
                    55,
                    174,
                    20,
                    41,
                    22,
                    9,
                    154,
                    23,
                    8,
                    19,
                    5,
                    32,
                    15,
                    37,
                    29,
                    30,
                    143,
                    3,
                    146,
                    114,
                    15,
                    72,
                    68,
                    8,
                    37,
                    64,
                    129,
                    14,
                    12,
                    5,
                    37,
                    58,
                    17,
                    2,
                    4,
                    13,
                    11,
                    55,
                    2,
                    95,
                    113,
                    138,
                    149,
                    7,
                    2,
                    29,
                    78,
                    93,
                    84,
                    81,
                    3,
                    121,
                    5,
                    20,
                    123,
                    42,
                    6,
                    5,
                    3,
                    61,
                    3,
                    6,
                    15,
                    5,
                    2,
                    73,
                    20,
                    42,
                    6,
                    7,
                    32,
                    15,
                    7,
                    13,
                    11,
                    5,
                    51,
                    2,
                    16,
                    12,
                    4,
                    11,
                    6,
                    2,
                    2,
                    17,
                    12,
                    8,
                    106,
                    59,
                    2,
                    8,
                    4,
                    3,
                    15,
                    179,
                    38,
                    3,
                    13,
                    10,
                    6,
                    15,
                    2,
                    9,
                    2,
                    2,
                    2,
                    112,
                    51,
                    87,
                    39,
                    4,
                    31,
                    2,
                    4,
                    13,
                    13,
                    36,
                    2,
                    6,
                    23,
                    3,
                    30,
                    14,
                    7,
                    3,
                    2,
                    47,
                    100,
                    29,
                    17,
                    12,
                    35,
                    4,
                    2,
                    9,
                    11,
                    9,
                    10,
                    112,
                    6,
                    3,
                    2,
                    54,
                    100,
                    109,
                    13,
                    18,
                    13,
                    11,
                    2,
                    129,
                    15,
                    62,
                    12,
                    103,
                    29,
                    4,
                    4,
                    87,
                    3,
                    6,
                    2,
                    17,
                    2,
                    72,
                    36,
                    13,
                    19,
                    2,
                    2,
                    9,
                    8,
                    26,
                    44,
                    54,
                    7,
                    10,
                    13,
                    2,
                    2,
                    26,
                    9,
                    15,
                    2,
                    5,
                    2,
                    29,
                    3,
                    52,
                    55,
                    11,
                    3,
                    2,
                    27,
                    2,
                    3,
                    3,
                    2,
                    3,
                    45,
                    7,
                    5,
                    4,
                    5,
                    87,
                    6,
                    15,
                    31,
                    7,
                    5,
                    4,
                    6,
                    12,
                    5,
                    26,
                    10,
                    5,
                    12,
                    4,
                    2,
                    3,
                    2,
                    2,
                    2,
                    12,
                    11,
                    6,
                    13,
                    51,
                    9,
                    5,
                    2,
                    3,
                    3,
                    3,
                    7,
                    2,
                    2,
                    73,
                    28,
                    18,
                    20,
                    41,
                    4,
                    10,
                    17,
                    15,
                    9,
                    13,
                    2,
                    2,
                    2,
                    2,
                    12,
                    29,
                    4,
                    64,
                    7,
                    4,
                    9,
                    6,
                    4,
                    12,
                    3,
                    2,
                    9,
                    9,
                    5,
                    5,
                    2,
                    10,
                    3,
                    9,
                    7,
                    2,
                    3,
                    9,
                    9,
                    4,
                    8,
                    13,
                    3,
                    4,
                    6,
                    2,
                    2,
                    3,
                    5,
                    5,
                    2,
                    2,
                    15,
                    3,
                    4,
                    18,
                    6,
                    5,
                    2,
                    57,
                    9,
                    7,
                    5,
                    6,
                    3,
                    3,
                    4,
                    4,
                    2,
                    3,
                    9,
                    3,
                    2,
                    26,
                    48,
                    58,
                    14,
                    37,
                    7,
                    2,
                    9,
                    17,
                    14,
                    6,
                    10,
                    3,
                    2,
                    5,
                    5,
                    2,
                    6,
                    9,
                    17,
                    12,
                    3,
                    9,
                    11,
                    4,
                    8,
                    7,
                    10,
                    6,
                    2,
                    8,
                    7,
                    29,
                    39,
                    5,
                    3,
                    4,
                    2,
                    11,
                    35,
                    3,
                    23,
                    18,
                    37,
                    17,
                    9,
                    5,
                    36,
                    12,
                    2,
                    5,
                    15,
                    6,
                    5,
                    3,
                    4,
                    5,
                    6,
                    5,
                    25,
                    4,
                    16,
                    7,
                    2,
                    3,
                    2,
                    19,
                    12,
                    2,
                    3,
                    4,
                    4,
                    2,
                    7,
                    2,
                    7,
                    12,
                    5,
                    9,
                    2,
                    2,
                    3,
                    3,
                    17,
                    3,
                    2,
                    2,
                    5,
                    2,
                    13,
                    2,
                    5,
                    2,
                    2,
                    2,
                    2,
                    4,
                    2,
                    5,
                    3,
                    7,
                    2,
                    2,
                    3,
                    2,
                    3,
                    3,
                    3,
                    3,
                    2,
                    2,
                    3,
                    2,
                    4,
                    2,
                    12,
                    2,
                    2,
                    4,
                    4,
                    3,
                    3,
                    3,
                    2,
                    5,
                    5,
                    3,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    6,
                    3,
                    2,
                    2,
                    3,
                    2,
                    2,
                    8,
                    3,
                    2,
                    5,
                    2,
                    2,
                    137,
                    58,
                    19,
                    46,
                    11,
                    96,
                    59,
                    136,
                    20,
                    129,
                    58,
                    39,
                    35,
                    59,
                    98,
                    19,
                    34,
                    61,
                    74,
                    76,
                    19,
                    60,
                    40,
                    60,
                    13,
                    5,
                    37,
                    39,
                    12,
                    21,
                    29,
                    20,
                    2,
                    5,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between driver ID and number of races of all drivers who have at least participated in two races in a scatter chart."
        ]
    },
    "1451": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2016-01-01",
                    "2017-01-01"
                ]
            ],
            "y_data": [
                [
                    2,
                    20
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart.",
            "Show me a bar chart about the number of races held in each year after 2014."
        ]
    },
    "1452": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 BIN year BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    2,
                    20
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart.",
            "Show me a bar chart about the number of races held in each year after 2014."
        ]
    },
    "1460": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Abu Dhabi Grand Prix",
                    "Australian Grand Prix",
                    "Bahrain Grand Prix",
                    "Belgian Grand Prix",
                    "Brazilian Grand Prix",
                    "British Grand Prix",
                    "Canadian Grand Prix",
                    "Chinese Grand Prix",
                    "European Grand Prix",
                    "German Grand Prix",
                    "Hungarian Grand Prix",
                    "Indian Grand Prix",
                    "Italian Grand Prix",
                    "Japanese Grand Prix",
                    "Korean Grand Prix",
                    "Malaysian Grand Prix",
                    "Monaco Grand Prix",
                    "Singapore Grand Prix",
                    "Spanish Grand Prix",
                    "Turkish Grand Prix"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2,
                    3,
                    3,
                    3,
                    2,
                    3,
                    3,
                    3,
                    3,
                    1,
                    3,
                    3,
                    2,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "What are the names of all races held between 2009 and 2011, and count them by a bar chart",
            "What are the names of races held between 2009 and 2011, and count them by a bar chart",
            "A bar chart for what are the number of the names of races held between 2009 and 2011?",
            "What are the number of the names of all races held between 2009 and 2011?",
            "What are the number of the names of races held between 2009 and 2011?",
            "A bar chart for what are the number of the names of all races held between 2009 and 2011?"
        ]
    },
    "1461": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT count(*) , constructorId FROM constructorStandings GROUP BY constructorid",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT count(*) , constructorId FROM constructorStandings GROUP BY constructorid"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "count(*)",
            "y_name": "constructorId",
            "x_data": [
                [
                    780,
                    70,
                    708,
                    347,
                    226,
                    909,
                    138,
                    52,
                    244,
                    190,
                    92,
                    17,
                    18,
                    4,
                    367,
                    112,
                    241,
                    337,
                    81,
                    82,
                    297,
                    259,
                    17,
                    46,
                    426,
                    120,
                    332,
                    32,
                    95,
                    33,
                    32,
                    405,
                    126,
                    315,
                    79,
                    24,
                    194,
                    84,
                    16,
                    32,
                    70,
                    48,
                    172,
                    32,
                    16,
                    32,
                    79,
                    47,
                    113,
                    39,
                    72,
                    116,
                    62,
                    123,
                    138,
                    106,
                    64,
                    31,
                    11,
                    3,
                    121,
                    71,
                    14,
                    231,
                    46,
                    13,
                    8,
                    17,
                    4,
                    2,
                    31,
                    14,
                    12,
                    11,
                    12,
                    12,
                    11,
                    30,
                    19,
                    56,
                    6,
                    4,
                    12,
                    26,
                    17,
                    14,
                    5,
                    6,
                    20,
                    10,
                    19,
                    56,
                    3,
                    15,
                    3,
                    17,
                    4,
                    19,
                    3,
                    10,
                    30,
                    9,
                    1,
                    14,
                    20,
                    5,
                    1,
                    11,
                    10,
                    156,
                    56,
                    38,
                    82,
                    1,
                    5,
                    89,
                    9,
                    66,
                    6,
                    8,
                    10,
                    58,
                    8,
                    1,
                    4,
                    54,
                    28,
                    47,
                    55,
                    21,
                    10,
                    10,
                    46,
                    8,
                    19,
                    25,
                    43,
                    6,
                    6,
                    22,
                    12,
                    23,
                    5,
                    12,
                    11,
                    11,
                    8,
                    14,
                    3,
                    31,
                    38,
                    58,
                    58,
                    77,
                    39,
                    41
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    39,
                    40,
                    41,
                    42,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97,
                    98,
                    99,
                    100,
                    101,
                    103,
                    104,
                    105,
                    106,
                    113,
                    117,
                    118,
                    123,
                    124,
                    125,
                    127,
                    131,
                    164,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me the correlation about what are the numbers of races for each constructor id?",
            "Scatter chart. what are the numbers of races for each constructor id?",
            "What are the numbers of races for each constructor id. Show the correlation.",
            "For each constructor id, how many races are there. Show scatter chart.",
            "Plot a scatter chart, count(*) by constructorid."
        ]
    },
    "1520": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "gymnast",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Hometown",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Bonao",
                    "Los Alcarrizos",
                    "Santiago de los Caballeros",
                    "Santo Domingo"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a pie chart with what are the hometowns of gymnasts and the corresponding number of gymnasts?",
            "Show me a pie chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?",
            "What are the hometowns of gymnasts and the corresponding number of gymnasts. Show a pie chart.",
            "Display a pie chart for how many gymnasts are from each hometown?",
            "Visualize a pie chart with how many gymnasts are from each hometown?",
            "How many gymnasts are from each hometown. Show the proportion."
        ]
    },
    "1521": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gymnast",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Hometown",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Bonao",
                    "Los Alcarrizos",
                    "Santiago de los Caballeros",
                    "Santo Domingo"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?",
            "Display a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?",
            "What are the hometowns of gymnasts and the corresponding number of gymnasts. ",
            "Return a bar chart on how many gymnasts are from each hometown?",
            "Show me a bar chart for how many gymnasts are from each hometown?",
            "How many gymnasts are from each hometown. Plot them as bar chart."
        ]
    },
    "1964": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT decor , COUNT(decor) FROM Rooms WHERE bedtype = 'King' GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT decor , COUNT(decor) FROM Rooms WHERE bedtype = 'King' GROUP BY decor"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "decor",
            "y_name": "COUNT(decor)",
            "x_data": [
                [
                    "modern",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY decor"
        },
        "nl_queries": [
            "Show the frequency of the decor of rooms that have a king bed using a pie chart.",
            "Pie chart, group and count the decor of rooms that have a king bed."
        ]
    },
    "1965": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , COUNT(decor) FROM Rooms WHERE bedtype = 'King' GROUP BY decor ORDER BY basePrice",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , COUNT(decor) FROM Rooms WHERE bedtype = 'King' GROUP BY decor ORDER BY basePrice"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "COUNT(decor)",
            "x_data": [
                [
                    "modern",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY decor"
        },
        "nl_queries": [
            "Compare the frequency of the decor of rooms that have a king bed using a bar chart.",
            "Bar chart, group and count the decor of rooms that have a king bed."
        ]
    },
    "1966": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT bedType , count(*) FROM Rooms GROUP BY bedType",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT bedType , count(*) FROM Rooms GROUP BY bedType"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "bedType",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Double",
                    "King",
                    "Queen"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of rooms for each bed type. Show the proportion.",
            "Visualize a pie chart with what are the number of rooms for each bed type?",
            "Return a pie chart on what are the number of rooms for each bed type?",
            "What are the number of rooms for each bed type. Show a pie chart.",
            "Give me a pie to show the total number from different bedtype."
        ]
    },
    "1967": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , count(*) FROM Rooms GROUP BY bedType",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , count(*) FROM Rooms GROUP BY bedType"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Double",
                    "King",
                    "Queen"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of rooms for each bed type. Visualize by bar chart.",
            "A bar chart about what are the number of rooms for each bed type?",
            "Return a bar chart on what are the number of rooms for each bed type?",
            "What are the number of rooms for each bed type. Show bar chart.",
            "Create a bar chart showing the total number across bedtype"
        ]
    },
    "1968": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "decor",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    112.5,
                    162.5,
                    187.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the average price of the rooms in different decor using a pie chart.",
            "What is the proportion of the average base price of the rooms for each different decor? Show me a pie chart!",
            "Please use a pie chart to show the proportion of the average price of the rooms in a different decor.",
            "I want to know the proportion of the average base price for each decor."
        ]
    },
    "1969": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    112.5,
                    162.5,
                    187.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the average price of the rooms in different decor using a bar chart.",
            "What is the average price of the rooms for each different decor? Show me a bar chart!",
            "Please use a bar chart to show the average price of the rooms in a different decor.",
            "Give me a bar chart for the average of baseprice of each decor"
        ]
    },
    "1970": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , min(basePrice) FROM Rooms GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , min(basePrice) FROM Rooms GROUP BY decor"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "min(basePrice)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    75,
                    150,
                    150
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the minimum of the rooms in different decor using a bar chart.",
            "What is the minimum price of the rooms for each different decor? Show me a bar chart!",
            "Please use a bar chart to show the minimum price of the rooms in a different decor.",
            "Draw a bar chart of decor versus minimal baseprice"
        ]
    },
    "1971": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT decor , min(basePrice) FROM Rooms GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT decor , min(basePrice) FROM Rooms GROUP BY decor"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "decor",
            "y_name": "min(basePrice)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    75,
                    150,
                    150
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the proportion of the minimum price of the rooms for each different decor? Show me a pie chart!",
            "Please use a pie chart to show the proportion of the minimum price of the rooms in a different decor.",
            "Show the minimum price of the rooms in different decor using a pie chart.",
            "Compute the total minimal baseprice across decor as a pie chart."
        ]
    },
    "1972": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT avg(basePrice) , min(basePrice) FROM Rooms GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT avg(basePrice) , min(basePrice) FROM Rooms GROUP BY decor"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "avg(basePrice)",
            "y_name": "min(basePrice)",
            "x_data": [
                [
                    112.5,
                    162.5,
                    187.5
                ]
            ],
            "y_data": [
                [
                    75,
                    150,
                    150
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Just show the average and minimum price of the rooms in different decor using a scatter.",
            "What is the relationship between the average price and the minimum price  of the rooms for each different decor? How about using a line chart to show them.",
            "Please give me scatter to visualize two attr: the average and minimum price of the rooms in different decor using a scatter.",
            "Show me a scatter plot of avg(baseprice) and minimal baseprice for ."
        ]
    },
    "1973": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT avg(basePrice) , min(basePrice) FROM Rooms GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT avg(basePrice) , min(basePrice) FROM Rooms GROUP BY decor"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "avg(basePrice)",
            "y_name": "min(basePrice)",
            "x_data": [
                [
                    112.5
                ],
                [
                    162.5
                ],
                [
                    187.5
                ]
            ],
            "y_data": [
                [
                    75
                ],
                [
                    150
                ],
                [
                    150
                ]
            ],
            "classify": [
                "modern",
                "rustic",
                "traditional"
            ],
            "describe": "GROUP BY decor"
        },
        "nl_queries": [
            "Just show the average and minimum price of the rooms in different decor using a scatter.",
            "What is the relationship between the average price and the minimum price of the rooms for each different decor? How about using a line chart to show them.",
            "Please give me scatter to visualize two attr: the average and minimum price of the rooms in different decor using a scatter.",
            "Show avg(baseprice) vs minimal baseprice as scatter plot use a different color for each decor"
        ]
    },
    "1974": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "modern",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of rooms with king bed for each decor type. Plot them as pie chart.",
            "Show me the proportion on how many rooms have king beds? Report the number for each decor type.",
            "Draw a pie chart for how many rooms have king beds? Report the number for each decor type.",
            "How many rooms have king beds? Report the number for each decor type. "
        ]
    },
    "1975": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "modern",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of rooms with king bed for each decor type. ",
            "Return a bar chart on how many rooms have king beds? Report the number for each decor type.",
            "how many rooms have king beds? Report the number for each decor type.",
            "How many rooms have king beds? Report the number for each decor type. Plot them as bar chart."
        ]
    },
    "1976": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "bedType",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "Double",
                    "King",
                    "Queen"
                ]
            ],
            "y_data": [
                [
                    100,
                    181.25,
                    150
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a pie on what is the average base price of different bed type? List bed type and average base price.",
            "Return a pie chart on what is the average base price of different bed type? List bed type and average base price.",
            "What is the average base price of different bed type? List bed type and average base price. Visualize by pie chart.",
            "For each bed type, find the average base price of different bed type. Plot them as pie chart.",
            "For each bed type, find the average room price. Show the proportion.",
            "Return a pie on what is the average base price of rooms, for each bed type?",
            "Return a pie chart on what is the average base price of rooms, for each bed type?",
            "What is the average base price of rooms, for each bed type. Show a pie chart.",
            "Create a pie chart showing mean baseprice across bedtype."
        ]
    },
    "1977": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "Double",
                    "King",
                    "Queen"
                ]
            ],
            "y_data": [
                [
                    100,
                    181.25,
                    150
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "what is the average base price of different bed type? List bed type and average base price.",
            "Return a bar chart on what is the average base price of different bed type? List bed type and average base price.",
            "What is the average base price of different bed type? List bed type and average base price. Plot them as bar chart.",
            "For each bed type, find the average base price of different bed type. Show bar chart.",
            "For each bed type, find the average room price. Show bar chart.",
            "Return a bar chart on what is the average base price of rooms, for each bed type?",
            "Draw a bar chart for what is the average base price of rooms, for each bed type?",
            "What is the average base price of rooms, for each bed type. Plot them as bar chart.",
            "Show me the average of baseprice by bedtype in a histogram"
        ]
    },
    "1978": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of rooms with price higher than 120 for different decor. Show the proportion.",
            "Give the proportion of how many rooms cost more than 120, for each different decor?",
            "Pie. how many rooms cost more than 120, for each different decor?",
            "How many rooms cost more than 120, for each different decor. Plot them as pie chart."
        ]
    },
    "1979": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of rooms with price higher than 120 for different decor. Show bar chart.",
            "Give me a histogram for how many rooms cost more than 120, for each different decor?",
            "Visualize a bar chart for how many rooms cost more than 120, for each different decor?",
            "How many rooms cost more than 120, for each different decor. Plot them as bar chart."
        ]
    },
    "1980": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName"
        },
        "chart": "Pie",
        "hardness": "Extra Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "roomName",
            "y_name": "COUNT(roomName)",
            "x_data": [
                [
                    "Convoke and sanguine",
                    "Frugal not apropos",
                    "Harbinger but bequest",
                    "Thrift and accolade"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY roomName"
        },
        "nl_queries": [
            "A pie chart for what are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?",
            "What are the name of rooms booked by customers whose first name has \"ROY\" in part, and count them by a pie chart",
            "What are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?",
            "Find the name of rooms booked by some customers whose first name contains ROY, and count them by a pie chart",
            "A pie chart for finding the number of the name of rooms booked by some customers whose first name contains ROY.",
            "Find the number of the name of rooms booked by some customers whose first name contains ROY."
        ]
    },
    "1981": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "roomName",
            "y_name": "COUNT(roomName)",
            "x_data": [
                [
                    "Convoke and sanguine",
                    "Frugal not apropos",
                    "Harbinger but bequest",
                    "Thrift and accolade"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY roomName"
        },
        "nl_queries": [
            "Find the name of rooms booked by some customers whose first name contains ROY, and count them by a bar chart",
            "A bar chart for what are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?",
            "What are the name of rooms booked by customers whose first name has \"ROY\" in part, and count them by a bar chart",
            "What are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?",
            "A bar chart for finding the number of the name of rooms booked by some customers whose first name contains ROY.",
            "Find the number of the name of rooms booked by some customers whose first name contains ROY."
        ]
    },
    "1982": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = \"traditional\" GROUP BY bedType",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = \"traditional\" GROUP BY bedType"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "bedType",
            "y_name": "COUNT(bedType)",
            "x_data": [
                [
                    "King",
                    "Queen"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY bedType"
        },
        "nl_queries": [
            "Using a pie chart to show the proportion of each type of bed.",
            "Can you show me the proportion of each bed type using a pie chart?"
        ]
    },
    "1983": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = \"traditional\" GROUP BY bedType",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = \"traditional\" GROUP BY bedType"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "COUNT(bedType)",
            "x_data": [
                [
                    "King",
                    "Queen"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY bedType"
        },
        "nl_queries": [
            "Compare the frequency of each type of bed by a bar chart.",
            "Bar chart, X is bed type and the Y-axis is their appearance frequency."
        ]
    },
    "1984": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "roomName",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Abscond or bolster",
                    "Convoke and sanguine",
                    "Frugal not apropos",
                    "Harbinger but bequest",
                    "Immutable before decorum",
                    "Interim but salutary",
                    "Mendicant with cryptic",
                    "Recluse and defiance",
                    "Riddle to exculpate",
                    "Thrift and accolade"
                ]
            ],
            "y_data": [
                [
                    51,
                    69,
                    66,
                    60,
                    63,
                    59,
                    56,
                    62,
                    55,
                    59
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return the name of rooms and the number of reservations made for each of the rooms to draw a bar chart.",
            "For each room, find its name and the number of times reservations were made for it, you can use the data to draw a bar chart."
        ]
    },
    "1985": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Room",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AOB",
                    "CAS",
                    "FNA",
                    "HBB",
                    "IBD",
                    "IBS",
                    "MWC",
                    "RND",
                    "RTE",
                    "TAA"
                ]
            ],
            "y_data": [
                [
                    51,
                    69,
                    66,
                    60,
                    63,
                    59,
                    56,
                    62,
                    55,
                    59
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return the room and number of reservations made for each of the rooms to draw a bar chart.",
            "For each room, find its the number of times reservations were made for it. Visualize them using a bar chart."
        ]
    },
    "2073": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.Customer_Event_ID , T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID = T2.Customer_Event_ID",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.Customer_Event_ID , T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID = T2.Customer_Event_ID"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Customer_Event_ID",
            "y_name": "property_id",
            "x_data": [
                [
                    70,
                    216,
                    428,
                    559,
                    591,
                    606,
                    627,
                    817
                ]
            ],
            "y_data": [
                [
                    605,
                    669,
                    954,
                    107,
                    120,
                    445,
                    748,
                    107
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            ""
        ]
    },
    "2074": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code"
        },
        "chart": "Pie",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Commen",
                    "Electronics",
                    "Furniture"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Give me a pie chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21'."
        ]
    },
    "2075": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Commen",
                    "Electronics",
                    "Furniture"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Give me a bar chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21'."
        ]
    },
    "2079": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM residents",
                "binning": "BIN date_moved_in BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents BIN date_moved_in BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    0,
                    0,
                    1,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY WEEKDAY"
        },
        "nl_queries": [
            "What are the number of the distinct move in dates of the residents?",
            "What are the distinct move in dates of the residents, and count them by a bar chart",
            "A bar chart for what are the number of the distinct move in dates of the residents?",
            "Give me a bar chart for the number of date moved in of each date moved in"
        ]
    },
    "2080": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY Type_of_Thing_Code ,  organization_details",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY Type_of_Thing_Code ,  organization_details"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organization_details",
            "y_name": "COUNT(organization_details)",
            "x_data": [
                [
                    "Denesik and Sons Party",
                    "Reinger, Hudson and Nolan Group",
                    "Robel-Schulist Group"
                ]
            ],
            "y_data": [
                [
                    5,
                    1,
                    2
                ],
                [
                    4,
                    1,
                    0
                ],
                [
                    1,
                    0,
                    1
                ]
            ],
            "classify": [
                "Commen",
                "Electronics",
                "Furniture"
            ],
            "describe": "GROUP BY Type_of_Thing_Code, GROUP BY organization_details"
        },
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it."
        ]
    },
    "2081": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ,  Type_of_Thing_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ,  Type_of_Thing_Code"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Commen",
                    "Electronics",
                    "Furniture"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    1
                ],
                [
                    1,
                    1,
                    0
                ],
                [
                    2,
                    0,
                    1
                ]
            ],
            "classify": [
                "Denesik and Sons Party",
                "Reinger, Hudson and Nolan Group",
                "Robel-Schulist Group"
            ],
            "describe": "GROUP BY organization_details, GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it."
        ]
    },
    "2086": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY Type_of_Thing_Code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY Type_of_Thing_Code"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Commen",
                    "Electronics",
                    "Furniture"
                ]
            ],
            "y_data": [
                [
                    8,
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Show the total number of each type of each thing using a pie chart."
        ]
    },
    "2087": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things GROUP BY Type_of_Thing_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things GROUP BY Type_of_Thing_Code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Commen",
                    "Electronics",
                    "Furniture"
                ]
            ],
            "y_data": [
                [
                    8,
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Compare the number of items in the type of each thing using a bar chart.",
            "Show the number of type of thing code from each type of thing code"
        ]
    },
    "2088": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organization_details",
            "y_name": "COUNT(organization_details)",
            "x_data": [
                [
                    "Denesik and Sons Party",
                    "Reinger, Hudson and Nolan Group",
                    "Robel-Schulist Group"
                ]
            ],
            "y_data": [
                [
                    10,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organization_details"
        },
        "nl_queries": [
            "List the number of items by the details of the organization that owns it using a bar chart.",
            "Just give me a histogram that X is the details of the organization and the Y-axis is the number of things they own."
        ]
    },
    "2093": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "pie",
            "x_name": "organization_details",
            "y_name": "COUNT(organization_details)",
            "x_data": [
                [
                    "Denesik and Sons Party",
                    "Reinger, Hudson and Nolan Group",
                    "Robel-Schulist Group"
                ]
            ],
            "y_data": [
                [
                    10,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organization_details"
        },
        "nl_queries": [
            "Just give me a pie chart that X is the details of the organization and the Y-axis is the number of things they own.",
            "Show the number of items by the details of the organization that owns it using a pie chart."
        ]
    },
    "2096": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY date_moved_in",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY date_moved_in"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2015-03-27",
                    "2016-09-27"
                ]
            ],
            "y_data": [
                [
                    9,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_moved_in"
        },
        "nl_queries": [
            "What is the proportion of each customer's move in date? Show me the bar chart.",
            "Please use a bar chart to compare the number of customers of each customer's move in date."
        ]
    },
    "2097": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id",
                "binning": "BIN date_moved_in BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id BIN date_moved_in BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2015",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    9,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY YEAR"
        },
        "nl_queries": [
            "What is the proportion of each customer's move in date? You can show me a bar chart that bins move in date into Year interval.",
            "Please use a bar chart to compare the number of customers of each customer's move in date, note that you should bin move in date into Year interval."
        ]
    },
    "2102": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id",
                "binning": "BIN date_moved_in BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id BIN date_moved_in BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    4,
                    0,
                    0,
                    9,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY WEEKDAY"
        },
        "nl_queries": [
            "Please use a bar chart to compare the number of customers of each customer's move-in date, note that you should bin move-in date into Day Of Week interval.",
            "What is the proportion of each customer's move in date? You can show me a bar chart that bins move in date into Weekday interval."
        ]
    },
    "2107": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_details , COUNT(customer_details) FROM Customers GROUP BY customer_details",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_details , COUNT(customer_details) FROM Customers GROUP BY customer_details"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_details",
            "y_name": "COUNT(customer_details)",
            "x_data": [
                [
                    "Esteban Senger",
                    "Mackenzie Hettinger V",
                    "Monty Sauer III",
                    "Mr. Raul Prosacco",
                    "Oma Smith",
                    "Sabryna Moore PhD",
                    "Tyrique Durgan II",
                    "Vincenza Price"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    2,
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY customer_details"
        },
        "nl_queries": [
            "Please compare the frequency of the customer details using a bar chart.",
            "Can you draw a bar chart to show the number of items in each customer details category?",
            "Bar graph to show the number of customer details from different customer details"
        ]
    },
    "2108": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT other_details , resident_id FROM Residents",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT other_details , resident_id FROM Residents"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "other_details",
            "y_name": "resident_id",
            "x_data": [
                [
                    "Anderson Batz",
                    "Jess Wyman",
                    "Miss Alanis Lockman",
                    "Elroy Schuster",
                    "Prof. Nasir Hoppe",
                    "Tiffany Jaskolski",
                    "Terrill Bernhard",
                    "Loy Walter",
                    "Mrs. Raphaelle Fisher",
                    "Jacques Glover II",
                    "Cassie Johnson"
                ]
            ],
            "y_data": [
                [
                    6,
                    23,
                    28,
                    43,
                    45,
                    47,
                    67,
                    83,
                    87,
                    88,
                    90
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Just list the resident id and details in a bar chart.",
            "Bar chart x axis other details y axis resident_id"
        ]
    },
    "2109": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events GROUP BY date_moved_in",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events GROUP BY date_moved_in"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2015-03-27",
                    "2016-09-27"
                ]
            ],
            "y_data": [
                [
                    9,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_moved_in"
        },
        "nl_queries": [
            "Group and count the move in date in a bar chart.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them.",
            "Draw a bar chart of date moved in versus how many date moved in"
        ]
    },
    "2110": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events",
                "binning": "BIN date_moved_in BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events BIN date_moved_in BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2015",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    9,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY YEAR"
        },
        "nl_queries": [
            "Group and count the move in date in a bar chart, and I want to bin the X into Year interval.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, please bin X-axis into Year interval.",
            "Bar chart x axis date moved in y axis how many date moved in"
        ]
    },
    "2119": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events",
                "binning": "BIN date_moved_in BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events BIN date_moved_in BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    4,
                    0,
                    0,
                    9,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY WEEKDAY"
        },
        "nl_queries": [
            "Group and count the move in date in a bar chart, and bin the X-axis into week day interval.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, please bin X-axis into Day of Week interval.",
            "Bar chart x axis date moved in y axis how many date moved in"
        ]
    },
    "2124": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Customer_Event_ID , property_id FROM customer_events",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Customer_Event_ID , property_id FROM customer_events"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Customer_Event_ID",
            "y_name": "property_id",
            "x_data": [
                [
                    70,
                    160,
                    166,
                    216,
                    226,
                    256,
                    428,
                    530,
                    559,
                    591,
                    606,
                    627,
                    817
                ]
            ],
            "y_data": [
                [
                    605,
                    879,
                    629,
                    669,
                    748,
                    108,
                    954,
                    669,
                    107,
                    120,
                    445,
                    748,
                    107
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Just list the customer event id and the corresponding move property id using a scatter.",
            "Show me a scatter plot of customer event id and property_id for ."
        ]
    },
    "2125": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.property_id , count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.property_id , count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "property_id",
            "y_name": "count(*)",
            "x_data": [
                [
                    107,
                    108,
                    120,
                    373,
                    445,
                    605,
                    629,
                    669,
                    748,
                    879,
                    954
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Scatter chart. how many residents does each property have? List property id and resident count.",
            "plot scatter on how many residents does each property have? List property id and resident count.",
            "How many residents does each property have? List property id and resident count with a scatter chart.",
            "How many residents does each property have? List property id and resident count. Visualize by scatter chart."
        ]
    },
    "2154": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT cmi_details , master_customer_id FROM customer_master_index ORDER BY cmi_details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT cmi_details , master_customer_id FROM customer_master_index ORDER BY cmi_details DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "local_govt_mdm",
        "vis_obj": {
            "chart": "bar",
            "x_name": "cmi_details",
            "y_name": "master_customer_id",
            "x_data": [
                [
                    "Volkman, Mills and Ferry",
                    "Streich-Morissette",
                    "Schmitt-Lang",
                    "Schmidt, Kertzmann and Lubowitz",
                    "Reynolds-McClure",
                    "Quigley-Paucek",
                    "Mayer-Hagenes",
                    "Gusikowski PLC",
                    "Gottlieb, Becker and Wyman"
                ]
            ],
            "y_data": [
                [
                    2,
                    7,
                    1,
                    4,
                    9,
                    8,
                    6,
                    3,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List all information about customer master index, and sort them by details in descending order in a bar chart.",
            "Could you draw a bar graph to show all information about customer master index, and sort them by details in descending order."
        ]
    },
    "2155": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "local_govt_mdm",
        "vis_obj": {
            "chart": "pie",
            "x_name": "cmi_details",
            "y_name": "COUNT(cmi_details)",
            "x_data": [
                [
                    "Reynolds-McClure",
                    "Schmidt, Kertzmann and Lubowitz",
                    "Schmitt-Lang",
                    "Volkman, Mills and Ferry"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY cmi_details"
        },
        "nl_queries": [
            "what are the details of the cmi masters that have the cross reference code 'Tax', and count them by a pie chart"
        ]
    },
    "2156": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_mdm",
        "vis_obj": {
            "chart": "bar",
            "x_name": "cmi_details",
            "y_name": "COUNT(cmi_details)",
            "x_data": [
                [
                    "Reynolds-McClure",
                    "Schmidt, Kertzmann and Lubowitz",
                    "Schmitt-Lang",
                    "Volkman, Mills and Ferry"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY cmi_details"
        },
        "nl_queries": [
            "what are the details of the cmi masters that have the cross reference code 'Tax', and count them by a bar chart"
        ]
    },
    "2158": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "local_govt_mdm",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "council_tax_id",
            "y_name": "cmi_cross_ref_id",
            "x_data": [
                [
                    9,
                    10
                ]
            ],
            "y_data": [
                [
                    4,
                    81
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the council tax ids and their related cmi cross references of all the parking fines by a scatter chart.",
            "List the council tax ids and their related cmi cross references of all the parking fines. ",
            "Show me a scatter plot of council tax id and cmi_cross_ref_id for ."
        ]
    },
    "2316": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Years_Played",
            "y_name": "COUNT(Years_Played)",
            "x_data": [
                [
                    "1 (2011)",
                    "2 (1988, 1990)",
                    "2 (2010-2011)",
                    "2 (2010–2011)",
                    "3 (2005, 2007–2008)",
                    "3 (2009–2011)",
                    "4 (2003–2004, 2010–2011)",
                    "8 (2003–2005, 2007–2011)"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Years_Played"
        },
        "nl_queries": [
            "Group and count the years played to draw a bar chart.",
            "Please give me a bar chart to show the number of players in each years played.",
            "Bar chart of the number of years played from each years played"
        ]
    },
    "2317": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\"",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\""
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Draft_Class",
            "y_name": "Draft_Pick_Number",
            "x_data": [
                [
                    "1996 MLS Inaugural Player Draft",
                    "1999 MLS College Draft",
                    "2000 MLS SuperDraft",
                    "2005 MLS SuperDraft",
                    "2006 MLS SuperDraft",
                    "2008 MLS SuperDraft",
                    "2009 MLS SuperDraft"
                ]
            ],
            "y_data": [
                [
                    87,
                    5,
                    4,
                    9,
                    37,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the draft pick numbers and draft classes of players whose positions are defenders in a bar chart.",
            "Show the draft pick numbers and draft classes of players whose positions are defenders. Show bar chart.",
            "Show me a bar chart for what are the draft pick numbers and draft classes for players who play the Defender position?",
            "what are the draft pick numbers and draft classes for players who play the Defender position?",
            "What are the draft pick numbers and draft classes for players who play the Defender position. Show bar chart."
        ]
    },
    "2318": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Country_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Indonesia",
                    "Ireland",
                    "Isle of Man",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    4,
                    2,
                    9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the country names and the corresponding number of players in a pie chart.",
            "Show the country names and the corresponding number of players. Plot them as pie chart.",
            "Display a pie chart for how many players are from each country?",
            "Give the proportion of how many players are from each country?",
            "How many players are from each country. Show a pie chart."
        ]
    },
    "2319": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Indonesia",
                    "Ireland",
                    "Isle of Man",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    4,
                    2,
                    9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the country names and the corresponding number of players in a bar chart.",
            "Show the country names and the corresponding number of players. Show bar chart.",
            "Visualize a bar chart for how many players are from each country?",
            "Show me a bar chart for how many players are from each country?",
            "How many players are from each country. Visualize by bar chart."
        ]
    },
    "2320": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Position",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Defender",
                    "Forward",
                    "Midfielder"
                ]
            ],
            "y_data": [
                [
                    7,
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the position of players and the corresponding number of players in a pie chart.",
            "Show the position of players and the corresponding number of players. Visualize by pie chart.",
            "A pie chart about how many players played each position?",
            "Draw a pie chart for how many players played each position?",
            "How many players played each position. Show a pie chart.",
            "Give me a pie to show the total number from different position."
        ]
    },
    "2321": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Position",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Defender",
                    "Forward",
                    "Midfielder"
                ]
            ],
            "y_data": [
                [
                    7,
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the position of players and the corresponding number of players with a bar chart.",
            "Show the position of players and the corresponding number of players. Visualize by bar chart.",
            "Return a bar chart on how many players played each position?",
            "Draw a bar chart for how many players played each position?",
            "How many players played each position. Plot them as bar chart.",
            "Give me a bar chart for the total number of each position"
        ]
    },
    "2322": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Years_Played",
            "y_name": "COUNT(Years_Played)",
            "x_data": [
                [
                    "1 (2011)",
                    "2 (2010-2011)",
                    "2 (2010–2011)",
                    "3 (2005, 2007–2008)",
                    "8 (2003–2005, 2007–2011)"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Years_Played"
        },
        "nl_queries": [
            "A pie chart groups and counts the years played for players from team \"Columbus Crew\"."
        ]
    },
    "2323": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Years_Played",
            "y_name": "COUNT(Years_Played)",
            "x_data": [
                [
                    "1 (2011)",
                    "2 (2010-2011)",
                    "2 (2010–2011)",
                    "3 (2005, 2007–2008)",
                    "8 (2003–2005, 2007–2011)"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Years_Played"
        },
        "nl_queries": [
            "Give me a bar chart that groups and counts the years played for players from team \"Columbus Crew\"."
        ]
    },
    "2326": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "medicine_enzyme_interaction",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Trade_Name",
            "y_name": "id",
            "x_data": [
                [
                    "Abilify",
                    "Saphris"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a pie chart with what is the id and trade name of the medicines can interact with at least 3 enzymes?",
            "What is the id and trade name of the medicines can interact with at least 3 enzymes. Show the proportion.",
            "Return a pie chart on what are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
            "Draw a pie chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
            "What are the ids and trade names of the medicine that can interact with at least 3 enzymes. Show the proportion."
        ]
    },
    "2327": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "medicine_enzyme_interaction",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Trade_Name",
            "y_name": "id",
            "x_data": [
                [
                    "Abilify",
                    "Saphris"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me a bar chart for what is the id and trade name of the medicines can interact with at least 3 enzymes?",
            "what is the id and trade name of the medicines can interact with at least 3 enzymes?",
            "What is the id and trade name of the medicines can interact with at least 3 enzymes. ",
            "Show me a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
            "Visualize a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
            "What are the ids and trade names of the medicine that can interact with at least 3 enzymes. "
        ]
    },
    "2328": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "medicine_enzyme_interaction",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "Aripiprazole",
                    "Asenapine",
                    "Iloperidone",
                    "Ziprasidone"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    8,
                    20
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Pie chart. what are the ids and names of the medicine that can interact with two or more enzymes?",
            "Show me a pie chart for what are the ids and names of the medicine that can interact with two or more enzymes?",
            "What are the ids and names of the medicine that can interact with two or more enzymes. "
        ]
    },
    "2329": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "medicine_enzyme_interaction",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "Aripiprazole",
                    "Asenapine",
                    "Iloperidone",
                    "Ziprasidone"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    8,
                    20
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for what are the ids and names of the medicine that can interact with two or more enzymes?",
            "A bar chart about what are the ids and names of the medicine that can interact with two or more enzymes?",
            "What are the ids and names of the medicine that can interact with two or more enzymes. Visualize by bar chart."
        ]
    },
    "2336": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "Mount Cameroon",
                    "Ighil Mgoun",
                    "Taska n’Zat"
                ]
            ],
            "y_data": [
                [
                    12,
                    14,
                    20
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Pie. what are the id and name of the mountains that have at least 2 photos?",
            "Draw a pie chart for what are the id and name of the mountains that have at least 2 photos?",
            "What are the id and name of the mountains that have at least 2 photos. Plot them as pie chart."
        ]
    },
    "2337": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "Mount Cameroon",
                    "Ighil Mgoun",
                    "Taska n’Zat"
                ]
            ],
            "y_data": [
                [
                    12,
                    14,
                    20
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a bar chart on what are the id and name of the mountains that have at least 2 photos?",
            "Draw a bar chart for what are the id and name of the mountains that have at least 2 photos?",
            "What are the id and name of the mountains that have at least 2 photos. Show bar chart."
        ]
    },
    "2343": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Panasonic Leica DG Nocticron 42.5mm f /1.2",
                    "Panasonic Lumix G 150mm f /2.8",
                    "Olympus 15mm f/8.0 Body Cap",
                    "Schneider Kreuznach Super Angulon 14mm f /2.0",
                    "Sigma 19mm f2.8 EX DN"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me a pie chart for what is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.",
            "Visualize a pie chart with what is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.",
            "What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos. Plot them as pie chart."
        ]
    },
    "2344": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Panasonic Leica DG Nocticron 42.5mm f /1.2",
                    "Panasonic Lumix G 150mm f /2.8",
                    "Olympus 15mm f/8.0 Body Cap",
                    "Schneider Kreuznach Super Angulon 14mm f /2.0",
                    "Sigma 19mm f2.8 EX DN"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart for what is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.",
            "Display a bar chart for what is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.",
            "What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos. Show bar chart."
        ]
    },
    "2345": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Height , Prominence FROM mountain WHERE range != 'Aberdare Range'",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Height , Prominence FROM mountain WHERE range != 'Aberdare Range'"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Height",
            "y_name": "Prominence",
            "x_data": [
                [
                    4260,
                    4220,
                    4195,
                    4193,
                    4167,
                    4127,
                    4125,
                    4120,
                    4100,
                    4088,
                    4071,
                    4070,
                    4070,
                    4068,
                    4030,
                    3996,
                    3950,
                    3941,
                    3912,
                    3903,
                    3900
                ]
            ],
            "y_data": [
                [
                    1909,
                    350,
                    1605,
                    1215,
                    3755,
                    1530,
                    660,
                    1510,
                    2225,
                    420,
                    610,
                    3931,
                    500,
                    1904,
                    420,
                    910,
                    500,
                    1540,
                    460,
                    450,
                    590
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the correlation between the height and prominence of mountains which do not belong to the range 'Aberdare Range'? Plot the result by a scatter chart."
        ]
    },
    "2346": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name"
        },
        "chart": "Pie",
        "hardness": "Extra Hard",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Olympus 15mm f/8.0 Body Cap",
                    "Sigma 19mm f2.8 EX DN"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?",
            "A pie chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?",
            "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a pie chart"
        ]
    },
    "2347": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Olympus 15mm f/8.0 Body Cap",
                    "Sigma 19mm f2.8 EX DN"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?",
            "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a bar chart",
            "A bar chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?"
        ]
    },
    "2348": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "pie",
            "x_name": "brand",
            "y_name": "COUNT(brand)",
            "x_data": [
                [
                    "Olympus",
                    "Panasonic",
                    "Schneider Kreuznach",
                    "Sigma"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY brand"
        },
        "nl_queries": [
            "Count the brand of each camera lens with a pie chart.",
            "Compute the total how many brand across brand as a pie chart."
        ]
    },
    "2349": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "brand",
            "y_name": "COUNT(brand)",
            "x_data": [
                [
                    "Olympus",
                    "Panasonic",
                    "Schneider Kreuznach",
                    "Sigma"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY brand"
        },
        "nl_queries": [
            "Group and count brand for each camera lens using a bar chart.",
            "Show the number of brand from each brand"
        ]
    },
    "2350": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT color , COUNT(color) FROM photos GROUP BY color",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT color , COUNT(color) FROM photos GROUP BY color"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "pie",
            "x_name": "color",
            "y_name": "COUNT(color)",
            "x_data": [
                [
                    "Black/White",
                    "RBG"
                ]
            ],
            "y_data": [
                [
                    2,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY color"
        },
        "nl_queries": [
            "Group and count the color scheme for all the photos using a pie chart.",
            "I want to know the proportion of the total number for each color."
        ]
    },
    "2351": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT color , COUNT(color) FROM photos GROUP BY color",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT color , COUNT(color) FROM photos GROUP BY color"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "color",
            "y_name": "COUNT(color)",
            "x_data": [
                [
                    "Black/White",
                    "RBG"
                ]
            ],
            "y_data": [
                [
                    2,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY color"
        },
        "nl_queries": [
            "Compare the number of items in each color scheme using a bar chart.",
            "Please draw a bar chart to show the total number of different color.",
            "Bar chart x axis color y axis the number of color"
        ]
    },
    "2359": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "director",
            "y_name": "count(*)",
            "x_data": [
                [
                    "",
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a pie chart on how many movie reviews does each director get?",
            "Give the proportion of how many movie reviews does each director get?",
            "How many movie reviews does each director get. Visualize by pie chart.",
            "For each director, how many reviews have they received. Visualize by pie chart."
        ]
    },
    "2360": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "count(*)",
            "x_data": [
                [
                    "",
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me a bar chart for how many movie reviews does each director get?",
            "Return a bar chart on how many movie reviews does each director get?",
            "How many movie reviews does each director get. Show bar chart.",
            "For each director, how many reviews have they received. Visualize by bar chart."
        ]
    },
    "2361": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT rID , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT rID , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "rID",
            "y_name": "stars",
            "x_data": [
                [
                    206,
                    207
                ],
                [
                    205,
                    208
                ],
                [
                    201,
                    204
                ],
                [
                    202
                ],
                [
                    203
                ]
            ],
            "y_data": [
                [
                    3,
                    5
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    2
                ]
            ],
            "classify": [
                "Avatar",
                "E.T.",
                "Gone with the Wind",
                "Snow White",
                "The Sound of Music"
            ],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Give me a scatter chart to show the star rating of the movie and reviewer id, group the title."
        ]
    },
    "2362": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT rID , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT rID , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "rID",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    206,
                    207
                ],
                [
                    205,
                    208
                ],
                [
                    201,
                    204
                ],
                [
                    202
                ],
                [
                    203
                ]
            ],
            "y_data": [
                [
                    3,
                    5
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    2
                ]
            ],
            "classify": [
                "Avatar",
                "E.T.",
                "Gone with the Wind",
                "Snow White",
                "The Sound of Music"
            ],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Give me a scatter chart to show the least rating star of the movie and reviewer id, group the title."
        ]
    },
    "2365": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "stars",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    3,
                    5
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    2
                ]
            ],
            "y_data": [
                [
                    3,
                    5
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    2
                ]
            ],
            "classify": [
                "Avatar",
                "E.T.",
                "Gone with the Wind",
                "Snow White",
                "The Sound of Music"
            ],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Give me a scatter chart to show the least rating star of the movie and the star rating of the movie, group the title."
        ]
    },
    "2368": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(stars)",
            "x_data": [
                [
                    "Avatar",
                    "E.T.",
                    "Gone with the Wind",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    8,
                    5,
                    5,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Visualize the title and and the total star rating of the movie using a bar chart.",
            "Please tell me the total star ratings of each movie title using a bar chart."
        ]
    },
    "2369": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(stars)",
            "x_data": [
                [
                    "Avatar",
                    "E.T.",
                    "Gone with the Wind",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    4,
                    2.5,
                    2.5,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Visualize the title and and the average star rating of the movie using a bar chart.",
            "Please tell me the average star ratings of each movie title using a bar chart.",
            "What are the average star ratings of each movie title? Could you return me a bar chart?"
        ]
    },
    "2370": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(min(T1.stars))",
            "x_data": [
                [
                    "Avatar",
                    "E.T.",
                    "Gone with the Wind",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    8,
                    5,
                    5,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Visualize the title and their total smallest ratings of the movie using a bar chart.",
            "Please return me a bar chart show what are the total smallest rating of different movie title? ",
            "Visualize the total smallest rating of different movie title using a bar chart."
        ]
    },
    "2371": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(min(T1.stars))",
            "x_data": [
                [
                    "Avatar",
                    "E.T.",
                    "Gone with the Wind",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    4,
                    2.5,
                    2.5,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Visualize the title and their average smallest ratings of the movie using a bar chart.",
            "Please return me a bar chart show what are the average smallest rating of different movie title?",
            "Visualize the average smallest rating of different movie title using a bar chart."
        ]
    },
    "2373": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "title",
            "y_name": "SUM(stars)",
            "x_data": [
                [
                    "Avatar",
                    "E.T.",
                    "Gone with the Wind",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    8,
                    5,
                    5,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Please tell me the total star ratings of each movie title using a pie chart.",
            "Visualize the title and and the total star rating of the movie using a pie chart."
        ]
    },
    "2374": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "title",
            "y_name": "SUM(min(T1.stars))",
            "x_data": [
                [
                    "Avatar",
                    "E.T.",
                    "Gone with the Wind",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    8,
                    5,
                    5,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Please return me a pie chart show what are the total smallest rating of different movie title?",
            "Visualize the title and their total smallest ratings of the movie using a pie chart.",
            "Visualize the total smallest rating of different movie title using a pie chart."
        ]
    },
    "2375": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY stars",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY stars"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "stars",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    2,
                    4,
                    2,
                    3,
                    2,
                    3,
                    5,
                    3
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    2,
                    3,
                    2,
                    3,
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a scatter chart to show the star rating of the movie and the smallest rating of movie."
        ]
    },
    "2376": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT rID , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT rID , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "rID",
            "y_name": "stars",
            "x_data": [
                [
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    2,
                    3,
                    2,
                    3,
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return me a scatter chart to show the star rating of the movie for each reviewer.",
            "For each reviewer id, show their corresponding rating for the movie in a scatter chart."
        ]
    },
    "2377": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT rID , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY rID",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT rID , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY rID"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "rID",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    2,
                    3,
                    2,
                    3,
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each reviewer id, show their corresponding the smallest rating for the movie in a scatter chart.",
            "Return me a scatter chart to show the smallest rating of the movie for each reviewer."
        ]
    },
    "2378": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT mID , avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = \"Brittany Harris\") GROUP BY mID",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT mID , avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = \"Brittany Harris\") GROUP BY mID"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "mID",
            "y_name": "avg(stars)",
            "x_data": [
                [
                    101,
                    104,
                    106,
                    107
                ]
            ],
            "y_data": [
                [
                    3,
                    2.5,
                    4.5,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the average rating star for each movie that are not reviewed by Brittany Harris. Plot them as scatter chart.",
            "Show me the correlation about what is the average rating for each movie that has never been reviewed by Brittany Harris?",
            "What is the average rating for each movie that has never been reviewed by Brittany Harris. "
        ]
    },
    "2379": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY stars",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY stars"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "stars",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show score of the movie with the lowest rating among all movies directed with a scatter chart."
        ]
    },
    "2380": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "title",
            "y_name": "stars",
            "x_data": [
                [
                    "Snow White",
                    "Avatar",
                    "The Sound of Music",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the title and score of the movie with a pie chart."
        ]
    },
    "2381": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "stars",
            "x_data": [
                [
                    "Snow White",
                    "Avatar",
                    "The Sound of Music",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the title and score of the movie with a bar chart.",
            "Draw a bar chart to compare the stars of each movie by title."
        ]
    },
    "2382": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "title",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "Snow White",
                    "Avatar",
                    "The Sound of Music",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the title and the lowest rating among all movies in a pie chart."
        ]
    },
    "2383": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "Snow White",
                    "Avatar",
                    "The Sound of Music",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the title and the lowest rating among all movies in a bar chart.",
            "Compare the lowest rating among all movies by each title using a histogram."
        ]
    },
    "2384": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "director",
            "y_name": "stars",
            "x_data": [
                [
                    "",
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the stars of each director by a pie chart."
        ]
    },
    "2385": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "stars",
            "x_data": [
                [
                    "",
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the stars of each director by a bar chart.",
            "Please give me a bar chart to compare the stars by directors."
        ]
    },
    "2386": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "director",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "",
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the director and their lowest rating among all movies in a pie chart."
        ]
    },
    "2387": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "",
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the director and their lowest rating among all movies in a bar chart.",
            "Compare the lowest rating among all movies by each director using a bar chart.",
            "Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies. "
        ]
    },
    "2388": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "stars",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    3
                ],
                [
                    2
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    2
                ]
            ],
            "y_data": [
                [
                    3
                ],
                [
                    2
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    2
                ]
            ],
            "classify": [
                "Avatar",
                "Gone with the Wind",
                "Raiders of the Lost Ark",
                "Snow White",
                "The Sound of Music"
            ],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Show the score of the movie with the lowest rating among all movies directed by each title with a scatter chart."
        ]
    },
    "2389": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "stars",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    4
                ],
                [
                    3
                ],
                [
                    2
                ],
                [
                    2
                ],
                [
                    2
                ]
            ],
            "y_data": [
                [
                    4
                ],
                [
                    3
                ],
                [
                    2
                ],
                [
                    2
                ],
                [
                    2
                ]
            ],
            "classify": [
                "",
                "James Cameron",
                "Robert Wise",
                "Steven Spielberg",
                "Victor Fleming"
            ],
            "describe": "GROUP BY director"
        },
        "nl_queries": [
            "Show the score of the movie with the lowest rating among all movies directed by each director with a scatter chart."
        ]
    },
    "2390": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT stars , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY stars",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT stars , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY stars"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "stars",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    5,
                    3,
                    4,
                    4
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each director, return the highest rating among all of movies and the value of that rating by a scatter chart. Ignore movies whose director is NULL."
        ]
    },
    "2391": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\"",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\""
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "title",
            "y_name": "stars",
            "x_data": [
                [
                    "Avatar",
                    "The Sound of Music",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Ignore movies whose director is NULL. For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a pie chart."
        ]
    },
    "2392": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\"",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\""
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "stars",
            "x_data": [
                [
                    "Avatar",
                    "The Sound of Music",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            " Ignore movies whose director is NULL. For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a bar chart."
        ]
    },
    "2393": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "title",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    "Avatar",
                    "The Sound of Music",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Ignore movies whose director is NULL. For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a pie chart."
        ]
    },
    "2394": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    "Avatar",
                    "The Sound of Music",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Ignore movies whose director is NULL. For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a bar chart."
        ]
    },
    "2395": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\"",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\""
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "director",
            "y_name": "stars",
            "x_data": [
                [
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each director, return the director's name together with the value of that rating and ignore movies whose director is NULL. Could you plot the result with a pie chart?"
        ]
    },
    "2396": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\"",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\""
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "stars",
            "x_data": [
                [
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each director, return the director's name together with the value of that rating and ignore movies whose director is NULL. Could you plot the result with a bar chart?"
        ]
    },
    "2397": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "director",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each director, return the director's name together with  the highest rating among all of their movies and ignore movies whose director is NULL. Could you plot the result with a pie chart?"
        ]
    },
    "2398": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each director, return the director's name together with the highest rating among all of their movies and ignore movies whose director is NULL. Could you plot the result with a bar chart?"
        ]
    },
    "2399": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT stars , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT stars , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title"
        },
        "chart": "Grouping Scatter",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "stars",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    5
                ],
                [
                    4
                ],
                [
                    4
                ],
                [
                    3
                ]
            ],
            "y_data": [
                [
                    5
                ],
                [
                    4
                ],
                [
                    4
                ],
                [
                    3
                ]
            ],
            "classify": [
                "Avatar",
                "Gone with the Wind",
                "Raiders of the Lost Ark",
                "The Sound of Music"
            ],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "For each director, return the highest rating among all of their movies and the value of that rating, group by title in a scatter, and Ignore movies whose director is NULL."
        ]
    },
    "2400": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT stars , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT stars , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director"
        },
        "chart": "Grouping Scatter",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "stars",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    5
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    4
                ]
            ],
            "y_data": [
                [
                    5
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    4
                ]
            ],
            "classify": [
                "James Cameron",
                "Robert Wise",
                "Steven Spielberg",
                "Victor Fleming"
            ],
            "describe": "GROUP BY director"
        },
        "nl_queries": [
            "For each director, return the highest rating among all of their movies and the value of that rating, group by director in a scatter, and Ignore movies whose director is NULL."
        ]
    },
    "2401": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT mID , avg(stars) FROM Rating GROUP BY mID",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT mID , avg(stars) FROM Rating GROUP BY mID"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "mID",
            "y_name": "avg(stars)",
            "x_data": [
                [
                    101,
                    103,
                    104,
                    106,
                    107,
                    108
                ]
            ],
            "y_data": [
                [
                    3,
                    2.5,
                    2.5,
                    4.5,
                    4,
                    3.333333333333333
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the average rating star for each movie that received at least 2 ratings. ",
            "For each movie that received more than 3 reviews, what is the average rating. Show scatter chart.",
            "Show me a scatter plot of mid and mean stars for ."
        ]
    },
    "2402": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "avg(T1.stars)",
            "x_data": [
                [
                    "Ashley White",
                    "Brittany Harris",
                    "Chris Jackson",
                    "Daniel Lewis",
                    "Elizabeth Thomas",
                    "James Cameron",
                    "Mike Anderson",
                    "Sarah Martinez"
                ]
            ],
            "y_data": [
                [
                    3,
                    2.6666666666666665,
                    3,
                    4,
                    4,
                    5,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart for what is the average rating star for each reviewer?",
            "A bar chart about what is the average rating star for each reviewer?",
            "What is the average rating star for each reviewer. ",
            "Return a histogram on what is the average number of stars that each reviewer awards for a movie?",
            "Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?",
            "What is the average number of stars that each reviewer awards for a movie. Show bar chart."
        ]
    },
    "2403": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars >= 4  ORDER BY T1.year",
                "binning": "BIN year BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars >= 4  ORDER BY T1.year BIN year BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    2,
                    1,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN year BY WEEKDAY"
        },
        "nl_queries": [
            "Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order of year, and count them by a bar chart",
            "In what years did a movie receive a 4 or 5 star rating, and list the years from oldest to most recently, and count them by a bar chart"
        ]
    },
    "2404": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars >= 4  ORDER BY T1.year",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars >= 4  ORDER BY T1.year BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "1937~1943",
                    "1944~1950",
                    "1951~1957",
                    "1958~1964",
                    "1965~1971",
                    "1972~1978",
                    "1979~1985",
                    "1986~1992",
                    "1993~1999",
                    "2000~2006",
                    "2007~2009"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order of year, and count them by a line chart",
            "In what years did a movie receive a 4 or 5 star rating, and list the years from oldest to most recently, and count them by a line chart"
        ]
    },
    "2405": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "Avatar",
                    "E.T.",
                    "Gone with the Wind",
                    "Raiders of the Lost Ark",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "What are the titles of all movies that have rating star is between 3 and 5, and count them by a bar chart",
            "A bar chart for what are the number of the titles of all movies that have between 3 and 5 stars?",
            "What are the number of the titles of all movies that have between 3 and 5 stars?",
            "A bar chart for what are the number of the titles of all movies that have rating star is between 3 and 5?",
            "What are the number of the titles of all movies that have rating star is between 3 and 5?",
            "What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart"
        ]
    },
    "2408": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title BIN year BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "1981~1983",
                    "1984~1986",
                    "1987~1989",
                    "1990~1992",
                    "1993~1995",
                    "1996~1998",
                    "1999~2001",
                    "2002~2004",
                    "2005~2007",
                    "2008~2009"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    2
                ],
                [
                    3,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    2
                ],
                [
                    4,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    2
                ],
                [
                    4,
                    0,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0,
                    0,
                    2
                ]
            ],
            "classify": [
                "Avatar",
                "E.T.",
                "Raiders of the Lost Ark",
                "Titanic"
            ],
            "describe": "GROUP BY title, BIN year BY YEAR"
        },
        "nl_queries": [
            "For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title. The result can be drawn as a trend line.",
            "For each director who directed more than one movie, for each movie title, bin their dates of release into Year interval and count the total number in each bucket using a line chart."
        ]
    },
    "2409": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "1981~1983",
                    "1984~1986",
                    "1987~1989",
                    "1990~1992",
                    "1993~1995",
                    "1996~1998",
                    "1999~2001",
                    "2002~2004",
                    "2005~2007",
                    "2008~2009"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "For directors who had more than one movie, bin the dates of release into Year interval and them compute the total number of movies in each year bucket. Show me the result using a line chart."
        ]
    },
    "2543": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "perpetrator",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "China",
                    "India",
                    "Japan",
                    "South Korea"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a pie chart with what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.",
            "Show me the proportion on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.",
            "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there. ",
            "I want to know the proportion of the total number for each country."
        ]
    },
    "2544": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "perpetrator",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "China",
                    "India",
                    "Japan",
                    "South Korea"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a bar chart on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.",
            "Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.",
            "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there. Plot them as bar chart.",
            "Bar chart x axis country y axis the total number "
        ]
    },
    "2595": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "pie",
            "x_name": "attribute_name",
            "y_name": "COUNT(attribute_name)",
            "x_data": [
                [
                    "Black",
                    "Sweet",
                    "Yellow"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY attribute_name"
        },
        "nl_queries": [
            "Compute how many attributes in each name of the attribute definitions with attribute value 0. Show the result with a pie chart.",
            "Which attribute definitions have attribute value 0? Give me the proportion of each attribute name."
        ]
    },
    "2596": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "attribute_name",
            "y_name": "COUNT(attribute_name)",
            "x_data": [
                [
                    "Black",
                    "Sweet",
                    "Yellow"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY attribute_name"
        },
        "nl_queries": [
            "Compute how many attributes in each name of the attribute definitions with attribute value 0. Show the result with a bar chart.",
            "Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name."
        ]
    },
    "2600": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name",
                "binning": "BIN date_of_publication BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name BIN date_of_publication BY YEAR"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_publication",
            "y_name": "COUNT(date_of_publication)",
            "x_data": [
                [
                    "2011",
                    "2012"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ],
                [
                    2,
                    2
                ]
            ],
            "classify": [
                "Coffee Bean",
                "Jam"
            ],
            "describe": "GROUP BY catalog_name, BIN date_of_publication BY YEAR"
        },
        "nl_queries": [
            "Find the names and publication dates of all catalogs that have catalog level number greater than 5. Bin publication dates into Year interval, and count catalog and group by catalog name."
        ]
    },
    "2601": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5",
                "binning": "BIN date_of_publication BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 BIN date_of_publication BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_publication",
            "y_name": "COUNT(date_of_publication)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_publication BY WEEKDAY"
        },
        "nl_queries": [
            "Find the names and publication dates of all catalogs that have catalog level numbers greater than 5. Bin publication dates into Year interval, and count catalog as a bar chart."
        ]
    },
    "2602": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs",
                "binning": "BIN date_of_latest_revision BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs BIN date_of_latest_revision BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_latest_revision",
            "y_name": "COUNT(date_of_latest_revision)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    0,
                    2,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_latest_revision BY WEEKDAY"
        },
        "nl_queries": [
            "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a bar chart.",
            "Bar chart x axis date of latest revision y axis the number of date of latest revision"
        ]
    },
    "2603": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs",
                "binning": "BIN date_of_latest_revision BY MONTH"
            },
            "VQL": "Visualize LINE SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs BIN date_of_latest_revision BY MONTH"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_latest_revision",
            "y_name": "COUNT(date_of_latest_revision)",
            "x_data": [
                [
                    "Mar",
                    "Apr",
                    "May",
                    "June",
                    "July",
                    "Aug",
                    "Sept",
                    "Oct",
                    "Nov",
                    "Dec"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_latest_revision BY MONTH"
        },
        "nl_queries": [
            "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a line chart.",
            "On which days more than one revisions were made on catalogs, bin the date into weekday interval and count them to show the trend.",
            "Plot date of latest revision by the number of date of latest revision as a line chart"
        ]
    },
    "2604": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "pie",
            "x_name": "catalog_level_name",
            "y_name": "catalog_level_number",
            "x_data": [
                [
                    "Sub-Category",
                    "Product"
                ]
            ],
            "y_data": [
                [
                    8,
                    9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and level of catalog structure with level between 5 and 10. ",
            "Draw a pie chart for what are the name and level of catalog structure with level number between 5 and 10",
            "Show me the proportion on what are the name and level of catalog structure with level number between 5 and 10",
            "What are the name and level of catalog structure with level number between 5 and 1. Show a pie chart."
        ]
    },
    "2605": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_level_name",
            "y_name": "catalog_level_number",
            "x_data": [
                [
                    "Sub-Category",
                    "Product"
                ]
            ],
            "y_data": [
                [
                    8,
                    9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and level of catalog structure with level between 5 and 10. ",
            "Visualize a bar chart for what are the name and level of catalog structure with level number between 5 and 10",
            "Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10",
            "What are the name and level of catalog structure with level number between 5 and 1. Show bar chart."
        ]
    },
    "2606": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "pie",
            "x_name": "catalog_entry_name",
            "y_name": "capacity",
            "x_data": [
                [
                    "Vimto",
                    "Sprite Lemo",
                    "Dr Pepper",
                    "Diet Pepsi",
                    "Diet Mountain Dew"
                ]
            ],
            "y_data": [
                [
                    6,
                    8,
                    1,
                    9,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and capacity of products with price greater than 700 (in USD). Visualize by pie chart.",
            "Pie. which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities with a pie chart.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities. Show the proportion."
        ]
    },
    "2607": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_entry_name",
            "y_name": "capacity",
            "x_data": [
                [
                    "Vimto",
                    "Sprite Lemo",
                    "Dr Pepper",
                    "Diet Pepsi",
                    "Diet Mountain Dew"
                ]
            ],
            "y_data": [
                [
                    6,
                    8,
                    1,
                    9,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and capacity of products with price greater than 700 (in USD). Show bar chart.",
            "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.",
            "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities. "
        ]
    },
    "2608": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "pie",
            "x_name": "catalog_entry_name",
            "y_name": "COUNT(catalog_entry_name)",
            "x_data": [
                [
                    "Carbonated Water",
                    "Cola",
                    "Ginger Beer",
                    "Root beer"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY catalog_entry_name"
        },
        "nl_queries": [
            "What are the names of catalog entries with level number 8, and count them by a pie chart",
            "Find the names of catalog entries with level number 8, and count them by a pie chart",
            "A pie chart for finding the number of the names of catalog entries with level number 8.",
            "Find the number of the names of catalog entries with level number 8.",
            "A pie chart for what are the number of the names of catalog entries with level number 8?",
            "What are the number of the names of catalog entries with level number 8?"
        ]
    },
    "2609": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_entry_name",
            "y_name": "COUNT(catalog_entry_name)",
            "x_data": [
                [
                    "Carbonated Water",
                    "Cola",
                    "Ginger Beer",
                    "Root beer"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY catalog_entry_name"
        },
        "nl_queries": [
            "What are the names of catalog entries with level number 8, and count them by a bar chart",
            "A bar chart for finding the number of the names of catalog entries with level number 8.",
            "Find the names of catalog entries with level number 8, and count them by a bar chart",
            "Find the number of the names of catalog entries with level number 8.",
            "A bar chart for what are the number of the names of catalog entries with level number 8?",
            "What are the number of the names of catalog entries with level number 8?"
        ]
    },
    "2626": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Citizens Bank Building",
                    "Tampa City Hall",
                    "Floridan Hotel",
                    "Franklin Exchange Building",
                    "Park Tower",
                    "One Tampa City Center",
                    "100 North Tampa"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each building, show the name of the building and the number of institutions in it. Plot them as bar chart."
        ]
    },
    "2629": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Private",
                    "Public",
                    "Tribal"
                ]
            ],
            "y_data": [
                [
                    7,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Please give me a bar chart showing institution types, along with the number of institutions for each type.",
            "Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart.",
            "Draw a bar chart of type versus the total number "
        ]
    },
    "2630": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Type",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "Private",
                    "Public",
                    "Tribal"
                ]
            ],
            "y_data": [
                [
                    7868,
                    5267,
                    1000
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Please give me a pie chart showing institution types, along with the total enrollment for each type.",
            "Please tell me the proportion of total enrollment for each type using a pie chart.",
            "Give me a pie to show sum enrollment from different type."
        ]
    },
    "2631": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "Private",
                    "Public",
                    "Tribal"
                ]
            ],
            "y_data": [
                [
                    7868,
                    5267,
                    1000
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Please give me a bar chart showing institution types, along with the total enrollment for each type.",
            "Please compare the total enrollment for each type using a bar chart.",
            "Bar chart x axis type y axis total number of enrollment"
        ]
    },
    "2632": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Type , count(*) FROM institution GROUP BY TYPE"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Private",
                    "Public",
                    "Tribal"
                ]
            ],
            "y_data": [
                [
                    7,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Please tell me the proportion of the number of institutions for each type using a pie chart.",
            "Please give me a pie chart showing institution types, along with the number of institutions for each type.",
            "Compute the total the total number across type as a pie chart."
        ]
    },
    "2633": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT count(*) , sum(enrollment) FROM institution GROUP BY TYPE",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM institution GROUP BY TYPE"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "count(*)",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    7,
                    3,
                    1
                ]
            ],
            "y_data": [
                [
                    7868,
                    5267,
                    1000
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the relationship between the number of institutions and total enrollment for each type with a scatter plot.",
            "Give me a scatter to show the correlations between the number of institutions and total enrollment for each type.",
            "Scatter plot to show count(*) on x axis and total number of enrollment on y axis."
        ]
    },
    "2634": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT count(*) , sum(enrollment) FROM institution GROUP BY Type",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM institution GROUP BY Type"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "count(*)",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    7
                ],
                [
                    3
                ],
                [
                    1
                ]
            ],
            "y_data": [
                [
                    7868
                ],
                [
                    5267
                ],
                [
                    1000
                ]
            ],
            "classify": [
                "Private",
                "Public",
                "Tribal"
            ],
            "describe": "GROUP BY Type"
        },
        "nl_queries": [
            "Show the relationship between the number of institutions and total enrollment for each type with a scatter plot.",
            "Give me a scatter to show the correlations between the number of institutions and total enrollment for each type.",
            "Show count(*) vs sum enrollment as scatter plot use a different color for each Type"
        ]
    },
    "2635": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "Height_feet",
            "x_data": [
                [
                    "Citizens Bank Building",
                    "Tampa City Hall",
                    "One Tampa City Center"
                ]
            ],
            "y_data": [
                [
                    145,
                    160,
                    537
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the names and heights of buildings with at least two institutions founded after 1880 in a pie chart.",
            "Show the names and heights of buildings with at least two institutions founded after 1880. Show the proportion."
        ]
    },
    "2636": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Height_feet",
            "x_data": [
                [
                    "Citizens Bank Building",
                    "Tampa City Hall",
                    "One Tampa City Center"
                ]
            ],
            "y_data": [
                [
                    145,
                    160,
                    537
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart.",
            "Show the names and heights of buildings with at least two institutions founded after 1880. Plot them as bar chart."
        ]
    },
    "2637": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Floors FROM building ORDER BY floors",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Floors FROM building ORDER BY floors"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Floors",
            "x_data": [
                [
                    "Tampa City Hall",
                    "Citizens Bank Building",
                    "Floridan Hotel",
                    "Franklin Exchange Building",
                    "Park Tower",
                    "One Tampa City Center",
                    "Bank of America Tower",
                    "100 North Tampa"
                ]
            ],
            "y_data": [
                [
                    10,
                    12,
                    17,
                    22,
                    36,
                    39,
                    42,
                    42
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a bar chart that the name as the X-axis, and the number of floors for all buildings as Y-axis, and ordered by the number of floors.",
            "Please compare the number of floors for all building names using a bar chart, and order by the number of floors."
        ]
    },
    "2638": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Street_address , Floors FROM building ORDER BY floors",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Street_address , Floors FROM building ORDER BY floors"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Street_address",
            "y_name": "Floors",
            "x_data": [
                [
                    "315 John F. Kennedy Boulevard",
                    "701 North Franklin Street",
                    "905 Franklin Street",
                    "655 North Franklin Street",
                    "400 North Tampa Street",
                    "201 North Franklin Street",
                    "101 East Kennedy Boulevard",
                    "100 North Tampa Street"
                ]
            ],
            "y_data": [
                [
                    10,
                    12,
                    17,
                    22,
                    36,
                    39,
                    42,
                    42
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Please compare the number of floors for all street address using a bar chart, and order by the number of floors.",
            "Return a bar chart that the street address as the X-axis, and the number of floors for all buildings as Y-axis, and ordered by the number of floors."
        ]
    },
    "2639": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Institution",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Dakota State University",
                    "Haskell Indian Nations University",
                    "Lindenwood University–Belleville",
                    "Valley City State University"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show institution names along with the number of proteins for each institution by a pie chart.",
            "Show institution names along with the number of proteins for each institution. Plot them as pie chart."
        ]
    },
    "2640": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Institution",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Dakota State University",
                    "Haskell Indian Nations University",
                    "Lindenwood University–Belleville",
                    "Valley City State University"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show institution names along with the number of proteins for each institution in a bar chart.",
            "Show institution names along with the number of proteins for each institution. "
        ]
    },
    "2641": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Auto Club Speedway",
                    "Chicagoland Speedway",
                    "Daytona International Speedway",
                    "Homestead-Miami Speedway",
                    "Kansas Speedway",
                    "Martinsville Speedway"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the name of track and the number of races in each track by a bar chart.",
            "Show the name of track and the number of races in each track. Visualize by bar chart.",
            "Return a histogram on what are the names of different tracks, and how many races has each had?",
            "Visualize a bar chart for what are the names of different tracks, and how many races has each had?",
            "What are the names of different tracks, and how many races has each had. Plot them as bar chart."
        ]
    },
    "2642": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Class , COUNT(Class) FROM race GROUP BY Class"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Class",
            "y_name": "COUNT(Class)",
            "x_data": [
                [
                    "DP/GT",
                    "GT"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Class"
        },
        "nl_queries": [
            "Show me the proportion of classes of all races using a pie chart.",
            "What is the proportion of classes of all races? Give me a pie chart.",
            "Create a pie chart showing how many class across class."
        ]
    },
    "2643": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "COUNT(Class)",
            "x_data": [
                [
                    "DP/GT",
                    "GT"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Class"
        },
        "nl_queries": [
            "Show me how many in each class of all races using a bar chart.",
            "Create a bar chart showing how many class across class"
        ]
    },
    "2645": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , Seating FROM track WHERE year_opened > 2000"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "Seating",
            "x_data": [
                [
                    "Chicagoland Speedway",
                    "Kansas Speedway"
                ]
            ],
            "y_data": [
                [
                    75000,
                    81687
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show names and seatings for all tracks opened after 2000 by a pie chart.",
            "Show names and seatings for all tracks opened after 2000. ",
            "Show me the proportion on what are the names and seatings for all tracks opened after 2000?",
            "Visualize a pie chart with what are the names and seatings for all tracks opened after 2000?",
            "What are the names and seatings for all tracks opened after 2000, ordered by seating. Show the proportion."
        ]
    },
    "2646": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Seating",
            "x_data": [
                [
                    "Chicagoland Speedway",
                    "Kansas Speedway"
                ]
            ],
            "y_data": [
                [
                    75000,
                    81687
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show names and seatings, ordered by seating for all tracks opened after 2000 in a bar chart.",
            "Show names and seatings, ordered by seating for all tracks opened after 2000. Plot them as bar chart.",
            "Return a histogram on what are the names and seatings for all tracks opened after 2000, ordered by seating?",
            "Return a bar chart on what are the names and seatings for all tracks opened after 2000, ordered by seating?",
            "What are the names and seatings for all tracks opened after 2000, ordered by seating. Visualize by bar chart."
        ]
    },
    "2647": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Class , count(*) FROM race GROUP BY CLASS"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Class",
            "y_name": "count(*)",
            "x_data": [
                [
                    "DP/GT",
                    "GT"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the race class and number of races in each class in a pie chart.",
            "Show the race class and number of races in each class. ",
            "Display a pie chart for what are the different classes of races, and how many races correspond to each?",
            "Visualize a pie chart with what are the different classes of races, and how many races correspond to each?",
            "What are the different classes of races, and how many races correspond to each. Show the proportion.",
            "Compute the total the total number across class as a pie chart."
        ]
    },
    "2648": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "count(*)",
            "x_data": [
                [
                    "DP/GT",
                    "GT"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the race class and number of races in each class with a bar chart.",
            "Show the race class and number of races in each class. ",
            "Visualize a bar chart for what are the different classes of races, and how many races correspond to each?",
            "Draw a bar chart for what are the different classes of races, and how many races correspond to each?",
            "What are the different classes of races, and how many races correspond to each. Show bar chart.",
            "Give me a bar chart for the total number of each class"
        ]
    },
    "2779": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY player_name ORDER BY potential DESC LIMIT 5",
                "binning": "BIN birthday BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY player_name ORDER BY potential DESC LIMIT 5 BIN birthday BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "soccer_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "birthday",
            "y_name": "COUNT(birthday)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [
                "Cristiano Ronaldo",
                "James Rodriguez",
                "Lionel Messi",
                "Neymar",
                "Paul Pogba"
            ],
            "describe": "GROUP BY player_name, BIN birthday BY WEEKDAY"
        },
        "nl_queries": [
            "Find the top five players in terms of potential, bin the birthday into weekday interval, and count the birthday grouping by player's name."
        ]
    },
    "2780": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5",
                "binning": "BIN birthday BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5 BIN birthday BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "soccer_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "birthday",
            "y_name": "COUNT(birthday)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    0,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN birthday BY WEEKDAY"
        },
        "nl_queries": [
            "For the top five players in terms of potential, bin their birthday into weekday interval, and show me the distribution of their birthday.",
            "For the top five players in terms of potential, bin their birthday into weekday interval count them using a bar graph."
        ]
    },
    "2781": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY player_name ORDER BY potential DESC LIMIT 5",
                "binning": "BIN birthday BY YEAR"
            },
            "VQL": "Visualize LINE SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY player_name ORDER BY potential DESC LIMIT 5 BIN birthday BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "soccer_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "birthday",
            "y_name": "COUNT(birthday)",
            "x_data": [
                [
                    "1985",
                    "1986",
                    "1987",
                    "1988",
                    "1989",
                    "1990",
                    "1991",
                    "1992",
                    "1993"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1
                ],
                [
                    2,
                    0,
                    1,
                    0,
                    0,
                    0,
                    2,
                    1,
                    1
                ],
                [
                    2,
                    0,
                    2,
                    0,
                    0,
                    0,
                    2,
                    1,
                    1
                ],
                [
                    2,
                    0,
                    2,
                    0,
                    0,
                    0,
                    2,
                    2,
                    1
                ],
                [
                    2,
                    0,
                    2,
                    0,
                    0,
                    0,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [
                "Cristiano Ronaldo",
                "James Rodriguez",
                "Lionel Messi",
                "Neymar",
                "Paul Pogba"
            ],
            "describe": "GROUP BY player_name, BIN birthday BY YEAR"
        },
        "nl_queries": [
            "Find the top five players in terms of potential, bin the birthday into YEAR interval, and count the birthday grouping by player's name."
        ]
    },
    "2782": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5",
                "binning": "BIN birthday BY YEAR"
            },
            "VQL": "Visualize LINE SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5 BIN birthday BY YEAR"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "soccer_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "birthday",
            "y_name": "COUNT(birthday)",
            "x_data": [
                [
                    "1985",
                    "1986",
                    "1987",
                    "1988",
                    "1989",
                    "1990",
                    "1991",
                    "1992",
                    "1993"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN birthday BY YEAR"
        },
        "nl_queries": [
            "For the top five players in terms of potential, bin their birthday into YEAR interval, and show me the distribution of their birthday.",
            "For the top five players in terms of potential, bin their birthday into YEAR interval count them using a trend line."
        ]
    },
    "2783": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "soccer_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "preferred_foot",
            "y_name": "count(*)",
            "x_data": [
                [
                    "left",
                    "right"
                ]
            ],
            "y_data": [
                [
                    1606,
                    5955
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            ""
        ]
    },
    "2784": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "soccer_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "preferred_foot",
            "y_name": "count(*)",
            "x_data": [
                [
                    "left",
                    "right"
                ]
            ],
            "y_data": [
                [
                    1606,
                    5955
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            ""
        ]
    },
    "2858": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Headquartered_City",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Bahawalpur City",
                    "Bhakkar City",
                    "Hafizabad City",
                    "Khanewal City"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of stores in each city. Visualize by pie chart.",
            "Display a pie chart for how many stores are headquarted in each city?",
            "How many stores are headquarted in each city. Show a pie chart."
        ]
    },
    "2859": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquartered_City",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Bahawalpur City",
                    "Bhakkar City",
                    "Hafizabad City",
                    "Khanewal City"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of stores in each city. Plot them as bar chart.",
            "Draw a bar chart for how many stores are headquarted in each city?",
            "Return a bar chart on how many stores are headquarted in each city?",
            "How many stores are headquarted in each city. Plot them as bar chart."
        ]
    },
    "2860": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "District_name",
            "y_name": "City_Population",
            "x_data": [
                [
                    "Bahawalpur District",
                    "Chiniot District",
                    "Dera Ghazi Khan District",
                    "Gujranwala District",
                    "Gujrat District",
                    "Jhang District",
                    "Kasur District"
                ]
            ],
            "y_data": [
                [
                    530438,
                    219254,
                    464742,
                    1526168,
                    328512,
                    365198,
                    314617
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and population of districts with population between 200000 and 200000. Show a bar chart.",
            "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?",
            "Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?",
            "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents? Show a bar graph."
        ]
    },
    "2861": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Type , count(*) FROM store GROUP BY TYPE"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "City Mall",
                    "Village Store"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find all types of store and number of them. Show the proportion.",
            "For each type of store, how many of them are there. Show a pie chart.",
            "I want to know the proportion of the total number for each type."
        ]
    },
    "2862": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "City Mall",
                    "Village Store"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find all types of store and number of them. Visualize by bar chart.",
            "For each type of store, how many of them are there. Plot them as bar chart.",
            "Bar chart x axis type y axis the total number "
        ]
    },
    "2932": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Vijay Singh",
                    "John Daly",
                    "Paul Azinger",
                    "Jeff Sluman",
                    "Nick Price"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all artist names and the number of exhibitions for each artist in a pie chart.",
            "Show all artist names and the number of exhibitions for each artist. ",
            "how many exhibitions has each artist had?",
            "Display a pie chart for how many exhibitions has each artist had?",
            "How many exhibitions has each artist had. Show the proportion."
        ]
    },
    "2933": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Vijay Singh",
                    "John Daly",
                    "Paul Azinger",
                    "Jeff Sluman",
                    "Nick Price"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all artist names and the number of exhibitions for each artist in a bar chart.",
            "Show all artist names and the number of exhibitions for each artist. Show bar chart.",
            "how many exhibitions has each artist had?",
            "Return a histogram on how many exhibitions has each artist had?",
            "How many exhibitions has each artist had. Plot them as bar chart."
        ]
    },
    "2934": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Date , Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Date , Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Date",
            "y_name": "Attendance",
            "x_data": [
                [
                    "December 2",
                    "December 5",
                    "December 7"
                ]
            ],
            "y_data": [
                [
                    965,
                    1098,
                    2983
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find dates and attendance for exhibitions that happened in 2004, show me the proportion of attendance by date."
        ]
    },
    "2935": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Attendance",
            "x_data": [
                [
                    "December 2",
                    "December 5",
                    "December 7"
                ]
            ],
            "y_data": [
                [
                    965,
                    1098,
                    2983
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart.",
            "Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date."
        ]
    },
    "2936": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name"
        },
        "chart": "Stacked Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year_Join",
            "y_name": "COUNT(Year_Join)",
            "x_data": [
                [
                    "1994",
                    "1995",
                    "1996",
                    "1997",
                    "1998"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    0,
                    0,
                    1
                ],
                [
                    2,
                    0,
                    0,
                    0,
                    2
                ]
            ],
            "classify": [
                "Nick Price",
                "Vijay Singh"
            ],
            "describe": "GROUP BY Name, BIN Year_Join BY TIME"
        },
        "nl_queries": [
            "For artist names who are not from United States, show me a stacked that the x-axis is the Year_Join and the group by name in Y.",
            "For artist names who are not from the United States, how many names in each year?"
        ]
    },
    "2937": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year_Join",
            "y_name": "COUNT(Year_Join)",
            "x_data": [
                [
                    "1994",
                    "1995",
                    "1996",
                    "1997",
                    "1998"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Year_Join BY TIME"
        },
        "nl_queries": [
            "For all artist names who are not from the United States, show the total number of each year.",
            "For all artist names who are not from the United States, show the total number of each year with a bar chart."
        ]
    },
    "2940": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM artist GROUP BY Country"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Fiji",
                    "United States",
                    "Zimbabwe"
                ]
            ],
            "y_data": [
                [
                    1,
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Show all countries with a pie chart.",
            "What is the proportion of the number of countries in the artist table?",
            "Give me a pie chart about the proportion of the number of countries in the artist table",
            "Create a pie chart showing how many country across country."
        ]
    },
    "2941": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Fiji",
                    "United States",
                    "Zimbabwe"
                ]
            ],
            "y_data": [
                [
                    1,
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Compare all countries with a bar chart.",
            "What is the number of countries in the artist table?",
            "Give me a bar chart about the number of countries in the artist table",
            "Show how many country from each country"
        ]
    },
    "2943": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "Fiji",
                    "United States",
                    "Zimbabwe"
                ]
            ],
            "y_data": [
                [
                    45,
                    49.6,
                    48
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Show the average of artists' age by country.",
            "What are the average ages of artists by countries? Visualize the result with a histogram.",
            "Compare the average of artists' age by country in a bar graph.",
            "Bar chart x axis country y axis the average of age"
        ]
    },
    "2944": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM artist",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM artist"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Larry Nelson",
                    "Jeff Sluman",
                    "John Daly",
                    "Paul Azinger",
                    "Nick Price",
                    "Mark Brooks",
                    "Vijay Singh"
                ]
            ],
            "y_data": [
                [
                    50,
                    57,
                    46,
                    47,
                    48,
                    48,
                    45
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all artist names and ages in a histogram.",
            "What are the names and ages of artists? Show the result in a bar graph.",
            "A bar chart compares the ages of all artists.",
            "Bar chart x axis name y axis age"
        ]
    },
    "2946": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme"
        },
        "chart": "Stacked Bar",
        "hardness": "Easy",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    1
                ],
                [
                    1,
                    2,
                    1,
                    2,
                    1,
                    1
                ],
                [
                    2,
                    2,
                    1,
                    2,
                    1,
                    1
                ],
                [
                    2,
                    2,
                    2,
                    2,
                    1,
                    1
                ],
                [
                    2,
                    2,
                    2,
                    2,
                    2,
                    1
                ],
                [
                    2,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [
                "Christmas Tree",
                "Christmas stocking",
                "Santa Claus",
                "Santa Claus and Rudolph the Red-Nosed Reindeer",
                "Spring",
                "Summer"
            ],
            "describe": "GROUP BY Theme, BIN Year BY TIME"
        },
        "nl_queries": [
            "Group by the theme and count the year with a stacked bar chart.",
            "Stacked bar of year and the number of year colored by Theme"
        ]
    },
    "2948": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM exhibition GROUP BY Year",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition GROUP BY Year"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    0,
                    2,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bin the Year into weekday interval, then group and count by Year.",
            "Give a bar chart that bins year into weekday interval, group by year and count them.",
            "Show me how many year by year in a histogram"
        ]
    },
    "2949": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme"
        },
        "chart": "Stacked Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "2006",
                    "2007",
                    "2008",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    0,
                    1
                ],
                [
                    2,
                    0,
                    0,
                    2
                ]
            ],
            "classify": [
                "Santa Claus and Rudolph the Red-Nosed Reindeer",
                "Summer"
            ],
            "describe": "GROUP BY Theme, BIN Year BY TIME"
        },
        "nl_queries": [
            "Find those themes and years for all exhibitions with ticket prices lower than 15, group by themes, count year, and the x-axis is Year.",
            "Find those themes and years for all exhibitions with ticket prices lower than 15, show me a stacked bar chart that groups by themes, counts year, and the x-axis is Year."
        ]
    },
    "2950": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "2006",
                    "2007",
                    "2008",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Year BY TIME"
        },
        "nl_queries": [
            "Find those years for all exhibitions with ticket prices lower than 15, group by year, and count year.",
            "Find those years for all exhibitions with ticket prices lower than 15, return a bar chart that groups by year and counts the total number of years."
        ]
    },
    "2953": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "pie",
            "x_name": "organisation_details",
            "y_name": "COUNT(organisation_details)",
            "x_data": [
                [
                    "a",
                    "eius",
                    "itaque",
                    "officiis",
                    "quo"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "For all organizations that have grants of more than 6000 dollars, show me the proportion of details of the organizations with a pie chart."
        ]
    },
    "2954": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "COUNT(organisation_details)",
            "x_data": [
                [
                    "a",
                    "eius",
                    "itaque",
                    "officiis",
                    "quo"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart."
        ]
    },
    "2955": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "SUM(organisation_id)",
            "x_data": [
                [
                    "a",
                    "eius",
                    "itaque",
                    "officiis",
                    "quo"
                ]
            ],
            "y_data": [
                [
                    9,
                    2,
                    19,
                    10,
                    14
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "Find the organisation ids and details of the organisations which are involved i. Plot them as bar chart.",
            "Draw a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "Display a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "What are the ids and details for all organizations that have grants of more than 6000 dollars. "
        ]
    },
    "2956": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "AVG(organisation_id)",
            "x_data": [
                [
                    "a",
                    "eius",
                    "itaque",
                    "officiis",
                    "quo"
                ]
            ],
            "y_data": [
                [
                    9,
                    2,
                    9.5,
                    10,
                    14
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "Find the organisation ids and details of the organisations which are involved i. Visualize by bar chart.",
            "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "What are the ids and details for all organizations that have grants of more than 6000 dollars. Show bar chart."
        ]
    },
    "2957": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "pie",
            "x_name": "organisation_details",
            "y_name": "SUM(organisation_id)",
            "x_data": [
                [
                    "a",
                    "eius",
                    "itaque",
                    "officiis",
                    "quo"
                ]
            ],
            "y_data": [
                [
                    9,
                    2,
                    19,
                    10,
                    14
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "Find the organisation ids and details of the organisations which are involved i. Visualize by pie chart.",
            "Display a pie chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "A pie chart about what are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "What are the ids and details for all organizations that have grants of more than 6000 dollars. Show a pie chart."
        ]
    },
    "2958": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "pie",
            "x_name": "outcome_description",
            "y_name": "COUNT(outcome_description)",
            "x_data": [
                [
                    "Published Research Paper",
                    "Research Patent"
                ]
            ],
            "y_data": [
                [
                    10,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY outcome_description"
        },
        "nl_queries": [
            "What are the descriptions of all the project outcomes, and count them by a pie chart",
            "List the description of the outcomes for all projects, and count them by a pie chart",
            "A pie chart for what are the number of the descriptions of all the project outcomes?",
            "What are the number of the descriptions of all the project outcomes?",
            "A pie chart for listing the number of the description of the outcomes for all projects.",
            "List the number of the description of the outcomes for all projects."
        ]
    },
    "2959": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "outcome_description",
            "y_name": "COUNT(outcome_description)",
            "x_data": [
                [
                    "Published Research Paper",
                    "Research Patent"
                ]
            ],
            "y_data": [
                [
                    10,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY outcome_description"
        },
        "nl_queries": [
            "List the description of the outcomes for all projects, and count them by a bar chart",
            "A bar chart for what are the number of the descriptions of all the project outcomes?",
            "What are the number of the descriptions of all the project outcomes?",
            "A bar chart for listing the number of the description of the outcomes for all projects.",
            "What are the descriptions of all the project outcomes, and count them by a bar chart",
            "List the number of the description of the outcomes for all projects."
        ]
    },
    "2960": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT staff_details , COUNT(staff_details) FROM Research_Staff GROUP BY staff_details ORDER BY staff_details ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT staff_details , COUNT(staff_details) FROM Research_Staff GROUP BY staff_details ORDER BY staff_details ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "staff_details",
            "y_name": "COUNT(staff_details)",
            "x_data": [
                [
                    "ab",
                    "accusamus",
                    "animi",
                    "aspernatur",
                    "consequatur",
                    "dicta",
                    "dolor",
                    "doloribus",
                    "est",
                    "iure",
                    "nulla",
                    "quo",
                    "sint",
                    "voluptatibus"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY staff_details"
        },
        "nl_queries": [
            "What details are there on the research staff? List the result in ascending alphabetical order, and count them by a bar chart",
            "List the number of the research staff details, and order in ascending order.",
            "A bar chart for listing the number of the research staff details, and order in ascending order.",
            "List the research staff details, and order in ascending order, and count them by a bar chart"
        ]
    },
    "2961": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "sum(grant_amount)",
            "y_name": "organisation_id",
            "x_data": [
                [
                    608438.0290999999,
                    281.2446,
                    610.7004,
                    76977810.29079999,
                    42.8061,
                    25313.51,
                    38679503.1437,
                    330.6339,
                    2001349.459,
                    4516014.121800002
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    5,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    14
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a scatter chart on what is the total amount of grants given by each organisations? Also list the organisation id.",
            "Scatter chart. what is the total amount of grants given by each organisations? Also list the organisation id.",
            "What is the total amount of grants given by each organisations? Also list the organisation id. ",
            "Scatter chart. what is the total amount of grant money given to each organization and what is its id?",
            "plot scatter on what is the total amount of grant money given to each organization and what is its id?",
            "What is the total amount of grant money given to each organization and what is its id. Show the correlation.",
            "Plot a scatter chart, sum(grant amount) by organisation_id."
        ]
    },
    "2962": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff",
                "binning": "BIN date_from BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff BIN date_from BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    4,
                    0,
                    2,
                    1,
                    2,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY WEEKDAY"
        },
        "nl_queries": [
            "When do all the researcher role staff start to work? Bin the time into weekday interval and count them with a bar chart.",
            "Plot how many date from by grouped by date from as a bar graph"
        ]
    },
    "2963": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff",
                "binning": "BIN date_to BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff BIN date_to BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    3,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_to BY WEEKDAY"
        },
        "nl_queries": [
            "When do all the researcher role staff stop working? Bin the time into weekday interval and count them with a bar chart.",
            "Plot how many date to by grouped by date to as a bar graph"
        ]
    },
    "2964": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff",
                "binning": "BIN date_from BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff BIN date_from BY YEAR"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "1970~1973",
                    "1974~1977",
                    "1978~1981",
                    "1982~1985",
                    "1986~1989",
                    "1990~1993",
                    "1994~1997",
                    "1998~2001",
                    "2002~2005"
                ]
            ],
            "y_data": [
                [
                    3,
                    0,
                    1,
                    1,
                    1,
                    1,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY YEAR"
        },
        "nl_queries": [
            "When do all the researcher role staff start to work? Bin the time into YEAR interval and count them with a line chart.",
            "Give me the trend about the date_from attributes of all researchers, and bin the date into Year interval.",
            "Can you draw the trend of how many date from over the date from?"
        ]
    },
    "2965": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff",
                "binning": "BIN date_to BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff BIN date_to BY YEAR"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "1971~1975",
                    "1976~1980",
                    "1981~1985",
                    "1986~1990",
                    "1991~1995",
                    "1996~2000",
                    "2001~2005",
                    "2006~2010",
                    "2011~2015",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    1,
                    0,
                    1,
                    0,
                    3,
                    1,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_to BY YEAR"
        },
        "nl_queries": [
            "When do all the researcher role staff stop working? Bin the time into YEAR interval and count them with a line chart.",
            "Give me the trend about the date_to attributes of all researchers, and bin the date_to into Year interval.",
            "Plot date to by the number of date to as a trend line"
        ]
    },
    "2966": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"
        },
        "chart": "Scatter",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "project_id",
            "y_name": "count(*)",
            "x_data": [
                [
                    3,
                    4,
                    7,
                    8,
                    9,
                    15,
                    1,
                    5,
                    11,
                    2
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Scatter chart. how many staff does each project has? List the project id and the number in an ascending order.",
            " how many staff does each project has? List the project id and the number in an ascending order.",
            "How many staff does each project has? List the project id and the number in an ascending order with a scatter chart.",
            "How many staff does each project has? List the project id and the number in an ascending order. Visualize by scatter chart.",
            "For each project id, how many staff does it have? List them in increasing order. Show scatter chart."
        ]
    },
    "3057": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Language",
            "y_name": "count(*)",
            "x_data": [
                [
                    "English",
                    "Italian"
                ]
            ],
            "y_data": [
                [
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List each language and the number of TV Channels using it with a pie chart.",
            "List each language and the number of TV Channels using it. Show the proportion.",
            "For each language, list the number of TV Channels that use it. Show a pie chart.",
            "Give me a pie to show the total number from different language."
        ]
    },
    "3058": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Language",
            "y_name": "count(*)",
            "x_data": [
                [
                    "English",
                    "Italian"
                ]
            ],
            "y_data": [
                [
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List each language and the number of TV Channels using it in a bar chart.",
            "List each language and the number of TV Channels using it. Visualize by bar chart.",
            "For each language, list the number of TV Channels that use it. Plot them as bar chart.",
            "Bar chart of the total number from each language"
        ]
    },
    "3059": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Episode",
            "y_name": "Rating",
            "x_data": [
                [
                    "A Love of a Lifetime",
                    "Friendly Skies",
                    "Game Three"
                ]
            ],
            "y_data": [
                [
                    5.8,
                    5.3,
                    4.4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List top 3 highest Rating  TV series. List the TV series's Episode and Rating with a pie chart.",
            "List top 3 highest Rating  TV series. List the TV series's Episode and Rating. Show a pie chart.",
            "Show me the proportion on what are 3 most highly rated episodes in the TV series table and what were those ratings?",
            "what are 3 most highly rated episodes in the TV series table and what were those ratings?",
            "What are 3 most highly rated episodes in the TV series table and what were those ratings. Visualize by pie chart."
        ]
    },
    "3060": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Episode",
            "y_name": "Rating",
            "x_data": [
                [
                    "A Love of a Lifetime",
                    "Friendly Skies",
                    "Game Three"
                ]
            ],
            "y_data": [
                [
                    5.8,
                    5.3,
                    4.4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List top 3 highest Rating  TV series. List the TV series's Episode and Rating in a bar chart.",
            "List top 3 highest Rating  TV series. List the TV series's Episode and Rating. Show bar chart.",
            "Draw a bar chart for what are 3 most highly rated episodes in the TV series table and what were those ratings?",
            "Show me a bar chart for what are 3 most highly rated episodes in the TV series table and what were those ratings?",
            "What are 3 most highly rated episodes in the TV series table and what were those ratings. Plot them as bar chart."
        ]
    },
    "3061": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Pixel_aspect_ratio_PAR",
            "y_name": "COUNT(Pixel_aspect_ratio_PAR)",
            "x_data": [
                [
                    "16:9",
                    "4:3",
                    "4:3 / 16:9"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Pixel_aspect_ratio_PAR"
        },
        "nl_queries": [
            "Find the pixel aspect ratio and the nation of the tv channels that do not use English. Show the proportion of the pixel aspect ratio with a pie chart.",
            "What is the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the proportion of the pixel aspect ratio with a pie chart.",
            "Give me a pie chart showing the proportion of the pixel aspect ratio and the nation of the tv channels that do not use English. "
        ]
    },
    "3062": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Pixel_aspect_ratio_PAR",
            "y_name": "COUNT(Pixel_aspect_ratio_PAR)",
            "x_data": [
                [
                    "16:9",
                    "4:3",
                    "4:3 / 16:9"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Pixel_aspect_ratio_PAR"
        },
        "nl_queries": [
            "Find the pixel aspect ratio and the nation of the tv channels that do not use English. Show the number of different pixel aspect ratios with a bar chart.\n\n\n\n",
            "What are the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the comparison of the total number of pixel aspect ratio in a bar chart.",
            "Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English."
        ]
    },
    "3063": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Package_Option",
            "y_name": "COUNT(Package_Option)",
            "x_data": [
                [
                    "Sky Famiglia",
                    "Sky Famiglia + Sky HD",
                    "no ( FTV )"
                ]
            ],
            "y_data": [
                [
                    8,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Package_Option"
        },
        "nl_queries": [
            "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a pie chart",
            "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
            "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a pie chart",
            "A pie chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?"
        ]
    },
    "3064": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Package_Option",
            "y_name": "COUNT(Package_Option)",
            "x_data": [
                [
                    "Sky Famiglia",
                    "Sky Famiglia + Sky HD",
                    "no ( FTV )"
                ]
            ],
            "y_data": [
                [
                    8,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Package_Option"
        },
        "nl_queries": [
            "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a bar chart",
            "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
            "A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
            "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart"
        ]
    },
    "3065": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "partitionid",
            "x_data": [
                [
                    "Black Widow\n",
                    "Tyler Swift"
                ]
            ],
            "y_data": [
                [
                    23,
                    10
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and partition id for users who tweeted less than twice. Show a pie chart."
        ]
    },
    "3066": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "partitionid",
            "x_data": [
                [
                    "Black Widow\n",
                    "Tyler Swift"
                ]
            ],
            "y_data": [
                [
                    23,
                    10
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and partition id for users who tweeted less than twice. Show bar chart."
        ]
    },
    "3067": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , followers FROM user_profiles ORDER BY followers DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , followers FROM user_profiles ORDER BY followers DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "followers",
            "x_data": [
                [
                    "Tyler Swift",
                    "Natalie Portman",
                    "Black Widow\n",
                    "Celine Dion",
                    "Iron Man",
                    "Mary",
                    "Susan"
                ]
            ],
            "y_data": [
                [
                    99999998,
                    94375428,
                    35425845,
                    23927492,
                    6662425,
                    890,
                    100
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the name and number of followers for each user, and sort the results by the number of followers in descending order with a bar chart.",
            "List the name and number of followers for each user, and sort the results by the number of followers in descending order. "
        ]
    },
    "3068": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Iron Man",
                    "Black Widow\n",
                    "Susan",
                    "Tyler Swift",
                    "Celine Dion"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name of each user and number of tweets tweeted by each of them. Visualize by pie chart."
        ]
    },
    "3069": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Iron Man",
                    "Black Widow\n",
                    "Susan",
                    "Tyler Swift",
                    "Celine Dion"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name of each user and number of tweets tweeted by each of them. Visualize by bar chart."
        ]
    },
    "3207": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Graeme McDowell",
                    "Adam Scott"
                ]
            ],
            "y_data": [
                [
                    34,
                    26
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the name and age for all male people who don't have a wedding by a pie chart.",
            "Show the name and age for all male people who don't have a wedding. Visualize by pie chart."
        ]
    },
    "3208": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Graeme McDowell",
                    "Adam Scott"
                ]
            ],
            "y_data": [
                [
                    34,
                    26
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the name and age for all male people who don't have a wedding with a bar chart.",
            "A bar chart about the name and age for all male people who don't have a wedding. "
        ]
    },
    "3209": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church",
                "binning": "BIN Open_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church BIN Open_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    0,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY WEEKDAY"
        },
        "nl_queries": [
            "How many churches open each year? Convert the year into the weekday interval and visualize with a bar chart.",
            "Bar chart x axis open date y axis how many open date"
        ]
    },
    "3210": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "line",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "1830",
                    "1831",
                    "1832",
                    "1833",
                    "1834",
                    "1835",
                    "1836",
                    "1837",
                    "1838",
                    "1839",
                    "1840",
                    "1841",
                    "1842",
                    "1843",
                    "1844"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    1,
                    1,
                    0,
                    1,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY TIME"
        },
        "nl_queries": [
            "A line chart shows how many churches open each year?",
            "Give me the trend about the number of church opening in each year.",
            "Show me a line chart of how the number of open date change over the open date"
        ]
    },
    "3211": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church GROUP BY Open_Date ORDER BY open_date DESC LIMIT 3",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church GROUP BY Open_Date ORDER BY open_date DESC LIMIT 3"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "1840",
                    "1841",
                    "1842",
                    "1843",
                    "1844"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    1,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY TIME"
        },
        "nl_queries": [
            "Show the number of opening years for three churches that opened most recently in a bar chart."
        ]
    },
    "3212": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY open_date DESC LIMIT 3",
                "binning": "BIN Open_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY open_date DESC LIMIT 3 BIN Open_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    1,
                    0,
                    0,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of opening years for three churches that opened most recently in a bar chart. Bin the year into the weekday interval."
        ]
    },
    "3213": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Australia",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Show the proportion of the number of countries for all people whose age is smaller than the average.",
            "A pie chart about the proportion of the number of countries for all people whose age is smaller than the average."
        ]
    },
    "3214": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Australia",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Show the number of countries for all people whose age is smaller than the average.",
            "A bar chart about the number of countries for all people whose age is smaller than the average."
        ]
    },
    "3215": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM people GROUP BY country",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Country , count(*) FROM people GROUP BY country"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Australia",
                    "Canada",
                    "Northern Ireland",
                    "Sweden",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all countries and the number of people from each country in a pie chart.",
            "Show all countries and the number of people from each country. ",
            "Give me a pie to show the total number from different country."
        ]
    },
    "3216": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM people GROUP BY country",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Australia",
                    "Canada",
                    "Northern Ireland",
                    "Sweden",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all countries and the number of people from each country with a bar chart.",
            "Show all countries and the number of people from each country. ",
            "Give me a bar chart for the total number of each country"
        ]
    },
    "3217": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church",
                "binning": "BIN Open_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    0,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY WEEKDAY"
        },
        "nl_queries": [
            "Please compare the number of the church by open date (bin into the weekday) using a bar chart.",
            "Visualize a bar chart that bin the open date into a day of the week interval and count them.",
            "Draw a bar chart of open date versus the number of open date"
        ]
    },
    "3218": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church",
                "binning": "BIN Open_Date BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY YEAR"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "line",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "1830",
                    "1831",
                    "1832",
                    "1833",
                    "1834",
                    "1835",
                    "1836",
                    "1837",
                    "1838",
                    "1839",
                    "1840",
                    "1841",
                    "1842",
                    "1843",
                    "1844"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    1,
                    1,
                    0,
                    1,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY YEAR"
        },
        "nl_queries": [
            "Please show the trend of the number of the church by open date (bin into the year) using a line chart.",
            "Visualize a line chart that bins the open date into the Year interval and counts them.",
            "I want to see trend of the number of open date by open date"
        ]
    },
    "2544@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "perpetrator",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "China",
                    "India",
                    "Japan",
                    "South Korea"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, I want to rank by the X-axis from low to high.",
            "Bar chart x axis country y axis the total number, and sort X-axis in asc order.",
            "Return a bar chart on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, I want to rank by the X-axis from low to high.",
            "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there Plot them as bar chart, I want to show names from low to high order."
        ]
    },
    "2544@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "perpetrator",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "South Korea",
                    "Japan",
                    "India",
                    "China"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there Plot them as bar chart, and rank by the x-axis from high to low.",
            "Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, could you display in descending by the x axis?",
            "Bar chart x axis country y axis the total number, sort x-axis in descending order please.",
            "Return a bar chart on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, sort x-axis in descending order please."
        ]
    },
    "2544@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "perpetrator",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "India",
                    "Japan",
                    "South Korea",
                    "China"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis country y axis the total number, and list by the total number from low to high.",
            "Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, and list from low to high by the Y-axis.",
            "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there Plot them as bar chart, and could you sort total number in ascending order please?",
            "Return a bar chart on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, I want to order y-axis in ascending order."
        ]
    },
    "2544@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "perpetrator",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "China",
                    "South Korea",
                    "Japan",
                    "India"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a bar chart on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, and list in descending by the y axis please.",
            "Bar chart x axis country y axis the total number, list total number from high to low order.",
            "Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, and display by the Y-axis in descending please.",
            "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there Plot them as bar chart, and sort by the the total number in descending."
        ]
    },
    "2641@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Auto Club Speedway",
                    "Chicagoland Speedway",
                    "Daytona International Speedway",
                    "Homestead-Miami Speedway",
                    "Kansas Speedway",
                    "Martinsville Speedway"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for what are the names of different tracks, and how many races has each had?, sort Name in asc order please.",
            "Show the name of track and the number of races in each track Visualize by bar chart, and rank from low to high by the bar.",
            "Show the name of track and the number of races in each track by a bar chart, rank from low to high by the bar.",
            "What are the names of different tracks, and how many races has each had Plot them as bar chart, and could you sort in asc by the x axis?",
            "Return a histogram on what are the names of different tracks, and how many races has each had?, and sort from low to high by the bar."
        ]
    },
    "2641@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Martinsville Speedway",
                    "Kansas Speedway",
                    "Homestead-Miami Speedway",
                    "Daytona International Speedway",
                    "Chicagoland Speedway",
                    "Auto Club Speedway"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the name of track and the number of races in each track by a bar chart, and I want to rank by the bars in descending.",
            "Show the name of track and the number of races in each track Visualize by bar chart, order in desc by the Name.",
            "Visualize a bar chart for what are the names of different tracks, and how many races has each had?, and could you rank by the x-axis in descending?",
            "Return a histogram on what are the names of different tracks, and how many races has each had?, and sort by the Name from high to low.",
            "What are the names of different tracks, and how many races has each had Plot them as bar chart, display by the bar from high to low please."
        ]
    },
    "2641@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Auto Club Speedway",
                    "Daytona International Speedway",
                    "Homestead-Miami Speedway",
                    "Kansas Speedway",
                    "Martinsville Speedway",
                    "Chicagoland Speedway"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for what are the names of different tracks, and how many races has each had?, and could you list in asc by the Y-axis?",
            "What are the names of different tracks, and how many races has each had Plot them as bar chart, could you list in asc by the Y-axis?",
            "Show the name of track and the number of races in each track by a bar chart, and show Y in ascending order please.",
            "Return a histogram on what are the names of different tracks, and how many races has each had?, and show Y in ascending order please.",
            "Show the name of track and the number of races in each track Visualize by bar chart, and could you order y-axis from low to high order?"
        ]
    },
    "2641@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Chicagoland Speedway",
                    "Martinsville Speedway",
                    "Kansas Speedway",
                    "Homestead-Miami Speedway",
                    "Daytona International Speedway",
                    "Auto Club Speedway"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the names of different tracks, and how many races has each had Plot them as bar chart, and I want to order by the the total number in desc.",
            "Show the name of track and the number of races in each track by a bar chart, and list Y in descending order.",
            "Show the name of track and the number of races in each track Visualize by bar chart, and list in desc by the Y-axis please.",
            "Visualize a bar chart for what are the names of different tracks, and how many races has each had?, and display y axis from high to low order.",
            "Return a histogram on what are the names of different tracks, and how many races has each had?, and could you display by the y-axis in descending?"
        ]
    },
    "2643@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "COUNT(Class)",
            "x_data": [
                [
                    "DP/GT",
                    "GT"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Class"
        },
        "nl_queries": [
            "Create a bar chart showing how many class across class, show by the X-axis in ascending.",
            "Show me how many in each class of all races using a bar chart, and show by the X-axis in ascending."
        ]
    },
    "2643@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "COUNT(Class)",
            "x_data": [
                [
                    "GT",
                    "DP/GT"
                ]
            ],
            "y_data": [
                [
                    2,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Class"
        },
        "nl_queries": [
            "Show me how many in each class of all races using a bar chart, and I want to order in descending by the Class.",
            "Create a bar chart showing how many class across class, and list from high to low by the x-axis please."
        ]
    },
    "2643@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY COUNT(Class) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY COUNT(Class) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "COUNT(Class)",
            "x_data": [
                [
                    "GT",
                    "DP/GT"
                ]
            ],
            "y_data": [
                [
                    2,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Class"
        },
        "nl_queries": [
            "Create a bar chart showing how many class across class, sort y axis from low to high order.",
            "Show me how many in each class of all races using a bar chart, and sort by the the number of class in ascending."
        ]
    },
    "2643@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY COUNT(Class) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY COUNT(Class) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "COUNT(Class)",
            "x_data": [
                [
                    "DP/GT",
                    "GT"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Class"
        },
        "nl_queries": [
            "Show me how many in each class of all races using a bar chart, show in descending by the Y-axis.",
            "Create a bar chart showing how many class across class, could you order Y-axis in desc order?"
        ]
    },
    "2648@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "count(*)",
            "x_data": [
                [
                    "DP/GT",
                    "GT"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the different classes of races, and how many races correspond to each Show bar chart, and could you sort by the X-axis from low to high?",
            "Show the race class and number of races in each class, and could you display bar from low to high order please?",
            "Give me a bar chart for the total number of each class, and order x axis in asc order.",
            "Draw a bar chart for what are the different classes of races, and how many races correspond to each?, and list x axis in asc order please.",
            "Visualize a bar chart for what are the different classes of races, and how many races correspond to each?, order x axis in asc order.",
            "Show the race class and number of races in each class with a bar chart, and list x axis in asc order please."
        ]
    },
    "2648@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "count(*)",
            "x_data": [
                [
                    "GT",
                    "DP/GT"
                ]
            ],
            "y_data": [
                [
                    2,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the race class and number of races in each class with a bar chart, and sort in desc by the bars.",
            "Visualize a bar chart for what are the different classes of races, and how many races correspond to each?, and sort in desc by the bars.",
            "What are the different classes of races, and how many races correspond to each Show bar chart, could you rank by the X in desc?",
            "Show the race class and number of races in each class, and could you display x axis in desc order please?",
            "Draw a bar chart for what are the different classes of races, and how many races correspond to each?, sort from high to low by the names please.",
            "Give me a bar chart for the total number of each class, sort in desc by the bars."
        ]
    },
    "2648@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "count(*)",
            "x_data": [
                [
                    "GT",
                    "DP/GT"
                ]
            ],
            "y_data": [
                [
                    2,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a bar chart for the total number of each class, display in asc by the Y-axis.",
            "Show the race class and number of races in each class, and could you sort total number in ascending order?",
            "Draw a bar chart for what are the different classes of races, and how many races correspond to each?, and show in asc by the total number.",
            "Visualize a bar chart for what are the different classes of races, and how many races correspond to each?, and could you order in ascending by the Y?",
            "What are the different classes of races, and how many races correspond to each Show bar chart, order from low to high by the total number.",
            "Show the race class and number of races in each class with a bar chart, could you show in ascending by the total number?"
        ]
    },
    "2648@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "count(*)",
            "x_data": [
                [
                    "DP/GT",
                    "GT"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for what are the different classes of races, and how many races correspond to each?, list by the y-axis from high to low.",
            "Show the race class and number of races in each class with a bar chart, and list by the y-axis from high to low.",
            "What are the different classes of races, and how many races correspond to each Show bar chart, could you list y-axis in desc order?",
            "Give me a bar chart for the total number of each class, and could you sort from high to low by the y-axis please?",
            "Show the race class and number of races in each class, and could you rank Y-axis in desc order?",
            "Draw a bar chart for what are the different classes of races, and how many races correspond to each?, and rank y-axis in descending order."
        ]
    },
    "926@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details ORDER BY other_account_details ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details ORDER BY other_account_details ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "other_account_details",
            "y_name": "COUNT(other_account_details)",
            "x_data": [
                [
                    "Regular",
                    "VIP"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": "GROUP BY other_account_details"
        },
        "nl_queries": [
            "Show the number of accounts in a bar chart that groups by other account details, and list X-axis from low to high order please.",
            "How many accounts for different account details? Draw a bar chart, sort X-axis in asc order please.",
            "Bar chart x axis other account details y axis how many other account details, list X-axis from low to high order please."
        ]
    },
    "926@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details ORDER BY other_account_details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details ORDER BY other_account_details DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "other_account_details",
            "y_name": "COUNT(other_account_details)",
            "x_data": [
                [
                    "VIP",
                    "Regular"
                ]
            ],
            "y_data": [
                [
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY other_account_details"
        },
        "nl_queries": [
            "Bar chart x axis other account details y axis how many other account details, show bars from high to low order.",
            "Show the number of accounts in a bar chart that groups by other account details, and sort in desc by the x-axis please.",
            "How many accounts for different account details? Draw a bar chart, and display names from high to low order please."
        ]
    },
    "926@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(other_account_details) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(other_account_details) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "other_account_details",
            "y_name": "COUNT(other_account_details)",
            "x_data": [
                [
                    "VIP",
                    "Regular"
                ]
            ],
            "y_data": [
                [
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY other_account_details"
        },
        "nl_queries": [
            "How many accounts for different account details? Draw a bar chart, and display y axis in ascending order.",
            "Bar chart x axis other account details y axis how many other account details, display y-axis in asc order.",
            "Show the number of accounts in a bar chart that groups by other account details, rank Y-axis from low to high order."
        ]
    },
    "926@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(other_account_details) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(other_account_details) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "other_account_details",
            "y_name": "COUNT(other_account_details)",
            "x_data": [
                [
                    "Regular",
                    "VIP"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": "GROUP BY other_account_details"
        },
        "nl_queries": [
            "How many accounts for different account details? Draw a bar chart, list by the Y-axis in desc.",
            "Bar chart x axis other account details y axis how many other account details, and list by the Y-axis in desc.",
            "Show the number of accounts in a bar chart that groups by other account details, and order total number in descending order."
        ]
    },
    "927@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(date_account_opened) ASC",
                "binning": "BIN date_account_opened BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(date_account_opened) ASC BIN date_account_opened BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "Thur",
                    "Wed",
                    "Sat",
                    "Sun",
                    "Tue",
                    "Fri",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    0,
                    0,
                    2,
                    3,
                    2
                ],
                [
                    0,
                    0,
                    0,
                    2,
                    2,
                    0,
                    3
                ]
            ],
            "classify": [
                "Regular",
                "VIP"
            ],
            "describe": "GROUP BY other_account_details, BIN date_account_opened BY WEEKDAY"
        },
        "nl_queries": [
            "How many accounts are opened in each day? Bin the account open day by weekday and group by other account details in a stacked bar chart, and rank by the y axis in ascending.",
            "Stacked bar chart of the number of date account opened for with each other_account_details in each date account opened, and display by the the number of date account opened from low to high please.",
            "Show the number of accounts opened in each day Bin the account open day by weekday and group by other account details in a stacked bar chart, and order in ascending by the total number."
        ]
    },
    "927@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(date_account_opened) DESC",
                "binning": "BIN date_account_opened BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(date_account_opened) DESC BIN date_account_opened BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "Mon",
                    "Fri",
                    "Tue",
                    "Sun",
                    "Sat",
                    "Wed",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    2,
                    0,
                    0,
                    1,
                    0
                ],
                [
                    3,
                    0,
                    2,
                    2,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [
                "Regular",
                "VIP"
            ],
            "describe": "GROUP BY other_account_details, BIN date_account_opened BY WEEKDAY"
        },
        "nl_queries": [
            "Stacked bar chart of the number of date account opened for with each other_account_details in each date account opened, display by the total number in descending please.",
            "Show the number of accounts opened in each day Bin the account open day by weekday and group by other account details in a stacked bar chart, I want to show the number of date account opened in descending order.",
            "How many accounts are opened in each day? Bin the account open day by weekday and group by other account details in a stacked bar chart, and could you sort by the Y-axis in desc?"
        ]
    },
    "932@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY COUNT(date_account_opened) ASC",
                "binning": "BIN date_account_opened BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY COUNT(date_account_opened) ASC BIN date_account_opened BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "Thur",
                    "Wed",
                    "Sat",
                    "Sun",
                    "Tue",
                    "Fri",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    2,
                    2,
                    2,
                    3,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN date_account_opened BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of accounts opened in each day Bin the account open day by weekday in a bar chart, and order from low to high by the y-axis.",
            "How many accounts are opened in each day? Bin the account open day by weekday in a bar chart, and sort by the Y-axis in asc.",
            "Show the number of date account opened from each date account opened, and rank by the y-axis in asc."
        ]
    },
    "932@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY COUNT(date_account_opened) DESC",
                "binning": "BIN date_account_opened BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY COUNT(date_account_opened) DESC BIN date_account_opened BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "Mon",
                    "Fri",
                    "Tue",
                    "Sun",
                    "Sat",
                    "Wed",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    2,
                    2,
                    2,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_account_opened BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of accounts opened in each day Bin the account open day by weekday in a bar chart, and could you display Y-axis in descending order?",
            "How many accounts are opened in each day? Bin the account open day by weekday in a bar chart, I want to rank by the y axis in desc.",
            "Show the number of date account opened from each date account opened, and I want to rank by the y axis in desc."
        ]
    },
    "942@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY date_account_opened ASC",
                "binning": "BIN date_account_opened BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY date_account_opened ASC BIN date_account_opened BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    4,
                    1,
                    3,
                    0,
                    5,
                    3,
                    3,
                    1
                ],
                [
                    2,
                    2,
                    4,
                    2,
                    4,
                    0,
                    6,
                    4,
                    4,
                    2
                ]
            ],
            "classify": [
                "Regular",
                "VIP"
            ],
            "describe": "GROUP BY other_account_details, BIN date_account_opened BY YEAR"
        },
        "nl_queries": [
            "How many accounts are opened in each year? Show a group line chart that group by other account details, and could you display X-axis in ascending order?",
            "Give me line charts of worldwide gross how many date account opened over year date account opened by major genres other_account_details, and I want to sort by the X from low to high.",
            "Show the number of accounts opened in each year for all accounts and group by other account details in a group line chart, could you display X-axis in ascending order?"
        ]
    },
    "942@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY date_account_opened DESC",
                "binning": "BIN date_account_opened BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY date_account_opened DESC BIN date_account_opened BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "2017",
                    "2016",
                    "2015",
                    "2014",
                    "2013",
                    "2012",
                    "2011",
                    "2010",
                    "2009",
                    "2008"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    3,
                    5,
                    0,
                    3,
                    1,
                    4,
                    2,
                    1
                ],
                [
                    2,
                    4,
                    4,
                    6,
                    0,
                    4,
                    2,
                    4,
                    2,
                    2
                ]
            ],
            "classify": [
                "Regular",
                "VIP"
            ],
            "describe": "GROUP BY other_account_details, BIN date_account_opened BY YEAR"
        },
        "nl_queries": [
            "How many accounts are opened in each year? Show a group line chart that group by other account details, and could you order by the x axis in desc?",
            "Show the number of accounts opened in each year for all accounts and group by other account details in a group line chart, and sort from high to low by the X-axis.",
            "Give me line charts of worldwide gross how many date account opened over year date account opened by major genres other_account_details, list in descending by the x axis please."
        ]
    },
    "953@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY date_account_opened ASC",
                "binning": "BIN date_account_opened BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY date_account_opened ASC BIN date_account_opened BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    2,
                    0,
                    3,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_account_opened BY YEAR"
        },
        "nl_queries": [
            "How many accounts are opened in each year? Show a line chart, and list by the X-axis from low to high.",
            "Show the number of accounts opened in each year for all accounts in a line chart, list by the X-axis from low to high.",
            "I want to see trend of how many date account opened by date account opened, and show by the X from low to high please."
        ]
    },
    "953@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY date_account_opened DESC",
                "binning": "BIN date_account_opened BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY date_account_opened DESC BIN date_account_opened BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "2017",
                    "2016",
                    "2015",
                    "2014",
                    "2013",
                    "2012",
                    "2011",
                    "2010",
                    "2009",
                    "2008"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    3,
                    0,
                    2,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_account_opened BY YEAR"
        },
        "nl_queries": [
            "How many accounts are opened in each year? Show a line chart, order in desc by the X.",
            "Show the number of accounts opened in each year for all accounts in a line chart, and show by the x-axis from high to low.",
            "I want to see trend of how many date account opened by date account opened, order by the date_account_opened in descending."
        ]
    },
    "960@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id ORDER BY T2.customer_first_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id ORDER BY T2.customer_first_name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_first_name",
            "y_name": "customer_id",
            "x_data": [
                [
                    "Kieran",
                    "Meaghan",
                    "Ruby"
                ]
            ],
            "y_data": [
                [
                    13,
                    8,
                    15
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the first names and ids for customers who have two or more accounts, and could you list from low to high by the names please?",
            "Show first name and id for all customers with at least 2 accounts in a bar chart, and could you rank by the customer_first_name in asc?",
            "Visualize a bar chart for what are the first names and ids for customers who have two or more accounts?, could you rank by the customer_first_name in asc?",
            "Show first name and id for all customers with at least 2 accounts Show bar chart, and display X-axis from low to high order.",
            "Return a histogram on what are the first names and ids for customers who have two or more accounts?, and show in ascending by the x axis."
        ]
    },
    "960@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id ORDER BY T2.customer_first_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id ORDER BY T2.customer_first_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_first_name",
            "y_name": "customer_id",
            "x_data": [
                [
                    "Ruby",
                    "Meaghan",
                    "Kieran"
                ]
            ],
            "y_data": [
                [
                    15,
                    8,
                    13
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show first name and id for all customers with at least 2 accounts Show bar chart, and sort X in descending order.",
            "What are the first names and ids for customers who have two or more accounts, and rank in desc by the X.",
            "Return a histogram on what are the first names and ids for customers who have two or more accounts?, and display in descending by the names.",
            "Show first name and id for all customers with at least 2 accounts in a bar chart, and could you order x axis from high to low order?",
            "Visualize a bar chart for what are the first names and ids for customers who have two or more accounts?, and order from high to low by the bars."
        ]
    },
    "960@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.customer_id ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.customer_id ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_first_name",
            "y_name": "customer_id",
            "x_data": [
                [
                    "Meaghan",
                    "Kieran",
                    "Ruby"
                ]
            ],
            "y_data": [
                [
                    8,
                    13,
                    15
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show first name and id for all customers with at least 2 accounts in a bar chart, and show in asc by the total number.",
            "Visualize a bar chart for what are the first names and ids for customers who have two or more accounts?, could you rank in ascending by the customer_id?",
            "Return a histogram on what are the first names and ids for customers who have two or more accounts?, could you rank in ascending by the customer_id?",
            "What are the first names and ids for customers who have two or more accounts, and show by the y axis in asc please.",
            "Show first name and id for all customers with at least 2 accounts Show bar chart, order Y from low to high order."
        ]
    },
    "960@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.customer_id DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.customer_id DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_first_name",
            "y_name": "customer_id",
            "x_data": [
                [
                    "Ruby",
                    "Kieran",
                    "Meaghan"
                ]
            ],
            "y_data": [
                [
                    15,
                    13,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a histogram on what are the first names and ids for customers who have two or more accounts?, show in descending by the customer_id.",
            "Show first name and id for all customers with at least 2 accounts Show bar chart, and rank in descending by the y-axis.",
            "Visualize a bar chart for what are the first names and ids for customers who have two or more accounts?, and could you order y axis in desc order?",
            "Show first name and id for all customers with at least 2 accounts in a bar chart, and could you order y axis in desc order?",
            "What are the first names and ids for customers who have two or more accounts, and display in desc by the y axis."
        ]
    },
    "972@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "transaction_type",
            "y_name": "sum(transaction_amount)",
            "x_data": [
                [
                    "Payment",
                    "Refund"
                ]
            ],
            "y_data": [
                [
                    8743.15,
                    11192.69
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the transaction types and the total amount of transactions, and order by the X-axis from low to high.",
            "Visualize a bar chart for what are total transaction amounts for each transaction type?, and sort X in asc order please.",
            "what are total transaction amounts for each transaction type?, sort X in asc order please.",
            "What are total transaction amounts for each transaction type, and show transaction_type in asc order.",
            "Show the transaction types and the total amount of transactions with a bar chart, and show bar from low to high order.",
            "Show sum transaction amount from each transaction type, could you order in ascending by the X?"
        ]
    },
    "972@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "transaction_type",
            "y_name": "sum(transaction_amount)",
            "x_data": [
                [
                    "Refund",
                    "Payment"
                ]
            ],
            "y_data": [
                [
                    11192.69,
                    8743.15
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show sum transaction amount from each transaction type, and sort from high to low by the X-axis.",
            "Show the transaction types and the total amount of transactions with a bar chart, and sort from high to low by the X-axis.",
            "Show the transaction types and the total amount of transactions, rank transaction_type from high to low order please.",
            "What are total transaction amounts for each transaction type, rank transaction_type from high to low order please.",
            "Visualize a bar chart for what are total transaction amounts for each transaction type?, and show in desc by the bars please.",
            "what are total transaction amounts for each transaction type?, show by the x axis in desc please."
        ]
    },
    "972@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "transaction_type",
            "y_name": "sum(transaction_amount)",
            "x_data": [
                [
                    "Payment",
                    "Refund"
                ]
            ],
            "y_data": [
                [
                    8743.15,
                    11192.69
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are total transaction amounts for each transaction type, could you show by the Y-axis from low to high?",
            "Show the transaction types and the total amount of transactions with a bar chart, and rank by the total number of transaction amount in ascending.",
            "Visualize a bar chart for what are total transaction amounts for each transaction type?, and could you sort in ascending by the Y-axis?",
            "what are total transaction amounts for each transaction type?, and show by the Y-axis from low to high.",
            "Show sum transaction amount from each transaction type, and list by the total number in asc.",
            "Show the transaction types and the total amount of transactions, could you sort in ascending by the Y-axis?"
        ]
    },
    "972@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "transaction_type",
            "y_name": "sum(transaction_amount)",
            "x_data": [
                [
                    "Refund",
                    "Payment"
                ]
            ],
            "y_data": [
                [
                    11192.69,
                    8743.15
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the transaction types and the total amount of transactions with a bar chart, rank by the y-axis in descending.",
            "What are total transaction amounts for each transaction type, show Y-axis in desc order.",
            "Show the transaction types and the total amount of transactions, I want to rank from high to low by the total number please.",
            "Visualize a bar chart for what are total transaction amounts for each transaction type?, rank by the y-axis in descending.",
            "what are total transaction amounts for each transaction type?, and I want to rank by the Y-axis from high to low.",
            "Show sum transaction amount from each transaction type, could you order total number of transaction amount in desc order?"
        ]
    },
    "975@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'  ORDER BY COUNT(date_account_opened) ASC",
                "binning": "BIN date_account_opened BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'  ORDER BY COUNT(date_account_opened) ASC BIN date_account_opened BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "Sun",
                    "Thur",
                    "Tue",
                    "Wed",
                    "Mon",
                    "Sat",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_account_opened BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of accounts for all accounts by the customer with first name 'Meaghan' opened in each day Bin the account open day by weekday in a bar chart, show Y-axis in ascending order.",
            "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by weekday in a bar chart, and order y axis in ascending order."
        ]
    },
    "975@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'  ORDER BY COUNT(date_account_opened) DESC",
                "binning": "BIN date_account_opened BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'  ORDER BY COUNT(date_account_opened) DESC BIN date_account_opened BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "Fri",
                    "Sat",
                    "Mon",
                    "Wed",
                    "Tue",
                    "Thur",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_account_opened BY WEEKDAY"
        },
        "nl_queries": [
            "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by weekday in a bar chart, and order y-axis in descending order.",
            "Show the number of accounts for all accounts by the customer with first name 'Meaghan' opened in each day Bin the account open day by weekday in a bar chart, sort by the y-axis from high to low please."
        ]
    },
    "982@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'  ORDER BY date_account_opened ASC",
                "binning": "BIN date_account_opened BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'  ORDER BY date_account_opened ASC BIN date_account_opened BY YEAR"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    1,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_account_opened BY YEAR"
        },
        "nl_queries": [
            "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by year interval in a bar chart, could you rank x-axis in ascending order?",
            "Show the number of accounts for all accounts by the customer with first name 'Meaghan' opened in each day Bin the account open day by year interval in a bar chart, and could you rank x-axis in ascending order?",
            "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by year interval in a bar chart, order in asc by the X-axis.",
            "Show the number of accounts for all accounts by the customer with first name 'Meaghan' opened in each day Bin the account open day by year interval in a bar chart, and display in ascending by the x axis."
        ]
    },
    "982@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'  ORDER BY date_account_opened DESC",
                "binning": "BIN date_account_opened BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'  ORDER BY date_account_opened DESC BIN date_account_opened BY YEAR"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "2016",
                    "2015",
                    "2014",
                    "2013",
                    "2012",
                    "2011",
                    "2010"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    0,
                    0,
                    1,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_account_opened BY YEAR"
        },
        "nl_queries": [
            "Show the number of accounts for all accounts by the customer with first name 'Meaghan' opened in each day Bin the account open day by year interval in a bar chart, list in desc by the x axis.",
            "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by year interval in a bar chart, and could you rank date_account_opened from high to low order please?",
            "Show the number of accounts for all accounts by the customer with first name 'Meaghan' opened in each day Bin the account open day by year interval in a bar chart, and list in desc by the date_account_opened.",
            "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by year interval in a bar chart, rank by the X-axis in descending."
        ]
    },
    "988@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY customer_first_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY customer_first_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_first_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Abbey",
                    "Jensen",
                    "Joesph",
                    "Kieran",
                    "Meaghan",
                    "Ruby",
                    "Vesta"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    4,
                    4,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the number of accounts for each customer in a bar chart grouping by customer's first name, and list names in asc order.",
            "How many accounts for each customer? Show a bar chart that groups by customer's first name, could you order in ascending by the X?"
        ]
    },
    "988@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY customer_first_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY customer_first_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_first_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Vesta",
                    "Ruby",
                    "Meaghan",
                    "Kieran",
                    "Joesph",
                    "Jensen",
                    "Abbey"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    4,
                    4,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the number of accounts for each customer in a bar chart grouping by customer's first name, I want to sort in descending by the bars.",
            "How many accounts for each customer? Show a bar chart that groups by customer's first name, rank by the x-axis from high to low."
        ]
    },
    "988@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_first_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Abbey",
                    "Jensen",
                    "Joesph",
                    "Vesta",
                    "Ruby",
                    "Kieran",
                    "Meaghan"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many accounts for each customer? Show a bar chart that groups by customer's first name, sort by the the total number in ascending.",
            "Show the number of accounts for each customer in a bar chart grouping by customer's first name, and sort by the y-axis in ascending please."
        ]
    },
    "988@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_first_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Meaghan",
                    "Kieran",
                    "Ruby",
                    "Vesta",
                    "Joesph",
                    "Jensen",
                    "Abbey"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    3,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many accounts for each customer? Show a bar chart that groups by customer's first name, list in desc by the y-axis please.",
            "Show the number of accounts for each customer in a bar chart grouping by customer's first name, and show from high to low by the Y-axis."
        ]
    },
    "990@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY customer_last_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY customer_last_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_last_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Auer",
                    "Boyle",
                    "Keeling",
                    "Leuschke",
                    "Muller",
                    "Ruecker",
                    "Schaefer"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    4,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many accounts for each customer? Show a bar chart that groups by customer's last name, and I want to display in ascending by the bars.",
            "Show the number of accounts for each customer in a bar chart grouping by customer's last name, and I want to display in ascending by the bars."
        ]
    },
    "990@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY customer_last_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY customer_last_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_last_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Schaefer",
                    "Ruecker",
                    "Muller",
                    "Leuschke",
                    "Keeling",
                    "Boyle",
                    "Auer"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    4,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many accounts for each customer? Show a bar chart that groups by customer's last name, sort in descending by the customer_last_name please.",
            "Show the number of accounts for each customer in a bar chart grouping by customer's last name, and rank x-axis in descending order."
        ]
    },
    "990@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_last_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Leuschke",
                    "Muller",
                    "Ruecker",
                    "Schaefer",
                    "Boyle",
                    "Auer",
                    "Keeling"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many accounts for each customer? Show a bar chart that groups by customer's last name, I want to order Y-axis from low to high order.",
            "Show the number of accounts for each customer in a bar chart grouping by customer's last name, and could you show by the the total number in asc please?"
        ]
    },
    "990@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_last_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Keeling",
                    "Auer",
                    "Boyle",
                    "Schaefer",
                    "Ruecker",
                    "Muller",
                    "Leuschke"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    3,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many accounts for each customer? Show a bar chart that groups by customer's last name, I want to rank from high to low by the total number.",
            "Show the number of accounts for each customer in a bar chart grouping by customer's last name, and rank from high to low by the total number."
        ]
    },
    "3058@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Language",
            "y_name": "count(*)",
            "x_data": [
                [
                    "English",
                    "Italian"
                ]
            ],
            "y_data": [
                [
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each language, list the number of TV Channels that use it Plot them as bar chart, sort in asc by the bar.",
            "List each language and the number of TV Channels using it Visualize by bar chart, I want to order X in ascending order please.",
            "List each language and the number of TV Channels using it in a bar chart, and show by the bars from low to high.",
            "Bar chart of the total number from each language, and sort in asc by the bar."
        ]
    },
    "3058@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Language",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Italian",
                    "English"
                ]
            ],
            "y_data": [
                [
                    12,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List each language and the number of TV Channels using it Visualize by bar chart, and list in desc by the X.",
            "For each language, list the number of TV Channels that use it Plot them as bar chart, and I want to sort by the X-axis in descending.",
            "Bar chart of the total number from each language, show X-axis in descending order.",
            "List each language and the number of TV Channels using it in a bar chart, could you sort names in desc order?"
        ]
    },
    "3058@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Language",
            "y_name": "count(*)",
            "x_data": [
                [
                    "English",
                    "Italian"
                ]
            ],
            "y_data": [
                [
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List each language and the number of TV Channels using it Visualize by bar chart, rank y-axis in ascending order.",
            "Bar chart of the total number from each language, and list by the total number from low to high.",
            "List each language and the number of TV Channels using it in a bar chart, list by the total number from low to high.",
            "For each language, list the number of TV Channels that use it Plot them as bar chart, I want to order from low to high by the y axis."
        ]
    },
    "3058@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Language",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Italian",
                    "English"
                ]
            ],
            "y_data": [
                [
                    12,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List each language and the number of TV Channels using it in a bar chart, and display in descending by the total number.",
            "For each language, list the number of TV Channels that use it Plot them as bar chart, order Y in desc order.",
            "Bar chart of the total number from each language, display in descending by the total number.",
            "List each language and the number of TV Channels using it Visualize by bar chart, and rank Y from high to low order."
        ]
    },
    "3062@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Pixel_aspect_ratio_PAR",
            "y_name": "COUNT(Pixel_aspect_ratio_PAR)",
            "x_data": [
                [
                    "16:9",
                    "4:3",
                    "4:3 / 16:9"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Pixel_aspect_ratio_PAR"
        },
        "nl_queries": [
            "What are the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the comparison of the total number of pixel aspect ratio in a bar chart, order names in asc order.",
            "Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English, could you sort by the X-axis in ascending please?",
            "Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart\n\n\n\n, I want to show by the Pixel_aspect_ratio_PAR in ascending."
        ]
    },
    "3062@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Pixel_aspect_ratio_PAR",
            "y_name": "COUNT(Pixel_aspect_ratio_PAR)",
            "x_data": [
                [
                    "4:3 / 16:9",
                    "4:3",
                    "16:9"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Pixel_aspect_ratio_PAR"
        },
        "nl_queries": [
            "Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English, I want to display in desc by the Pixel_aspect_ratio_PAR.",
            "What are the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the comparison of the total number of pixel aspect ratio in a bar chart, I want to display in desc by the Pixel_aspect_ratio_PAR.",
            "Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart\n\n\n\n, list X-axis from high to low order."
        ]
    },
    "3062@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Pixel_aspect_ratio_PAR",
            "y_name": "COUNT(Pixel_aspect_ratio_PAR)",
            "x_data": [
                [
                    "16:9",
                    "4:3 / 16:9",
                    "4:3"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Pixel_aspect_ratio_PAR"
        },
        "nl_queries": [
            "Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English, show by the total number in asc.",
            "What are the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the comparison of the total number of pixel aspect ratio in a bar chart, order in ascending by the y axis.",
            "Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart\n\n\n\n, list in ascending by the Y."
        ]
    },
    "3062@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Pixel_aspect_ratio_PAR",
            "y_name": "COUNT(Pixel_aspect_ratio_PAR)",
            "x_data": [
                [
                    "4:3",
                    "4:3 / 16:9",
                    "16:9"
                ]
            ],
            "y_data": [
                [
                    6,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Pixel_aspect_ratio_PAR"
        },
        "nl_queries": [
            "What are the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the comparison of the total number of pixel aspect ratio in a bar chart, sort by the y axis in desc.",
            "Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart\n\n\n\n, and I want to rank by the y-axis in descending.",
            "Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English, I want to rank by the y-axis in descending."
        ]
    },
    "3064@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Package_Option",
            "y_name": "COUNT(Package_Option)",
            "x_data": [
                [
                    "Sky Famiglia",
                    "Sky Famiglia + Sky HD",
                    "no ( FTV )"
                ]
            ],
            "y_data": [
                [
                    8,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Package_Option"
        },
        "nl_queries": [
            "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and could you display X-axis from low to high order?",
            "A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, could you display in asc by the X-axis?",
            "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a bar chart, could you display in asc by the X-axis?",
            "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart, and sort bar in ascending order."
        ]
    },
    "3064@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Package_Option",
            "y_name": "COUNT(Package_Option)",
            "x_data": [
                [
                    "no ( FTV )",
                    "Sky Famiglia + Sky HD",
                    "Sky Famiglia"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Package_Option"
        },
        "nl_queries": [
            "A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, I want to rank names in descending order.",
            "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart, and I want to show from high to low by the X.",
            "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a bar chart, and list by the bars from high to low.",
            "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, I want to rank names in descending order."
        ]
    },
    "3064@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Package_Option",
            "y_name": "COUNT(Package_Option)",
            "x_data": [
                [
                    "Sky Famiglia + Sky HD",
                    "no ( FTV )",
                    "Sky Famiglia"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Package_Option"
        },
        "nl_queries": [
            "A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and order from low to high by the Y please.",
            "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a bar chart, and rank by the total number in ascending.",
            "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and rank in ascending by the total number please.",
            "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart, and rank by the total number in ascending."
        ]
    },
    "3064@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Package_Option",
            "y_name": "COUNT(Package_Option)",
            "x_data": [
                [
                    "Sky Famiglia",
                    "no ( FTV )",
                    "Sky Famiglia + Sky HD"
                ]
            ],
            "y_data": [
                [
                    8,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Package_Option"
        },
        "nl_queries": [
            "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a bar chart, and list in descending by the y-axis.",
            "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and display total number in desc order.",
            "A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and list in desc by the total number.",
            "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart, rank how many package option in desc order."
        ]
    },
    "2859@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquartered_City",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Bahawalpur City",
                    "Bhakkar City",
                    "Hafizabad City",
                    "Khanewal City"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many stores are headquarted in each city Plot them as bar chart, rank by the x-axis from low to high.",
            "Find the number of stores in each city Plot them as bar chart, show by the x-axis in ascending.",
            "Draw a bar chart for how many stores are headquarted in each city?, and I want to display by the x axis from low to high.",
            "Return a bar chart on how many stores are headquarted in each city?, and sort in asc by the bars."
        ]
    },
    "2859@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquartered_City",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Khanewal City",
                    "Hafizabad City",
                    "Bhakkar City",
                    "Bahawalpur City"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of stores in each city Plot them as bar chart, and show in descending by the names.",
            "How many stores are headquarted in each city Plot them as bar chart, could you rank by the X from high to low?",
            "Draw a bar chart for how many stores are headquarted in each city?, list from high to low by the bar please.",
            "Return a bar chart on how many stores are headquarted in each city?, and order in desc by the bars."
        ]
    },
    "2859@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquartered_City",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Bahawalpur City",
                    "Bhakkar City",
                    "Hafizabad City",
                    "Khanewal City"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of stores in each city Plot them as bar chart, and I want to order in asc by the Y.",
            "How many stores are headquarted in each city Plot them as bar chart, and list in asc by the total number.",
            "Draw a bar chart for how many stores are headquarted in each city?, sort in asc by the the total number .",
            "Return a bar chart on how many stores are headquarted in each city?, list in asc by the total number please."
        ]
    },
    "2859@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquartered_City",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Khanewal City",
                    "Hafizabad City",
                    "Bhakkar City",
                    "Bahawalpur City"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many stores are headquarted in each city Plot them as bar chart, and show in descending by the y axis please.",
            "Return a bar chart on how many stores are headquarted in each city?, display in desc by the the total number .",
            "Find the number of stores in each city Plot them as bar chart, and show in descending by the y axis please.",
            "Draw a bar chart for how many stores are headquarted in each city?, and I want to rank by the Y in desc."
        ]
    },
    "2860@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "District_name",
            "y_name": "City_Population",
            "x_data": [
                [
                    "Bahawalpur District",
                    "Chiniot District",
                    "Dera Ghazi Khan District",
                    "Gujranwala District",
                    "Gujrat District",
                    "Jhang District",
                    "Kasur District"
                ]
            ],
            "y_data": [
                [
                    530438,
                    219254,
                    464742,
                    1526168,
                    328512,
                    365198,
                    314617
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and population of districts with population between 200000 and 200000 Show a bar chart, display in asc by the District_name.",
            "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, I want to sort by the bars in asc please.",
            "Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, and show in ascending by the District_name.",
            "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents? Show a bar graph, order x-axis in ascending order."
        ]
    },
    "2860@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "District_name",
            "y_name": "City_Population",
            "x_data": [
                [
                    "Kasur District",
                    "Jhang District",
                    "Gujrat District",
                    "Gujranwala District",
                    "Dera Ghazi Khan District",
                    "Chiniot District",
                    "Bahawalpur District"
                ]
            ],
            "y_data": [
                [
                    314617,
                    365198,
                    328512,
                    1526168,
                    464742,
                    219254,
                    530438
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and population of districts with population between 200000 and 200000 Show a bar chart, and sort District_name from high to low order.",
            "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, and display in desc by the bars.",
            "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents? Show a bar graph, and rank in desc by the X.",
            "Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, I want to list X from high to low order please."
        ]
    },
    "2860@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "District_name",
            "y_name": "City_Population",
            "x_data": [
                [
                    "Chiniot District",
                    "Kasur District",
                    "Gujrat District",
                    "Jhang District",
                    "Dera Ghazi Khan District",
                    "Bahawalpur District",
                    "Gujranwala District"
                ]
            ],
            "y_data": [
                [
                    219254,
                    314617,
                    328512,
                    365198,
                    464742,
                    530438,
                    1526168
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and population of districts with population between 200000 and 200000 Show a bar chart, I want to rank in asc by the y axis please.",
            "Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, show by the City_Population in ascending.",
            "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents? Show a bar graph, I want to rank in asc by the y axis please.",
            "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, display by the City_Population from low to high."
        ]
    },
    "2860@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "District_name",
            "y_name": "City_Population",
            "x_data": [
                [
                    "Gujranwala District",
                    "Bahawalpur District",
                    "Dera Ghazi Khan District",
                    "Jhang District",
                    "Gujrat District",
                    "Kasur District",
                    "Chiniot District"
                ]
            ],
            "y_data": [
                [
                    1526168,
                    530438,
                    464742,
                    365198,
                    328512,
                    314617,
                    219254
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents? Show a bar graph, display in descending by the y axis.",
            "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, show by the y-axis in descending.",
            "Find the name and population of districts with population between 200000 and 200000 Show a bar chart, show by the y-axis in descending.",
            "Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, and I want to sort Y-axis in descending order."
        ]
    },
    "2862@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "City Mall",
                    "Village Store"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each type of store, how many of them are there Plot them as bar chart, and sort from low to high by the X.",
            "Find all types of store and number of them Visualize by bar chart, could you order Type in ascending order?",
            "Bar chart x axis type y axis the total number, could you sort x-axis in asc order please?"
        ]
    },
    "2862@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Village Store",
                    "City Mall"
                ]
            ],
            "y_data": [
                [
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find all types of store and number of them Visualize by bar chart, could you sort x axis in desc order please?",
            "Bar chart x axis type y axis the total number, and order in desc by the names.",
            "For each type of store, how many of them are there Plot them as bar chart, and display by the X from high to low."
        ]
    },
    "2862@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "City Mall",
                    "Village Store"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis type y axis the total number, display Y-axis in asc order.",
            "Find all types of store and number of them Visualize by bar chart, order by the y axis in asc please.",
            "For each type of store, how many of them are there Plot them as bar chart, and list in ascending by the y-axis."
        ]
    },
    "2862@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Village Store",
                    "City Mall"
                ]
            ],
            "y_data": [
                [
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each type of store, how many of them are there Plot them as bar chart, and display from high to low by the Y-axis.",
            "Bar chart x axis type y axis the total number, display from high to low by the Y-axis.",
            "Find all types of store and number of them Visualize by bar chart, rank by the y axis in descending please."
        ]
    },
    "2075@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code ORDER BY Type_of_Thing_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code ORDER BY Type_of_Thing_Code ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Commen",
                    "Electronics",
                    "Furniture"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Give me a bar chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21', could you list by the X from low to high?"
        ]
    },
    "2075@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code ORDER BY Type_of_Thing_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code ORDER BY Type_of_Thing_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Furniture",
                    "Electronics",
                    "Commen"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Give me a bar chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21', order by the X-axis in descending."
        ]
    },
    "2075@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Furniture",
                    "Electronics",
                    "Commen"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Give me a bar chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21', and sort y-axis from low to high order please."
        ]
    },
    "2075@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Commen",
                    "Electronics",
                    "Furniture"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Give me a bar chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21', sort the number of type of thing code in desc order."
        ]
    },
    "2079@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) ASC",
                "binning": "BIN date_moved_in BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "Mon",
                    "Sun",
                    "Thur",
                    "Wed",
                    "Fri",
                    "Sat",
                    "Tue"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY WEEKDAY"
        },
        "nl_queries": [
            "What are the distinct move in dates of the residents, and count them by a bar chart, I want to rank by the Y-axis from low to high.",
            "Give me a bar chart for the number of date moved in of each date moved in, and could you list Y-axis from low to high order?",
            "A bar chart for what are the number of the distinct move in dates of the residents?, order total number in asc order.",
            "What are the number of the distinct move in dates of the residents?, could you show in ascending by the total number?"
        ]
    },
    "2079@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) DESC",
                "binning": "BIN date_moved_in BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "Tue",
                    "Sat",
                    "Fri",
                    "Wed",
                    "Thur",
                    "Sun",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY WEEKDAY"
        },
        "nl_queries": [
            "A bar chart for what are the number of the distinct move in dates of the residents?, and sort by the total number in descending.",
            "What are the number of the distinct move in dates of the residents?, and sort by the total number in descending.",
            "Give me a bar chart for the number of date moved in of each date moved in, and list y axis from high to low order.",
            "What are the distinct move in dates of the residents, and count them by a bar chart, and list by the Y in desc."
        ]
    },
    "2080@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY Type_of_Thing_Code ,  organization_details ORDER BY organization_details ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY Type_of_Thing_Code ,  organization_details ORDER BY organization_details ASC"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organization_details",
            "y_name": "COUNT(organization_details)",
            "x_data": [
                [
                    "Denesik and Sons Party",
                    "Reinger, Hudson and Nolan Group",
                    "Robel-Schulist Group"
                ]
            ],
            "y_data": [
                [
                    5,
                    1,
                    2
                ],
                [
                    4,
                    1,
                    0
                ],
                [
                    1,
                    0,
                    1
                ]
            ],
            "classify": [
                "Commen",
                "Electronics",
                "Furniture"
            ],
            "describe": "GROUP BY Type_of_Thing_Code, GROUP BY organization_details"
        },
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, could you order bars in ascending order?"
        ]
    },
    "2080@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY Type_of_Thing_Code ,  organization_details ORDER BY organization_details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY Type_of_Thing_Code ,  organization_details ORDER BY organization_details DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organization_details",
            "y_name": "COUNT(organization_details)",
            "x_data": [
                [
                    "Robel-Schulist Group",
                    "Reinger, Hudson and Nolan Group",
                    "Denesik and Sons Party"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    5
                ],
                [
                    0,
                    1,
                    4
                ],
                [
                    1,
                    0,
                    1
                ]
            ],
            "classify": [
                "Commen",
                "Electronics",
                "Furniture"
            ],
            "describe": "GROUP BY Type_of_Thing_Code, GROUP BY organization_details"
        },
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, and could you show x axis in desc order?"
        ]
    },
    "2080@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY Type_of_Thing_Code ,  organization_details ORDER BY COUNT(organization_details) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY Type_of_Thing_Code ,  organization_details ORDER BY COUNT(organization_details) ASC"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organization_details",
            "y_name": "COUNT(organization_details)",
            "x_data": [
                [
                    "Reinger, Hudson and Nolan Group",
                    "Robel-Schulist Group",
                    "Denesik and Sons Party"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    5
                ],
                [
                    1,
                    0,
                    4
                ],
                [
                    0,
                    1,
                    1
                ]
            ],
            "classify": [
                "Commen",
                "Electronics",
                "Furniture"
            ],
            "describe": "GROUP BY Type_of_Thing_Code, GROUP BY organization_details"
        },
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, rank by the how many organization details in asc."
        ]
    },
    "2080@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY Type_of_Thing_Code ,  organization_details ORDER BY COUNT(organization_details) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY Type_of_Thing_Code ,  organization_details ORDER BY COUNT(organization_details) DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organization_details",
            "y_name": "COUNT(organization_details)",
            "x_data": [
                [
                    "Denesik and Sons Party",
                    "Robel-Schulist Group",
                    "Reinger, Hudson and Nolan Group"
                ]
            ],
            "y_data": [
                [
                    5,
                    2,
                    1
                ],
                [
                    4,
                    0,
                    1
                ],
                [
                    1,
                    1,
                    0
                ]
            ],
            "classify": [
                "Commen",
                "Electronics",
                "Furniture"
            ],
            "describe": "GROUP BY Type_of_Thing_Code, GROUP BY organization_details"
        },
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, I want to show in descending by the Y-axis please."
        ]
    },
    "2081@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ,  Type_of_Thing_Code ORDER BY Type_of_Thing_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ,  Type_of_Thing_Code ORDER BY Type_of_Thing_Code ASC"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Commen",
                    "Electronics",
                    "Furniture"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    1
                ],
                [
                    1,
                    1,
                    0
                ],
                [
                    2,
                    0,
                    1
                ]
            ],
            "classify": [
                "Denesik and Sons Party",
                "Reinger, Hudson and Nolan Group",
                "Robel-Schulist Group"
            ],
            "describe": "GROUP BY organization_details, GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, list from low to high by the x axis please."
        ]
    },
    "2081@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ,  Type_of_Thing_Code ORDER BY Type_of_Thing_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ,  Type_of_Thing_Code ORDER BY Type_of_Thing_Code DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Furniture",
                    "Electronics",
                    "Commen"
                ]
            ],
            "y_data": [
                [
                    1,
                    4,
                    5
                ],
                [
                    0,
                    1,
                    1
                ],
                [
                    1,
                    0,
                    2
                ]
            ],
            "classify": [
                "Denesik and Sons Party",
                "Reinger, Hudson and Nolan Group",
                "Robel-Schulist Group"
            ],
            "describe": "GROUP BY organization_details, GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, and display in desc by the names please."
        ]
    },
    "2081@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ,  Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ,  Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) ASC"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Furniture",
                    "Electronics",
                    "Commen"
                ]
            ],
            "y_data": [
                [
                    1,
                    4,
                    5
                ],
                [
                    0,
                    1,
                    1
                ],
                [
                    1,
                    0,
                    2
                ]
            ],
            "classify": [
                "Denesik and Sons Party",
                "Reinger, Hudson and Nolan Group",
                "Robel-Schulist Group"
            ],
            "describe": "GROUP BY organization_details, GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, list by the total number in asc."
        ]
    },
    "2081@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ,  Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ,  Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Commen",
                    "Electronics",
                    "Furniture"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    1
                ],
                [
                    1,
                    1,
                    0
                ],
                [
                    2,
                    0,
                    1
                ]
            ],
            "classify": [
                "Denesik and Sons Party",
                "Reinger, Hudson and Nolan Group",
                "Robel-Schulist Group"
            ],
            "describe": "GROUP BY organization_details, GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, show in desc by the Y."
        ]
    },
    "2087@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things GROUP BY Type_of_Thing_Code ORDER BY Type_of_Thing_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things GROUP BY Type_of_Thing_Code ORDER BY Type_of_Thing_Code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Commen",
                    "Electronics",
                    "Furniture"
                ]
            ],
            "y_data": [
                [
                    8,
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Compare the number of items in the type of each thing using a bar chart, and show by the names from low to high.",
            "Show the number of type of thing code from each type of thing code, and could you rank Type_of_Thing_Code from low to high order?"
        ]
    },
    "2087@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things GROUP BY Type_of_Thing_Code ORDER BY Type_of_Thing_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things GROUP BY Type_of_Thing_Code ORDER BY Type_of_Thing_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Furniture",
                    "Electronics",
                    "Commen"
                ]
            ],
            "y_data": [
                [
                    2,
                    5,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Compare the number of items in the type of each thing using a bar chart, and sort by the names in descending.",
            "Show the number of type of thing code from each type of thing code, I want to rank in desc by the X please."
        ]
    },
    "2087@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things GROUP BY Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things GROUP BY Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Furniture",
                    "Electronics",
                    "Commen"
                ]
            ],
            "y_data": [
                [
                    2,
                    5,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Compare the number of items in the type of each thing using a bar chart, list in asc by the Y please.",
            "Show the number of type of thing code from each type of thing code, and I want to rank Y-axis in asc order please."
        ]
    },
    "2087@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things GROUP BY Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things GROUP BY Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Commen",
                    "Electronics",
                    "Furniture"
                ]
            ],
            "y_data": [
                [
                    8,
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code"
        },
        "nl_queries": [
            "Compare the number of items in the type of each thing using a bar chart, could you sort how many type of thing code in desc order please?",
            "Show the number of type of thing code from each type of thing code, and sort in descending by the total number."
        ]
    },
    "2088@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ORDER BY organization_details ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ORDER BY organization_details ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organization_details",
            "y_name": "COUNT(organization_details)",
            "x_data": [
                [
                    "Denesik and Sons Party",
                    "Reinger, Hudson and Nolan Group",
                    "Robel-Schulist Group"
                ]
            ],
            "y_data": [
                [
                    10,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organization_details"
        },
        "nl_queries": [
            "Just give me a histogram that X is the details of the organization and the Y-axis is the number of things they own, and order in ascending by the bars.",
            "List the number of items by the details of the organization that owns it using a bar chart, rank in ascending by the organization_details."
        ]
    },
    "2088@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ORDER BY organization_details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ORDER BY organization_details DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organization_details",
            "y_name": "COUNT(organization_details)",
            "x_data": [
                [
                    "Robel-Schulist Group",
                    "Reinger, Hudson and Nolan Group",
                    "Denesik and Sons Party"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    10
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organization_details"
        },
        "nl_queries": [
            "List the number of items by the details of the organization that owns it using a bar chart, and could you order X-axis in descending order?",
            "Just give me a histogram that X is the details of the organization and the Y-axis is the number of things they own, show by the x-axis in desc."
        ]
    },
    "2088@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ORDER BY COUNT(organization_details) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ORDER BY COUNT(organization_details) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organization_details",
            "y_name": "COUNT(organization_details)",
            "x_data": [
                [
                    "Reinger, Hudson and Nolan Group",
                    "Robel-Schulist Group",
                    "Denesik and Sons Party"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    10
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organization_details"
        },
        "nl_queries": [
            "Just give me a histogram that X is the details of the organization and the Y-axis is the number of things they own, sort by the Y-axis in ascending.",
            "List the number of items by the details of the organization that owns it using a bar chart, and display y-axis in asc order."
        ]
    },
    "2088@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ORDER BY COUNT(organization_details) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ORDER BY COUNT(organization_details) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organization_details",
            "y_name": "COUNT(organization_details)",
            "x_data": [
                [
                    "Denesik and Sons Party",
                    "Robel-Schulist Group",
                    "Reinger, Hudson and Nolan Group"
                ]
            ],
            "y_data": [
                [
                    10,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organization_details"
        },
        "nl_queries": [
            "List the number of items by the details of the organization that owns it using a bar chart, order total number in descending order.",
            "Just give me a histogram that X is the details of the organization and the Y-axis is the number of things they own, show Y in desc order."
        ]
    },
    "2096@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY date_moved_in ORDER BY date_moved_in ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY date_moved_in ORDER BY date_moved_in ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2015-03-27",
                    "2016-09-27"
                ]
            ],
            "y_data": [
                [
                    9,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_moved_in"
        },
        "nl_queries": [
            "What is the proportion of each customer's move in date? Show me the bar chart, sort X from low to high order please.",
            "Please use a bar chart to compare the number of customers of each customer's move in date, and order by the bars from low to high."
        ]
    },
    "2096@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY date_moved_in ORDER BY date_moved_in DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY date_moved_in ORDER BY date_moved_in DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2016-09-27",
                    "2015-03-27"
                ]
            ],
            "y_data": [
                [
                    4,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_moved_in"
        },
        "nl_queries": [
            "Please use a bar chart to compare the number of customers of each customer's move in date, and could you display X-axis in desc order?",
            "What is the proportion of each customer's move in date? Show me the bar chart, and could you rank from high to low by the names?"
        ]
    },
    "2096@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY date_moved_in ORDER BY COUNT(date_moved_in) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY date_moved_in ORDER BY COUNT(date_moved_in) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2016-09-27",
                    "2015-03-27"
                ]
            ],
            "y_data": [
                [
                    4,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_moved_in"
        },
        "nl_queries": [
            "Please use a bar chart to compare the number of customers of each customer's move in date, and rank by the total number from low to high.",
            "What is the proportion of each customer's move in date? Show me the bar chart, and show by the how many date moved in in asc please."
        ]
    },
    "2096@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY date_moved_in ORDER BY COUNT(date_moved_in) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY date_moved_in ORDER BY COUNT(date_moved_in) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2015-03-27",
                    "2016-09-27"
                ]
            ],
            "y_data": [
                [
                    9,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_moved_in"
        },
        "nl_queries": [
            "Please use a bar chart to compare the number of customers of each customer's move in date, could you rank by the how many date moved in from high to low?",
            "What is the proportion of each customer's move in date? Show me the bar chart, I want to show in desc by the Y."
        ]
    },
    "2097@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) ASC",
                "binning": "BIN date_moved_in BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2016",
                    "2015"
                ]
            ],
            "y_data": [
                [
                    4,
                    9
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY YEAR"
        },
        "nl_queries": [
            "Please use a bar chart to compare the number of customers of each customer's move in date, note that you should bin move in date into Year interval, and order the number of date moved in in asc order please.",
            "What is the proportion of each customer's move in date? You can show me a bar chart that bins move in date into Year interval, and sort by the y axis in ascending."
        ]
    },
    "2097@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) DESC",
                "binning": "BIN date_moved_in BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2015",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    9,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY YEAR"
        },
        "nl_queries": [
            "Please use a bar chart to compare the number of customers of each customer's move in date, note that you should bin move in date into Year interval, and list total number in descending order.",
            "What is the proportion of each customer's move in date? You can show me a bar chart that bins move in date into Year interval, sort from high to low by the the number of date moved in."
        ]
    },
    "2102@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) ASC",
                "binning": "BIN date_moved_in BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "Mon",
                    "Sat",
                    "Sun",
                    "Thur",
                    "Wed",
                    "Tue",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    9
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY WEEKDAY"
        },
        "nl_queries": [
            "Please use a bar chart to compare the number of customers of each customer's move-in date, note that you should bin move-in date into Day Of Week interval, and display y axis from low to high order.",
            "What is the proportion of each customer's move in date? You can show me a bar chart that bins move in date into Weekday interval, order y-axis in asc order."
        ]
    },
    "2102@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) DESC",
                "binning": "BIN date_moved_in BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "Fri",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Sun",
                    "Sat",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    9,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY WEEKDAY"
        },
        "nl_queries": [
            "Please use a bar chart to compare the number of customers of each customer's move-in date, note that you should bin move-in date into Day Of Week interval, sort in descending by the Y.",
            "What is the proportion of each customer's move in date? You can show me a bar chart that bins move in date into Weekday interval, and could you show in descending by the Y?"
        ]
    },
    "2107@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_details , COUNT(customer_details) FROM Customers GROUP BY customer_details ORDER BY customer_details ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_details , COUNT(customer_details) FROM Customers GROUP BY customer_details ORDER BY customer_details ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_details",
            "y_name": "COUNT(customer_details)",
            "x_data": [
                [
                    "Esteban Senger",
                    "Mackenzie Hettinger V",
                    "Monty Sauer III",
                    "Mr. Raul Prosacco",
                    "Oma Smith",
                    "Sabryna Moore PhD",
                    "Tyrique Durgan II",
                    "Vincenza Price"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    2,
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY customer_details"
        },
        "nl_queries": [
            "Can you draw a bar chart to show the number of items in each customer details category?, and show in ascending by the x-axis.",
            "Please compare the frequency of the customer details using a bar chart, and could you list from low to high by the customer_details?",
            "Bar graph to show the number of customer details from different customer details, and rank names in ascending order."
        ]
    },
    "2107@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_details , COUNT(customer_details) FROM Customers GROUP BY customer_details ORDER BY customer_details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_details , COUNT(customer_details) FROM Customers GROUP BY customer_details ORDER BY customer_details DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_details",
            "y_name": "COUNT(customer_details)",
            "x_data": [
                [
                    "Vincenza Price",
                    "Tyrique Durgan II",
                    "Sabryna Moore PhD",
                    "Oma Smith",
                    "Mr. Raul Prosacco",
                    "Monty Sauer III",
                    "Mackenzie Hettinger V",
                    "Esteban Senger"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    4,
                    2,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY customer_details"
        },
        "nl_queries": [
            "Please compare the frequency of the customer details using a bar chart, and I want to show x-axis in desc order.",
            "Bar graph to show the number of customer details from different customer details, and list in desc by the names.",
            "Can you draw a bar chart to show the number of items in each customer details category?, list in desc by the names."
        ]
    },
    "2107@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_details , COUNT(customer_details) FROM Customers GROUP BY customer_details ORDER BY COUNT(customer_details) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_details , COUNT(customer_details) FROM Customers GROUP BY customer_details ORDER BY COUNT(customer_details) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_details",
            "y_name": "COUNT(customer_details)",
            "x_data": [
                [
                    "Esteban Senger",
                    "Monty Sauer III",
                    "Mr. Raul Prosacco",
                    "Tyrique Durgan II",
                    "Vincenza Price",
                    "Mackenzie Hettinger V",
                    "Oma Smith",
                    "Sabryna Moore PhD"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY customer_details"
        },
        "nl_queries": [
            "Can you draw a bar chart to show the number of items in each customer details category?, I want to order in asc by the total number.",
            "Bar graph to show the number of customer details from different customer details, I want to order in asc by the total number.",
            "Please compare the frequency of the customer details using a bar chart, could you display in ascending by the y-axis?"
        ]
    },
    "2107@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_details , COUNT(customer_details) FROM Customers GROUP BY customer_details ORDER BY COUNT(customer_details) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_details , COUNT(customer_details) FROM Customers GROUP BY customer_details ORDER BY COUNT(customer_details) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_details",
            "y_name": "COUNT(customer_details)",
            "x_data": [
                [
                    "Sabryna Moore PhD",
                    "Oma Smith",
                    "Mackenzie Hettinger V",
                    "Vincenza Price",
                    "Tyrique Durgan II",
                    "Mr. Raul Prosacco",
                    "Monty Sauer III",
                    "Esteban Senger"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY customer_details"
        },
        "nl_queries": [
            "Can you draw a bar chart to show the number of items in each customer details category?, and list total number in desc order.",
            "Bar graph to show the number of customer details from different customer details, and list Y from high to low order.",
            "Please compare the frequency of the customer details using a bar chart, and sort in desc by the Y-axis."
        ]
    },
    "2108@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT other_details , resident_id FROM Residents ORDER BY other_details ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT other_details , resident_id FROM Residents ORDER BY other_details ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "other_details",
            "y_name": "resident_id",
            "x_data": [
                [
                    "Anderson Batz",
                    "Cassie Johnson",
                    "Elroy Schuster",
                    "Jacques Glover II",
                    "Jess Wyman",
                    "Loy Walter",
                    "Miss Alanis Lockman",
                    "Mrs. Raphaelle Fisher",
                    "Prof. Nasir Hoppe",
                    "Terrill Bernhard",
                    "Tiffany Jaskolski"
                ]
            ],
            "y_data": [
                [
                    6,
                    90,
                    43,
                    88,
                    23,
                    83,
                    28,
                    87,
                    45,
                    67,
                    47
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis other details y axis resident_id, sort by the bars from low to high please.",
            "Just list the resident id and details in a bar chart, and could you sort in ascending by the bar please?"
        ]
    },
    "2108@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT other_details , resident_id FROM Residents ORDER BY other_details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT other_details , resident_id FROM Residents ORDER BY other_details DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "other_details",
            "y_name": "resident_id",
            "x_data": [
                [
                    "Tiffany Jaskolski",
                    "Terrill Bernhard",
                    "Prof. Nasir Hoppe",
                    "Mrs. Raphaelle Fisher",
                    "Miss Alanis Lockman",
                    "Loy Walter",
                    "Jess Wyman",
                    "Jacques Glover II",
                    "Elroy Schuster",
                    "Cassie Johnson",
                    "Anderson Batz"
                ]
            ],
            "y_data": [
                [
                    47,
                    67,
                    45,
                    87,
                    28,
                    83,
                    23,
                    88,
                    43,
                    90,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis other details y axis resident_id, list in desc by the names.",
            "Just list the resident id and details in a bar chart, rank in descending by the bars."
        ]
    },
    "2108@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT other_details , resident_id FROM Residents ORDER BY resident_id ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT other_details , resident_id FROM Residents ORDER BY resident_id ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "other_details",
            "y_name": "resident_id",
            "x_data": [
                [
                    "Anderson Batz",
                    "Jess Wyman",
                    "Miss Alanis Lockman",
                    "Elroy Schuster",
                    "Prof. Nasir Hoppe",
                    "Tiffany Jaskolski",
                    "Terrill Bernhard",
                    "Loy Walter",
                    "Mrs. Raphaelle Fisher",
                    "Jacques Glover II",
                    "Cassie Johnson"
                ]
            ],
            "y_data": [
                [
                    6,
                    23,
                    28,
                    43,
                    45,
                    47,
                    67,
                    83,
                    87,
                    88,
                    90
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Just list the resident id and details in a bar chart, and rank in ascending by the resident_id.",
            "Bar chart x axis other details y axis resident_id, could you list Y in ascending order?"
        ]
    },
    "2108@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT other_details , resident_id FROM Residents ORDER BY resident_id DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT other_details , resident_id FROM Residents ORDER BY resident_id DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "other_details",
            "y_name": "resident_id",
            "x_data": [
                [
                    "Cassie Johnson",
                    "Jacques Glover II",
                    "Mrs. Raphaelle Fisher",
                    "Loy Walter",
                    "Terrill Bernhard",
                    "Tiffany Jaskolski",
                    "Prof. Nasir Hoppe",
                    "Elroy Schuster",
                    "Miss Alanis Lockman",
                    "Jess Wyman",
                    "Anderson Batz"
                ]
            ],
            "y_data": [
                [
                    90,
                    88,
                    87,
                    83,
                    67,
                    47,
                    45,
                    43,
                    28,
                    23,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis other details y axis resident_id, display y-axis in descending order.",
            "Just list the resident id and details in a bar chart, I want to show from high to low by the resident_id please."
        ]
    },
    "2109@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events GROUP BY date_moved_in ORDER BY date_moved_in ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events GROUP BY date_moved_in ORDER BY date_moved_in ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2015-03-27",
                    "2016-09-27"
                ]
            ],
            "y_data": [
                [
                    9,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_moved_in"
        },
        "nl_queries": [
            "Group and count the move in date in a bar chart, could you display X-axis from low to high order?",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, could you show by the bar in ascending please?",
            "Draw a bar chart of date moved in versus how many date moved in, sort X from low to high order."
        ]
    },
    "2109@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events GROUP BY date_moved_in ORDER BY date_moved_in DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events GROUP BY date_moved_in ORDER BY date_moved_in DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2016-09-27",
                    "2015-03-27"
                ]
            ],
            "y_data": [
                [
                    4,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_moved_in"
        },
        "nl_queries": [
            "Draw a bar chart of date moved in versus how many date moved in, and sort x axis from high to low order.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, rank bar from high to low order.",
            "Group and count the move in date in a bar chart, and rank bar from high to low order."
        ]
    },
    "2109@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events GROUP BY date_moved_in ORDER BY COUNT(date_moved_in) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events GROUP BY date_moved_in ORDER BY COUNT(date_moved_in) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2016-09-27",
                    "2015-03-27"
                ]
            ],
            "y_data": [
                [
                    4,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_moved_in"
        },
        "nl_queries": [
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, rank Y-axis in asc order.",
            "Draw a bar chart of date moved in versus how many date moved in, and sort in asc by the y axis.",
            "Group and count the move in date in a bar chart, show Y-axis in ascending order please."
        ]
    },
    "2109@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events GROUP BY date_moved_in ORDER BY COUNT(date_moved_in) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events GROUP BY date_moved_in ORDER BY COUNT(date_moved_in) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2015-03-27",
                    "2016-09-27"
                ]
            ],
            "y_data": [
                [
                    9,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_moved_in"
        },
        "nl_queries": [
            "Group and count the move in date in a bar chart, order in desc by the Y please.",
            "Draw a bar chart of date moved in versus how many date moved in, and order in desc by the Y please.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, and rank Y in desc order please."
        ]
    },
    "2110@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) ASC",
                "binning": "BIN date_moved_in BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2016",
                    "2015"
                ]
            ],
            "y_data": [
                [
                    4,
                    9
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY YEAR"
        },
        "nl_queries": [
            "Group and count the move in date in a bar chart, and I want to bin the X into Year interval, and rank by the the number of date moved in in asc.",
            "Bar chart x axis date moved in y axis how many date moved in, list in ascending by the y axis please.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, please bin X-axis into Year interval, and show by the Y-axis from low to high."
        ]
    },
    "2110@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) DESC",
                "binning": "BIN date_moved_in BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2015",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    9,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY YEAR"
        },
        "nl_queries": [
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, please bin X-axis into Year interval, rank by the y axis from high to low please.",
            "Bar chart x axis date moved in y axis how many date moved in, could you order by the total number in descending?",
            "Group and count the move in date in a bar chart, and I want to bin the X into Year interval, and I want to sort y-axis from high to low order."
        ]
    },
    "2119@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) ASC",
                "binning": "BIN date_moved_in BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "Mon",
                    "Sat",
                    "Sun",
                    "Thur",
                    "Wed",
                    "Tue",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    9
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY WEEKDAY"
        },
        "nl_queries": [
            "Bar chart x axis date moved in y axis how many date moved in, display by the Y from low to high.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, please bin X-axis into Day of Week interval, I want to order from low to high by the how many date moved in.",
            "Group and count the move in date in a bar chart, and bin the X-axis into week day interval, and I want to order from low to high by the how many date moved in."
        ]
    },
    "2119@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) DESC",
                "binning": "BIN date_moved_in BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "Fri",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Sun",
                    "Sat",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    9,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY WEEKDAY"
        },
        "nl_queries": [
            "Group and count the move in date in a bar chart, and bin the X-axis into week day interval, order y-axis in desc order.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, please bin X-axis into Day of Week interval, list from high to low by the how many date moved in.",
            "Bar chart x axis date moved in y axis how many date moved in, order from high to low by the Y-axis."
        ]
    },
    "1435@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Honda",
                    "Toyota"
                ]
            ],
            "y_data": [
                [
                    45,
                    95
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "A bar chart for what are the number of the names of all the Japanese constructors that have earned more than 5 points?, and display x-axis in ascending order.",
            "Find the number of the names of Japanese constructors that have once earned more than 5 points?, show X in asc order.",
            "Find the names of Japanese constructors that have once earned more than 5 points, and count them by a bar chart, I want to rank by the x-axis in ascending.",
            "A bar chart for finding the number of the names of Japanese constructors that have once earned more than 5 points?, and display in asc by the names.",
            "What are the names of all the Japanese constructors that have earned more than 5 points, and count them by a bar chart, and list by the X-axis from low to high please.",
            "What are the number of the names of all the Japanese constructors that have earned more than 5 points?, display in ascending by the x-axis please."
        ]
    },
    "1435@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name ORDER BY name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name ORDER BY name DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Toyota",
                    "Honda"
                ]
            ],
            "y_data": [
                [
                    95,
                    45
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "A bar chart for what are the number of the names of all the Japanese constructors that have earned more than 5 points?, and could you display X-axis in descending order please?",
            "A bar chart for finding the number of the names of Japanese constructors that have once earned more than 5 points?, and display by the X-axis from high to low please.",
            "What are the number of the names of all the Japanese constructors that have earned more than 5 points?, and display by the X-axis from high to low please.",
            "Find the number of the names of Japanese constructors that have once earned more than 5 points?, and sort in desc by the names.",
            "Find the names of Japanese constructors that have once earned more than 5 points, and count them by a bar chart, and I want to display x axis in desc order.",
            "What are the names of all the Japanese constructors that have earned more than 5 points, and count them by a bar chart, and order by the names in descending please."
        ]
    },
    "1435@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name ORDER BY COUNT(name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name ORDER BY COUNT(name) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Honda",
                    "Toyota"
                ]
            ],
            "y_data": [
                [
                    45,
                    95
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "Find the names of Japanese constructors that have once earned more than 5 points, and count them by a bar chart, and display by the Y in ascending.",
            "What are the names of all the Japanese constructors that have earned more than 5 points, and count them by a bar chart, and I want to rank by the y axis in ascending.",
            "A bar chart for finding the number of the names of Japanese constructors that have once earned more than 5 points?, order in asc by the y axis please.",
            "Find the number of the names of Japanese constructors that have once earned more than 5 points?, and could you sort from low to high by the total number?",
            "A bar chart for what are the number of the names of all the Japanese constructors that have earned more than 5 points?, order in asc by the y axis please.",
            "What are the number of the names of all the Japanese constructors that have earned more than 5 points?, and could you show in ascending by the Y?"
        ]
    },
    "1435@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name ORDER BY COUNT(name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name ORDER BY COUNT(name) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Toyota",
                    "Honda"
                ]
            ],
            "y_data": [
                [
                    95,
                    45
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "Find the number of the names of Japanese constructors that have once earned more than 5 points?, and rank in desc by the Y-axis.",
            "A bar chart for finding the number of the names of Japanese constructors that have once earned more than 5 points?, sort total number in descending order please.",
            "Find the names of Japanese constructors that have once earned more than 5 points, and count them by a bar chart, could you order total number from high to low order please?",
            "A bar chart for what are the number of the names of all the Japanese constructors that have earned more than 5 points?, rank in desc by the Y-axis.",
            "What are the number of the names of all the Japanese constructors that have earned more than 5 points?, and could you show how many name in desc order please?",
            "What are the names of all the Japanese constructors that have earned more than 5 points, and count them by a bar chart, and could you show how many name in desc order please?"
        ]
    },
    "1436@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT location , circuitId FROM circuits WHERE country = \"France\" OR country = \"Belgium\" ORDER BY location ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT location , circuitId FROM circuits WHERE country = \"France\" OR country = \"Belgium\" ORDER BY location ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "location",
            "y_name": "circuitId",
            "x_data": [
                [
                    "Brussels",
                    "Clermont-Ferrand",
                    "Dijon",
                    "Heusden-Zolder",
                    "Le Castellet",
                    "Le Mans",
                    "Magny Cours",
                    "Reims",
                    "Rouen",
                    "Spa"
                ]
            ],
            "y_data": [
                [
                    50,
                    51,
                    41,
                    40,
                    34,
                    54,
                    8,
                    55,
                    53,
                    13
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the id and location of circuits that belong to France or Belgium Plot them as bar chart, order in asc by the names.",
            "Visualize a bar chart for what are the ids and locations of all circuits in France or Belgium?, and could you display X-axis in asc order?",
            "What are the ids and locations of all circuits in France or Belgium Show bar chart, could you display X-axis in asc order?",
            "Display a bar chart for what are the ids and locations of all circuits in France or Belgium?, and order by the bar in asc."
        ]
    },
    "1436@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT location , circuitId FROM circuits WHERE country = \"France\" OR country = \"Belgium\" ORDER BY location DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT location , circuitId FROM circuits WHERE country = \"France\" OR country = \"Belgium\" ORDER BY location DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "location",
            "y_name": "circuitId",
            "x_data": [
                [
                    "Spa",
                    "Rouen",
                    "Reims",
                    "Magny Cours",
                    "Le Mans",
                    "Le Castellet",
                    "Heusden-Zolder",
                    "Dijon",
                    "Clermont-Ferrand",
                    "Brussels"
                ]
            ],
            "y_data": [
                [
                    13,
                    53,
                    55,
                    8,
                    54,
                    34,
                    40,
                    41,
                    51,
                    50
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for what are the ids and locations of all circuits in France or Belgium?, could you sort names in descending order?",
            "Find the id and location of circuits that belong to France or Belgium Plot them as bar chart, show X from high to low order please.",
            "Visualize a bar chart for what are the ids and locations of all circuits in France or Belgium?, and show X from high to low order please.",
            "What are the ids and locations of all circuits in France or Belgium Show bar chart, could you sort X-axis from high to low order?"
        ]
    },
    "1436@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT location , circuitId FROM circuits WHERE country = \"France\" OR country = \"Belgium\" ORDER BY circuitId ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT location , circuitId FROM circuits WHERE country = \"France\" OR country = \"Belgium\" ORDER BY circuitId ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "location",
            "y_name": "circuitId",
            "x_data": [
                [
                    "Magny Cours",
                    "Spa",
                    "Le Castellet",
                    "Heusden-Zolder",
                    "Dijon",
                    "Brussels",
                    "Clermont-Ferrand",
                    "Rouen",
                    "Le Mans",
                    "Reims"
                ]
            ],
            "y_data": [
                [
                    8,
                    13,
                    34,
                    40,
                    41,
                    50,
                    51,
                    53,
                    54,
                    55
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for what are the ids and locations of all circuits in France or Belgium?, order in ascending by the total number.",
            "What are the ids and locations of all circuits in France or Belgium Show bar chart, and order in asc by the Y.",
            "Find the id and location of circuits that belong to France or Belgium Plot them as bar chart, and could you display circuitId in ascending order?",
            "Visualize a bar chart for what are the ids and locations of all circuits in France or Belgium?, order in asc by the Y."
        ]
    },
    "1436@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT location , circuitId FROM circuits WHERE country = \"France\" OR country = \"Belgium\" ORDER BY circuitId DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT location , circuitId FROM circuits WHERE country = \"France\" OR country = \"Belgium\" ORDER BY circuitId DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "location",
            "y_name": "circuitId",
            "x_data": [
                [
                    "Reims",
                    "Le Mans",
                    "Rouen",
                    "Clermont-Ferrand",
                    "Brussels",
                    "Dijon",
                    "Heusden-Zolder",
                    "Le Castellet",
                    "Spa",
                    "Magny Cours"
                ]
            ],
            "y_data": [
                [
                    55,
                    54,
                    53,
                    51,
                    50,
                    41,
                    40,
                    34,
                    13,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for what are the ids and locations of all circuits in France or Belgium?, and list y-axis in desc order please.",
            "What are the ids and locations of all circuits in France or Belgium Show bar chart, sort by the total number in desc.",
            "Visualize a bar chart for what are the ids and locations of all circuits in France or Belgium?, could you order Y from high to low order please?",
            "Find the id and location of circuits that belong to France or Belgium Plot them as bar chart, could you sort in descending by the Y?"
        ]
    },
    "1437@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2016-01-01",
                    "2017-01-01"
                ]
            ],
            "y_data": [
                [
                    2,
                    20
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart, and list X-axis from low to high order.",
            "Show me a bar chart about the number of races held in each year after 2014, and rank from low to high by the names."
        ]
    },
    "1437@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2017-01-01",
                    "2016-01-01"
                ]
            ],
            "y_data": [
                [
                    20,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart, and rank in desc by the bar please.",
            "Show me a bar chart about the number of races held in each year after 2014, list in descending by the names."
        ]
    },
    "1437@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY COUNT(year) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY COUNT(year) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2016-01-01",
                    "2017-01-01"
                ]
            ],
            "y_data": [
                [
                    2,
                    20
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "Show me a bar chart about the number of races held in each year after 2014, and I want to list y axis from low to high order please.",
            "How many races are held in each year after 2014? Show me a bar chart, and I want to show by the how many year from low to high."
        ]
    },
    "1437@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY COUNT(year) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY COUNT(year) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2017-01-01",
                    "2016-01-01"
                ]
            ],
            "y_data": [
                [
                    20,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart, and display from high to low by the Y-axis.",
            "Show me a bar chart about the number of races held in each year after 2014, could you list total number in descending order please?"
        ]
    },
    "1438@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014  ORDER BY COUNT(year) ASC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014  ORDER BY COUNT(year) ASC BIN year BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    2,
                    20
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart, and rank total number from low to high order please.",
            "Show me a bar chart about the number of races held in each year after 2014, I want to order y axis from low to high order please."
        ]
    },
    "1438@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014  ORDER BY COUNT(year) DESC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014  ORDER BY COUNT(year) DESC BIN year BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2017",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    20,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart, and could you sort by the Y in desc?",
            "Show me a bar chart about the number of races held in each year after 2014, display from high to low by the how many year."
        ]
    },
    "1447@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\" GROUP BY year ORDER BY year ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\" GROUP BY year ORDER BY year ASC"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2007-01-01",
                    "2008-01-01",
                    "2009-01-01",
                    "2010-01-01",
                    "2011-01-01",
                    "2012-01-01",
                    "2013-01-01",
                    "2014-01-01",
                    "2015-01-01",
                    "2016-01-01",
                    "2017-01-01"
                ]
            ],
            "y_data": [
                [
                    17,
                    18,
                    17,
                    19,
                    19,
                    20,
                    19,
                    19,
                    19,
                    21,
                    20
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, sort in ascending by the x-axis.",
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, could you sort year in ascending order?",
            "How many races that had any driver whose forename is Lewis? Show me a line chart, sort in ascending by the x-axis.",
            "How many races that had any driver whose forename is Lewis? Show me a line chart, display from low to high by the x axis please."
        ]
    },
    "1447@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\" GROUP BY year ORDER BY year DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\" GROUP BY year ORDER BY year DESC"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2017-01-01",
                    "2016-01-01",
                    "2015-01-01",
                    "2014-01-01",
                    "2013-01-01",
                    "2012-01-01",
                    "2011-01-01",
                    "2010-01-01",
                    "2009-01-01",
                    "2008-01-01",
                    "2007-01-01"
                ]
            ],
            "y_data": [
                [
                    20,
                    21,
                    19,
                    19,
                    19,
                    20,
                    19,
                    19,
                    17,
                    18,
                    17
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, show in descending by the X-axis.",
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, and list from high to low by the year.",
            "How many races that had any driver whose forename is Lewis? Show me a line chart, list from high to low by the year.",
            "How many races that had any driver whose forename is Lewis? Show me a line chart, show in descending by the X-axis."
        ]
    },
    "1448@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"  ORDER BY year ASC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"  ORDER BY year ASC BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    17,
                    18,
                    17,
                    19,
                    19,
                    20,
                    19,
                    19,
                    19,
                    21,
                    20
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, and could you order by the X in asc?",
            "How many races that had any driver whose forename is Lewis? Show me a line chart, display by the x axis in ascending.",
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, and sort by the X-axis in asc please.",
            "How many races that had any driver whose forename is Lewis? Show me a line chart, rank by the X in asc please."
        ]
    },
    "1448@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"  ORDER BY year DESC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"  ORDER BY year DESC BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2017",
                    "2016",
                    "2015",
                    "2014",
                    "2013",
                    "2012",
                    "2011",
                    "2010",
                    "2009",
                    "2008",
                    "2007"
                ]
            ],
            "y_data": [
                [
                    20,
                    21,
                    19,
                    19,
                    19,
                    20,
                    19,
                    19,
                    17,
                    18,
                    17
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "How many races that had any driver whose forename is Lewis? Show me a line chart, and order x-axis in descending order.",
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, and I want to sort x axis from high to low order.",
            "How many races that had any driver whose forename is Lewis? Show me a line chart, and sort by the X in descending please.",
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, show from high to low by the X-axis please."
        ]
    },
    "1451@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2016-01-01",
                    "2017-01-01"
                ]
            ],
            "y_data": [
                [
                    2,
                    20
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "Show me a bar chart about the number of races held in each year after 2014, and show x axis in ascending order.",
            "How many races are held in each year after 2014? Show me a bar chart, I want to order x-axis in ascending order please."
        ]
    },
    "1451@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2017-01-01",
                    "2016-01-01"
                ]
            ],
            "y_data": [
                [
                    20,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "Show me a bar chart about the number of races held in each year after 2014, and order X-axis from high to low order please.",
            "How many races are held in each year after 2014? Show me a bar chart, and rank bar in descending order please."
        ]
    },
    "1451@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY COUNT(year) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY COUNT(year) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2016-01-01",
                    "2017-01-01"
                ]
            ],
            "y_data": [
                [
                    2,
                    20
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart, and sort from low to high by the the number of year please.",
            "Show me a bar chart about the number of races held in each year after 2014, and sort from low to high by the the number of year please."
        ]
    },
    "1451@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY COUNT(year) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY COUNT(year) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2017-01-01",
                    "2016-01-01"
                ]
            ],
            "y_data": [
                [
                    20,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart, rank total number in desc order please.",
            "Show me a bar chart about the number of races held in each year after 2014, I want to show by the Y in descending."
        ]
    },
    "1452@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014  ORDER BY COUNT(year) ASC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014  ORDER BY COUNT(year) ASC BIN year BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    2,
                    20
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart, show by the y axis in asc.",
            "Show me a bar chart about the number of races held in each year after 2014, and I want to display from low to high by the the number of year please."
        ]
    },
    "1452@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014  ORDER BY COUNT(year) DESC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014  ORDER BY COUNT(year) DESC BIN year BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2017",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    20,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart, could you show from high to low by the Y please?",
            "Show me a bar chart about the number of races held in each year after 2014, sort from high to low by the y axis."
        ]
    },
    "1460@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Abu Dhabi Grand Prix",
                    "Australian Grand Prix",
                    "Bahrain Grand Prix",
                    "Belgian Grand Prix",
                    "Brazilian Grand Prix",
                    "British Grand Prix",
                    "Canadian Grand Prix",
                    "Chinese Grand Prix",
                    "European Grand Prix",
                    "German Grand Prix",
                    "Hungarian Grand Prix",
                    "Indian Grand Prix",
                    "Italian Grand Prix",
                    "Japanese Grand Prix",
                    "Korean Grand Prix",
                    "Malaysian Grand Prix",
                    "Monaco Grand Prix",
                    "Singapore Grand Prix",
                    "Spanish Grand Prix",
                    "Turkish Grand Prix"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2,
                    3,
                    3,
                    3,
                    2,
                    3,
                    3,
                    3,
                    3,
                    1,
                    3,
                    3,
                    2,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "What are the names of all races held between 2009 and 2011, and count them by a bar chart, and list from low to high by the names.",
            "What are the number of the names of races held between 2009 and 2011?, and list from low to high by the names.",
            "What are the names of races held between 2009 and 2011, and count them by a bar chart, and rank from low to high by the X-axis.",
            "What are the number of the names of all races held between 2009 and 2011?, and order X-axis in ascending order.",
            "A bar chart for what are the number of the names of races held between 2009 and 2011?, and rank from low to high by the X-axis.",
            "A bar chart for what are the number of the names of all races held between 2009 and 2011?, and could you show from low to high by the bar?"
        ]
    },
    "1460@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Turkish Grand Prix",
                    "Spanish Grand Prix",
                    "Singapore Grand Prix",
                    "Monaco Grand Prix",
                    "Malaysian Grand Prix",
                    "Korean Grand Prix",
                    "Japanese Grand Prix",
                    "Italian Grand Prix",
                    "Indian Grand Prix",
                    "Hungarian Grand Prix",
                    "German Grand Prix",
                    "European Grand Prix",
                    "Chinese Grand Prix",
                    "Canadian Grand Prix",
                    "British Grand Prix",
                    "Brazilian Grand Prix",
                    "Belgian Grand Prix",
                    "Bahrain Grand Prix",
                    "Australian Grand Prix",
                    "Abu Dhabi Grand Prix"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    3,
                    3,
                    2,
                    3,
                    3,
                    1,
                    3,
                    3,
                    3,
                    3,
                    2,
                    3,
                    3,
                    3,
                    2,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "A bar chart for what are the number of the names of all races held between 2009 and 2011?, display in desc by the X-axis.",
            "What are the names of all races held between 2009 and 2011, and count them by a bar chart, and order in descending by the X please.",
            "A bar chart for what are the number of the names of races held between 2009 and 2011?, I want to order from high to low by the x axis.",
            "What are the number of the names of races held between 2009 and 2011?, and display by the bars in descending.",
            "What are the names of races held between 2009 and 2011, and count them by a bar chart, I want to order from high to low by the x axis.",
            "What are the number of the names of all races held between 2009 and 2011?, and I want to display by the names from high to low please."
        ]
    },
    "1460@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY COUNT(name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY COUNT(name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Indian Grand Prix",
                    "Bahrain Grand Prix",
                    "Canadian Grand Prix",
                    "Korean Grand Prix",
                    "Abu Dhabi Grand Prix",
                    "Australian Grand Prix",
                    "Belgian Grand Prix",
                    "Brazilian Grand Prix",
                    "British Grand Prix",
                    "Chinese Grand Prix",
                    "European Grand Prix",
                    "German Grand Prix",
                    "Hungarian Grand Prix",
                    "Italian Grand Prix",
                    "Japanese Grand Prix",
                    "Malaysian Grand Prix",
                    "Monaco Grand Prix",
                    "Singapore Grand Prix",
                    "Spanish Grand Prix",
                    "Turkish Grand Prix"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "A bar chart for what are the number of the names of races held between 2009 and 2011?, and order by the how many name in ascending.",
            "What are the number of the names of all races held between 2009 and 2011?, could you list how many name from low to high order?",
            "What are the names of all races held between 2009 and 2011, and count them by a bar chart, and could you list how many name from low to high order?",
            "What are the number of the names of races held between 2009 and 2011?, and could you sort in ascending by the total number please?",
            "A bar chart for what are the number of the names of all races held between 2009 and 2011?, could you sort by the Y-axis in ascending?",
            "What are the names of races held between 2009 and 2011, and count them by a bar chart, order by the how many name in ascending."
        ]
    },
    "1460@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY COUNT(name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY COUNT(name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Turkish Grand Prix",
                    "Spanish Grand Prix",
                    "Singapore Grand Prix",
                    "Monaco Grand Prix",
                    "Malaysian Grand Prix",
                    "Japanese Grand Prix",
                    "Italian Grand Prix",
                    "Hungarian Grand Prix",
                    "German Grand Prix",
                    "European Grand Prix",
                    "Chinese Grand Prix",
                    "British Grand Prix",
                    "Brazilian Grand Prix",
                    "Belgian Grand Prix",
                    "Australian Grand Prix",
                    "Abu Dhabi Grand Prix",
                    "Korean Grand Prix",
                    "Canadian Grand Prix",
                    "Bahrain Grand Prix",
                    "Indian Grand Prix"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "What are the names of races held between 2009 and 2011, and count them by a bar chart, show from high to low by the Y.",
            "A bar chart for what are the number of the names of all races held between 2009 and 2011?, and I want to rank by the Y in desc.",
            "What are the number of the names of races held between 2009 and 2011?, and could you display by the Y from high to low?",
            "What are the names of all races held between 2009 and 2011, and count them by a bar chart, and could you list in descending by the Y-axis?",
            "A bar chart for what are the number of the names of races held between 2009 and 2011?, show from high to low by the Y.",
            "What are the number of the names of all races held between 2009 and 2011?, display by the y-axis from high to low."
        ]
    },
    "2316@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY Years_Played ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY Years_Played ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Years_Played",
            "y_name": "COUNT(Years_Played)",
            "x_data": [
                [
                    "1 (2011)",
                    "2 (1988, 1990)",
                    "2 (2010-2011)",
                    "2 (2010–2011)",
                    "3 (2005, 2007–2008)",
                    "3 (2009–2011)",
                    "4 (2003–2004, 2010–2011)",
                    "8 (2003–2005, 2007–2011)"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Years_Played"
        },
        "nl_queries": [
            "Bar chart of the number of years played from each years played, sort x-axis from low to high order.",
            "Group and count the years played to draw a bar chart, I want to display from low to high by the bars.",
            "Please give me a bar chart to show the number of players in each years played, show in ascending by the bars."
        ]
    },
    "2316@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY Years_Played DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY Years_Played DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Years_Played",
            "y_name": "COUNT(Years_Played)",
            "x_data": [
                [
                    "8 (2003–2005, 2007–2011)",
                    "4 (2003–2004, 2010–2011)",
                    "3 (2009–2011)",
                    "3 (2005, 2007–2008)",
                    "2 (2010–2011)",
                    "2 (2010-2011)",
                    "2 (1988, 1990)",
                    "1 (2011)"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Years_Played"
        },
        "nl_queries": [
            "Bar chart of the number of years played from each years played, and order x-axis in desc order.",
            "Group and count the years played to draw a bar chart, could you sort X in descending order?",
            "Please give me a bar chart to show the number of players in each years played, show Years_Played in desc order please."
        ]
    },
    "2316@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY COUNT(Years_Played) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY COUNT(Years_Played) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Years_Played",
            "y_name": "COUNT(Years_Played)",
            "x_data": [
                [
                    "2 (1988, 1990)",
                    "2 (2010-2011)",
                    "3 (2005, 2007–2008)",
                    "3 (2009–2011)",
                    "4 (2003–2004, 2010–2011)",
                    "8 (2003–2005, 2007–2011)",
                    "1 (2011)",
                    "2 (2010–2011)"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Years_Played"
        },
        "nl_queries": [
            "Bar chart of the number of years played from each years played, sort how many years played from low to high order please.",
            "Group and count the years played to draw a bar chart, sort how many years played from low to high order please.",
            "Please give me a bar chart to show the number of players in each years played, and display by the y-axis in ascending."
        ]
    },
    "2316@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY COUNT(Years_Played) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY COUNT(Years_Played) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Years_Played",
            "y_name": "COUNT(Years_Played)",
            "x_data": [
                [
                    "2 (2010–2011)",
                    "1 (2011)",
                    "8 (2003–2005, 2007–2011)",
                    "4 (2003–2004, 2010–2011)",
                    "3 (2009–2011)",
                    "3 (2005, 2007–2008)",
                    "2 (2010-2011)",
                    "2 (1988, 1990)"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Years_Played"
        },
        "nl_queries": [
            "Group and count the years played to draw a bar chart, list y axis in descending order.",
            "Bar chart of the number of years played from each years played, and list from high to low by the Y-axis.",
            "Please give me a bar chart to show the number of players in each years played, list from high to low by the Y-axis."
        ]
    },
    "2317@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\" ORDER BY Draft_Class ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\" ORDER BY Draft_Class ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Draft_Class",
            "y_name": "Draft_Pick_Number",
            "x_data": [
                [
                    "1996 MLS Inaugural Player Draft",
                    "1999 MLS College Draft",
                    "2000 MLS SuperDraft",
                    "2005 MLS SuperDraft",
                    "2006 MLS SuperDraft",
                    "2008 MLS SuperDraft",
                    "2009 MLS SuperDraft"
                ]
            ],
            "y_data": [
                [
                    87,
                    5,
                    4,
                    9,
                    37,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "what are the draft pick numbers and draft classes for players who play the Defender position?, rank by the X in ascending.",
            "Show the draft pick numbers and draft classes of players whose positions are defenders Show bar chart, I want to list by the x-axis from low to high.",
            "Show me a bar chart for what are the draft pick numbers and draft classes for players who play the Defender position?, could you list by the x axis in ascending?",
            "What are the draft pick numbers and draft classes for players who play the Defender position Show bar chart, show by the bar in ascending.",
            "Show the draft pick numbers and draft classes of players whose positions are defenders in a bar chart, and show by the bar in ascending."
        ]
    },
    "2317@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\" ORDER BY Draft_Class DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\" ORDER BY Draft_Class DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Draft_Class",
            "y_name": "Draft_Pick_Number",
            "x_data": [
                [
                    "2009 MLS SuperDraft",
                    "2008 MLS SuperDraft",
                    "2006 MLS SuperDraft",
                    "2005 MLS SuperDraft",
                    "2000 MLS SuperDraft",
                    "1999 MLS College Draft",
                    "1996 MLS Inaugural Player Draft"
                ]
            ],
            "y_data": [
                [
                    3,
                    4,
                    37,
                    9,
                    4,
                    5,
                    87
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the draft pick numbers and draft classes for players who play the Defender position Show bar chart, and could you order x-axis in descending order?",
            "Show the draft pick numbers and draft classes of players whose positions are defenders in a bar chart, and list by the Draft_Class from high to low.",
            "Show the draft pick numbers and draft classes of players whose positions are defenders Show bar chart, and display from high to low by the x-axis.",
            "what are the draft pick numbers and draft classes for players who play the Defender position?, and list by the Draft_Class from high to low.",
            "Show me a bar chart for what are the draft pick numbers and draft classes for players who play the Defender position?, display in descending by the Draft_Class."
        ]
    },
    "2317@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\" ORDER BY Draft_Pick_Number ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\" ORDER BY Draft_Pick_Number ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Draft_Class",
            "y_name": "Draft_Pick_Number",
            "x_data": [
                [
                    "2009 MLS SuperDraft",
                    "2000 MLS SuperDraft",
                    "2008 MLS SuperDraft",
                    "1999 MLS College Draft",
                    "2005 MLS SuperDraft",
                    "2006 MLS SuperDraft",
                    "1996 MLS Inaugural Player Draft"
                ]
            ],
            "y_data": [
                [
                    3,
                    4,
                    4,
                    5,
                    9,
                    37,
                    87
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me a bar chart for what are the draft pick numbers and draft classes for players who play the Defender position?, and list from low to high by the y axis please.",
            "What are the draft pick numbers and draft classes for players who play the Defender position Show bar chart, and could you order by the Y-axis in ascending?",
            "Show the draft pick numbers and draft classes of players whose positions are defenders in a bar chart, could you order by the Y-axis in ascending?",
            "what are the draft pick numbers and draft classes for players who play the Defender position?, could you sort by the y-axis in asc?",
            "Show the draft pick numbers and draft classes of players whose positions are defenders Show bar chart, list from low to high by the y axis please."
        ]
    },
    "2317@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\" ORDER BY Draft_Pick_Number DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\" ORDER BY Draft_Pick_Number DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Draft_Class",
            "y_name": "Draft_Pick_Number",
            "x_data": [
                [
                    "1996 MLS Inaugural Player Draft",
                    "2006 MLS SuperDraft",
                    "2005 MLS SuperDraft",
                    "1999 MLS College Draft",
                    "2008 MLS SuperDraft",
                    "2000 MLS SuperDraft",
                    "2009 MLS SuperDraft"
                ]
            ],
            "y_data": [
                [
                    87,
                    37,
                    9,
                    5,
                    4,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the draft pick numbers and draft classes for players who play the Defender position Show bar chart, I want to rank from high to low by the Y-axis.",
            "Show me a bar chart for what are the draft pick numbers and draft classes for players who play the Defender position?, could you display in desc by the Y?",
            "Show the draft pick numbers and draft classes of players whose positions are defenders Show bar chart, show Y-axis in descending order please.",
            "Show the draft pick numbers and draft classes of players whose positions are defenders in a bar chart, and list Y from high to low order.",
            "what are the draft pick numbers and draft classes for players who play the Defender position?, rank in descending by the total number please."
        ]
    },
    "2319@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY Country_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY Country_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Indonesia",
                    "Ireland",
                    "Isle of Man",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    4,
                    2,
                    9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for how many players are from each country?, could you show by the Country_name from low to high?",
            "Show the country names and the corresponding number of players Show bar chart, and could you sort X-axis from low to high order?",
            "Show the country names and the corresponding number of players in a bar chart, I want to rank by the x axis from low to high.",
            "How many players are from each country Visualize by bar chart, list bar in asc order.",
            "Show me a bar chart for how many players are from each country?, and show x-axis in ascending order please."
        ]
    },
    "2319@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY Country_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY Country_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "United States",
                    "Isle of Man",
                    "Ireland",
                    "Indonesia"
                ]
            ],
            "y_data": [
                [
                    9,
                    2,
                    4,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me a bar chart for how many players are from each country?, could you list in desc by the X-axis?",
            "Show the country names and the corresponding number of players Show bar chart, could you order in desc by the x axis?",
            "How many players are from each country Visualize by bar chart, display by the bar in descending please.",
            "Show the country names and the corresponding number of players in a bar chart, could you sort in descending by the bar?",
            "Visualize a bar chart for how many players are from each country?, and show bar in descending order please."
        ]
    },
    "2319@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Indonesia",
                    "Isle of Man",
                    "Ireland",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    4,
                    9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the country names and the corresponding number of players in a bar chart, sort total number in asc order.",
            "Visualize a bar chart for how many players are from each country?, order from low to high by the y axis please.",
            "How many players are from each country Visualize by bar chart, list by the Y in asc.",
            "Show me a bar chart for how many players are from each country?, and display Y-axis from low to high order.",
            "Show the country names and the corresponding number of players Show bar chart, order total number from low to high order."
        ]
    },
    "2319@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "United States",
                    "Ireland",
                    "Isle of Man",
                    "Indonesia"
                ]
            ],
            "y_data": [
                [
                    9,
                    4,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many players are from each country Visualize by bar chart, I want to order in desc by the Y-axis.",
            "Show me a bar chart for how many players are from each country?, and order y-axis from high to low order.",
            "Show the country names and the corresponding number of players Show bar chart, I want to rank from high to low by the the total number .",
            "Show the country names and the corresponding number of players in a bar chart, and I want to order in desc by the Y-axis.",
            "Visualize a bar chart for how many players are from each country?, could you sort by the the total number from high to low?"
        ]
    },
    "2321@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY Position ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY Position ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Position",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Defender",
                    "Forward",
                    "Midfielder"
                ]
            ],
            "y_data": [
                [
                    7,
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart for how many players played each position?, order by the x axis from low to high.",
            "Show the position of players and the corresponding number of players Visualize by bar chart, list by the names in asc.",
            "Show the position of players and the corresponding number of players with a bar chart, and could you list from low to high by the x axis?",
            "How many players played each position Plot them as bar chart, rank by the names in ascending.",
            "Return a bar chart on how many players played each position?, show in asc by the x-axis.",
            "Give me a bar chart for the total number of each position, display bars from low to high order please."
        ]
    },
    "2321@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY Position DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY Position DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Position",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Midfielder",
                    "Forward",
                    "Defender"
                ]
            ],
            "y_data": [
                [
                    6,
                    3,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart for how many players played each position?, order names in desc order.",
            "Show the position of players and the corresponding number of players with a bar chart, and order names in desc order.",
            "Show the position of players and the corresponding number of players Visualize by bar chart, could you order in descending by the names please?",
            "Return a bar chart on how many players played each position?, rank Position from high to low order please.",
            "How many players played each position Plot them as bar chart, and order names in desc order.",
            "Give me a bar chart for the total number of each position, and could you order by the x-axis from high to low?"
        ]
    },
    "2321@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Position",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Forward",
                    "Midfielder",
                    "Defender"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a bar chart for the total number of each position, show the total number in asc order.",
            "Show the position of players and the corresponding number of players with a bar chart, and show the total number in asc order.",
            "Draw a bar chart for how many players played each position?, display by the y-axis in ascending.",
            "How many players played each position Plot them as bar chart, and rank in asc by the y-axis.",
            "Show the position of players and the corresponding number of players Visualize by bar chart, and could you show in ascending by the Y please?",
            "Return a bar chart on how many players played each position?, show the total number in asc order."
        ]
    },
    "2321@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Position",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Defender",
                    "Midfielder",
                    "Forward"
                ]
            ],
            "y_data": [
                [
                    7,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many players played each position Plot them as bar chart, and could you display y axis from high to low order?",
            "Give me a bar chart for the total number of each position, rank from high to low by the Y-axis.",
            "Draw a bar chart for how many players played each position?, rank from high to low by the total number.",
            "Return a bar chart on how many players played each position?, and list y-axis from high to low order please.",
            "Show the position of players and the corresponding number of players with a bar chart, and order by the the total number in desc.",
            "Show the position of players and the corresponding number of players Visualize by bar chart, rank from high to low by the total number."
        ]
    },
    "2323@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played ORDER BY Years_Played ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played ORDER BY Years_Played ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Years_Played",
            "y_name": "COUNT(Years_Played)",
            "x_data": [
                [
                    "1 (2011)",
                    "2 (2010-2011)",
                    "2 (2010–2011)",
                    "3 (2005, 2007–2008)",
                    "8 (2003–2005, 2007–2011)"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Years_Played"
        },
        "nl_queries": [
            "Give me a bar chart that groups and counts the years played for players from team \"Columbus Crew\", I want to display X-axis in asc order please."
        ]
    },
    "2323@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played ORDER BY Years_Played DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played ORDER BY Years_Played DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Years_Played",
            "y_name": "COUNT(Years_Played)",
            "x_data": [
                [
                    "8 (2003–2005, 2007–2011)",
                    "3 (2005, 2007–2008)",
                    "2 (2010–2011)",
                    "2 (2010-2011)",
                    "1 (2011)"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Years_Played"
        },
        "nl_queries": [
            "Give me a bar chart that groups and counts the years played for players from team \"Columbus Crew\", list Years_Played from high to low order."
        ]
    },
    "2323@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played ORDER BY COUNT(Years_Played) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played ORDER BY COUNT(Years_Played) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Years_Played",
            "y_name": "COUNT(Years_Played)",
            "x_data": [
                [
                    "2 (2010-2011)",
                    "2 (2010–2011)",
                    "3 (2005, 2007–2008)",
                    "8 (2003–2005, 2007–2011)",
                    "1 (2011)"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Years_Played"
        },
        "nl_queries": [
            "Give me a bar chart that groups and counts the years played for players from team \"Columbus Crew\", and sort Y in asc order."
        ]
    },
    "2323@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played ORDER BY COUNT(Years_Played) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played ORDER BY COUNT(Years_Played) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Years_Played",
            "y_name": "COUNT(Years_Played)",
            "x_data": [
                [
                    "1 (2011)",
                    "8 (2003–2005, 2007–2011)",
                    "3 (2005, 2007–2008)",
                    "2 (2010–2011)",
                    "2 (2010-2011)"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Years_Played"
        },
        "nl_queries": [
            "Give me a bar chart that groups and counts the years played for players from team \"Columbus Crew\", and list the number of years played in desc order."
        ]
    },
    "2954@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY organisation_details ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY organisation_details ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "COUNT(organisation_details)",
            "x_data": [
                [
                    "a",
                    "eius",
                    "itaque",
                    "officiis",
                    "quo"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart, display in asc by the bars."
        ]
    },
    "2954@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY organisation_details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY organisation_details DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "COUNT(organisation_details)",
            "x_data": [
                [
                    "quo",
                    "officiis",
                    "itaque",
                    "eius",
                    "a"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart, and I want to list by the bar in desc."
        ]
    },
    "2954@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY COUNT(organisation_details) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY COUNT(organisation_details) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "COUNT(organisation_details)",
            "x_data": [
                [
                    "a",
                    "eius",
                    "officiis",
                    "quo",
                    "itaque"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart, display y-axis in ascending order."
        ]
    },
    "2954@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY COUNT(organisation_details) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY COUNT(organisation_details) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "COUNT(organisation_details)",
            "x_data": [
                [
                    "itaque",
                    "quo",
                    "officiis",
                    "eius",
                    "a"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart, order by the y axis in descending."
        ]
    },
    "2955@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "SUM(organisation_id)",
            "x_data": [
                [
                    "a",
                    "eius",
                    "itaque",
                    "officiis",
                    "quo"
                ]
            ],
            "y_data": [
                [
                    9,
                    2,
                    19,
                    10,
                    14
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "What are the ids and details for all organizations that have grants of more than 6000 dollars, rank X from low to high order.",
            "Find the organisation ids and details of the organisations which are involved i Plot them as bar chart, show bars from low to high order please.",
            "Display a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and I want to display by the X-axis in ascending.",
            "Draw a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and order from low to high by the organisation_details."
        ]
    },
    "2955@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "SUM(organisation_id)",
            "x_data": [
                [
                    "quo",
                    "officiis",
                    "itaque",
                    "eius",
                    "a"
                ]
            ],
            "y_data": [
                [
                    14,
                    10,
                    19,
                    2,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "What are the ids and details for all organizations that have grants of more than 6000 dollars, and I want to order by the bars in descending.",
            "Find the organisation ids and details of the organisations which are involved i Plot them as bar chart, list bar in desc order.",
            "Display a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and display in descending by the x-axis.",
            "Draw a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, could you order by the X from high to low?"
        ]
    },
    "2955@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "SUM(organisation_id)",
            "x_data": [
                [
                    "eius",
                    "a",
                    "officiis",
                    "quo",
                    "itaque"
                ]
            ],
            "y_data": [
                [
                    2,
                    9,
                    10,
                    14,
                    19
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "What are the ids and details for all organizations that have grants of more than 6000 dollars, list total number from low to high order.",
            "Draw a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and order in asc by the y axis.",
            "Display a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, could you show in asc by the Y?",
            "Find the organisation ids and details of the organisations which are involved i Plot them as bar chart, and list from low to high by the Y."
        ]
    },
    "2955@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "SUM(organisation_id)",
            "x_data": [
                [
                    "itaque",
                    "quo",
                    "officiis",
                    "a",
                    "eius"
                ]
            ],
            "y_data": [
                [
                    19,
                    14,
                    10,
                    9,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "Find the organisation ids and details of the organisations which are involved i Plot them as bar chart, rank total number in desc order please.",
            "What are the ids and details for all organizations that have grants of more than 6000 dollars, and rank by the Y in desc.",
            "Display a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, could you list by the Y from high to low?",
            "Draw a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, rank total number in desc order please."
        ]
    },
    "2956@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "AVG(organisation_id)",
            "x_data": [
                [
                    "a",
                    "eius",
                    "itaque",
                    "officiis",
                    "quo"
                ]
            ],
            "y_data": [
                [
                    9,
                    2,
                    9.5,
                    10,
                    14
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?, rank in asc by the X please.",
            "Find the organisation ids and details of the organisations which are involved i Visualize by bar chart, and sort in ascending by the organisation_details.",
            "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and order in asc by the organisation_details.",
            "What are the ids and details for all organizations that have grants of more than 6000 dollars Show bar chart, and sort bar from low to high order."
        ]
    },
    "2956@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "AVG(organisation_id)",
            "x_data": [
                [
                    "quo",
                    "officiis",
                    "itaque",
                    "eius",
                    "a"
                ]
            ],
            "y_data": [
                [
                    14,
                    10,
                    9.5,
                    2,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "Find the organisation ids and details of the organisations which are involved i Visualize by bar chart, list by the x axis in descending.",
            "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?, and sort by the names from high to low.",
            "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, list from high to low by the x axis.",
            "What are the ids and details for all organizations that have grants of more than 6000 dollars Show bar chart, and sort by the names from high to low."
        ]
    },
    "2956@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "AVG(organisation_id)",
            "x_data": [
                [
                    "eius",
                    "a",
                    "itaque",
                    "officiis",
                    "quo"
                ]
            ],
            "y_data": [
                [
                    2,
                    9,
                    9.5,
                    10,
                    14
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "What are the ids and details for all organizations that have grants of more than 6000 dollars Show bar chart, and I want to list mean organisation id in asc order please.",
            "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?, I want to show in asc by the Y.",
            "Find the organisation ids and details of the organisations which are involved i Visualize by bar chart, I want to show in asc by the Y.",
            "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and I want to show in asc by the Y."
        ]
    },
    "2956@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organisation_details",
            "y_name": "AVG(organisation_id)",
            "x_data": [
                [
                    "quo",
                    "officiis",
                    "itaque",
                    "a",
                    "eius"
                ]
            ],
            "y_data": [
                [
                    14,
                    10,
                    9.5,
                    9,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organisation_details"
        },
        "nl_queries": [
            "Find the organisation ids and details of the organisations which are involved i Visualize by bar chart, and I want to rank total number from high to low order please.",
            "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?, and sort by the Y-axis from high to low.",
            "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, could you sort y axis in desc order?",
            "What are the ids and details for all organizations that have grants of more than 6000 dollars Show bar chart, and could you order in descending by the total number?"
        ]
    },
    "2959@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "outcome_description",
            "y_name": "COUNT(outcome_description)",
            "x_data": [
                [
                    "Published Research Paper",
                    "Research Patent"
                ]
            ],
            "y_data": [
                [
                    10,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY outcome_description"
        },
        "nl_queries": [
            "What are the number of the descriptions of all the project outcomes?, and I want to show by the bar in ascending.",
            "A bar chart for what are the number of the descriptions of all the project outcomes?, list from low to high by the X.",
            "What are the descriptions of all the project outcomes, and count them by a bar chart, and rank bars from low to high order.",
            "List the number of the description of the outcomes for all projects, and show by the X-axis in ascending.",
            "List the description of the outcomes for all projects, and count them by a bar chart, rank bars from low to high order.",
            "A bar chart for listing the number of the description of the outcomes for all projects, and could you list by the X in asc?"
        ]
    },
    "2959@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "outcome_description",
            "y_name": "COUNT(outcome_description)",
            "x_data": [
                [
                    "Research Patent",
                    "Published Research Paper"
                ]
            ],
            "y_data": [
                [
                    5,
                    10
                ]
            ],
            "classify": [],
            "describe": "GROUP BY outcome_description"
        },
        "nl_queries": [
            "What are the number of the descriptions of all the project outcomes?, and sort in descending by the names.",
            "What are the descriptions of all the project outcomes, and count them by a bar chart, show X in desc order.",
            "A bar chart for what are the number of the descriptions of all the project outcomes?, and show X in desc order.",
            "List the description of the outcomes for all projects, and count them by a bar chart, and display in descending by the bars.",
            "List the number of the description of the outcomes for all projects, sort by the names in desc.",
            "A bar chart for listing the number of the description of the outcomes for all projects, and could you display from high to low by the x axis?"
        ]
    },
    "2959@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "outcome_description",
            "y_name": "COUNT(outcome_description)",
            "x_data": [
                [
                    "Research Patent",
                    "Published Research Paper"
                ]
            ],
            "y_data": [
                [
                    5,
                    10
                ]
            ],
            "classify": [],
            "describe": "GROUP BY outcome_description"
        },
        "nl_queries": [
            "List the number of the description of the outcomes for all projects, and could you sort in ascending by the y axis?",
            "What are the descriptions of all the project outcomes, and count them by a bar chart, I want to rank y axis in ascending order.",
            "What are the number of the descriptions of all the project outcomes?, I want to rank y axis in ascending order.",
            "A bar chart for listing the number of the description of the outcomes for all projects, could you sort in ascending by the y axis?",
            "A bar chart for what are the number of the descriptions of all the project outcomes?, and could you display in ascending by the Y please?",
            "List the description of the outcomes for all projects, and count them by a bar chart, and list from low to high by the the number of outcome description please."
        ]
    },
    "2959@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "outcome_description",
            "y_name": "COUNT(outcome_description)",
            "x_data": [
                [
                    "Published Research Paper",
                    "Research Patent"
                ]
            ],
            "y_data": [
                [
                    10,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY outcome_description"
        },
        "nl_queries": [
            "List the number of the description of the outcomes for all projects, and list in desc by the the number of outcome description.",
            "List the description of the outcomes for all projects, and count them by a bar chart, could you list from high to low by the Y-axis?",
            "What are the number of the descriptions of all the project outcomes?, and could you list y-axis in desc order?",
            "A bar chart for what are the number of the descriptions of all the project outcomes?, and show Y-axis from high to low order.",
            "What are the descriptions of all the project outcomes, and count them by a bar chart, and could you list from high to low by the Y-axis?",
            "A bar chart for listing the number of the description of the outcomes for all projects, rank in desc by the Y please."
        ]
    },
    "2962@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) ASC",
                "binning": "BIN date_from BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) ASC BIN date_from BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "Sat",
                    "Sun",
                    "Tue",
                    "Thur",
                    "Fri",
                    "Wed",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    1,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY WEEKDAY"
        },
        "nl_queries": [
            "When do all the researcher role staff start to work? Bin the time into weekday interval and count them with a bar chart, I want to list in asc by the Y-axis please.",
            "Plot how many date from by grouped by date from as a bar graph, list Y in asc order."
        ]
    },
    "2962@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) DESC",
                "binning": "BIN date_from BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) DESC BIN date_from BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "Mon",
                    "Wed",
                    "Fri",
                    "Thur",
                    "Tue",
                    "Sun",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    2,
                    1,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY WEEKDAY"
        },
        "nl_queries": [
            "Plot how many date from by grouped by date from as a bar graph, and I want to list in descending by the total number.",
            "When do all the researcher role staff start to work? Bin the time into weekday interval and count them with a bar chart, and display from high to low by the y axis."
        ]
    },
    "2963@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) ASC",
                "binning": "BIN date_to BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) ASC BIN date_to BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "Sat",
                    "Sun",
                    "Fri",
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    1,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_to BY WEEKDAY"
        },
        "nl_queries": [
            "When do all the researcher role staff stop working? Bin the time into weekday interval and count them with a bar chart, order by the the number of date to in asc.",
            "Plot how many date to by grouped by date to as a bar graph, and list Y from low to high order please."
        ]
    },
    "2963@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) DESC",
                "binning": "BIN date_to BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) DESC BIN date_to BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "Thur",
                    "Wed",
                    "Tue",
                    "Mon",
                    "Fri",
                    "Sun",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    1,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_to BY WEEKDAY"
        },
        "nl_queries": [
            "Plot how many date to by grouped by date to as a bar graph, I want to sort y axis in desc order please.",
            "When do all the researcher role staff stop working? Bin the time into weekday interval and count them with a bar chart, and I want to show y-axis in descending order please."
        ]
    },
    "2964@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from ASC",
                "binning": "BIN date_from BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from ASC BIN date_from BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "1970~1973",
                    "1974~1977",
                    "1978~1981",
                    "1982~1985",
                    "1986~1989",
                    "1990~1993",
                    "1994~1997",
                    "1998~2001",
                    "2002~2005"
                ]
            ],
            "y_data": [
                [
                    3,
                    0,
                    1,
                    1,
                    1,
                    1,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY YEAR"
        },
        "nl_queries": [
            "Can you draw the trend of how many date from over the date from?, and display in ascending by the X.",
            "Give me the trend about the date_from attributes of all researchers, and bin the date into Year interval, order from low to high by the date_from please.",
            "When do all the researcher role staff start to work? Bin the time into YEAR interval and count them with a line chart, and order from low to high by the date_from please."
        ]
    },
    "2964@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from DESC",
                "binning": "BIN date_from BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from DESC BIN date_from BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "2002~2005",
                    "1998~2001",
                    "1994~1997",
                    "1990~1993",
                    "1986~1989",
                    "1982~1985",
                    "1978~1981",
                    "1974~1977",
                    "1970~1973"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    0,
                    1,
                    1,
                    1,
                    1,
                    0,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY YEAR"
        },
        "nl_queries": [
            "When do all the researcher role staff start to work? Bin the time into YEAR interval and count them with a line chart, and rank X from high to low order.",
            "Give me the trend about the date_from attributes of all researchers, and bin the date into Year interval, rank by the x axis in desc.",
            "Can you draw the trend of how many date from over the date from?, I want to rank in desc by the X-axis."
        ]
    },
    "2965@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to ASC",
                "binning": "BIN date_to BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to ASC BIN date_to BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "1971~1975",
                    "1976~1980",
                    "1981~1985",
                    "1986~1990",
                    "1991~1995",
                    "1996~2000",
                    "2001~2005",
                    "2006~2010",
                    "2011~2015",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    1,
                    0,
                    1,
                    0,
                    3,
                    1,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_to BY YEAR"
        },
        "nl_queries": [
            "Plot date to by the number of date to as a trend line, I want to show by the X in asc.",
            "When do all the researcher role staff stop working? Bin the time into YEAR interval and count them with a line chart, and rank X in asc order.",
            "Give me the trend about the date_to attributes of all researchers, and bin the date_to into Year interval, display by the x-axis from low to high."
        ]
    },
    "2965@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to DESC",
                "binning": "BIN date_to BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to DESC BIN date_to BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "2016",
                    "2011~2015",
                    "2006~2010",
                    "2001~2005",
                    "1996~2000",
                    "1991~1995",
                    "1986~1990",
                    "1981~1985",
                    "1976~1980",
                    "1971~1975"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    1,
                    3,
                    0,
                    1,
                    0,
                    1,
                    0,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_to BY YEAR"
        },
        "nl_queries": [
            "When do all the researcher role staff stop working? Bin the time into YEAR interval and count them with a line chart, and could you show by the X in desc?",
            "Plot date to by the number of date to as a trend line, and sort by the x-axis from high to low.",
            "Give me the trend about the date_to attributes of all researchers, and bin the date_to into Year interval, I want to rank in descending by the X."
        ]
    },
    "609@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY building ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY building ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Chandler",
                    "Fairchild",
                    "Lambea",
                    "Lamberton",
                    "Main",
                    "Nassa",
                    "Saucon",
                    "Stabler",
                    "Taylor",
                    "Whitman"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each building with a bar chart, and rank in asc by the X.",
            "How many courses are in the Psychology department in each building? Draw a bar chart, show by the x-axis in ascending please."
        ]
    },
    "609@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY building DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY building DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Whitman",
                    "Taylor",
                    "Stabler",
                    "Saucon",
                    "Nassa",
                    "Main",
                    "Lamberton",
                    "Lambea",
                    "Fairchild",
                    "Chandler"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "How many courses are in the Psychology department in each building? Draw a bar chart, and could you list X-axis in desc order please?",
            "Find the number of courses offered by Psychology department in each building with a bar chart, could you sort from high to low by the names?"
        ]
    },
    "609@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY COUNT(building) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY COUNT(building) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Chandler",
                    "Lamberton",
                    "Main",
                    "Nassa",
                    "Saucon",
                    "Stabler",
                    "Taylor",
                    "Whitman",
                    "Fairchild",
                    "Lambea"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "How many courses are in the Psychology department in each building? Draw a bar chart, I want to display by the the number of building in asc.",
            "Find the number of courses offered by Psychology department in each building with a bar chart, could you list in ascending by the total number?"
        ]
    },
    "609@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY COUNT(building) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY COUNT(building) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Lambea",
                    "Fairchild",
                    "Whitman",
                    "Taylor",
                    "Stabler",
                    "Saucon",
                    "Nassa",
                    "Main",
                    "Lamberton",
                    "Chandler"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each building with a bar chart, order y axis in desc order.",
            "How many courses are in the Psychology department in each building? Draw a bar chart, display total number in desc order please."
        ]
    },
    "611@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY year ORDER BY year ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY year ORDER BY year ASC"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2003-01-01",
                    "2004-01-01",
                    "2005-01-01",
                    "2006-01-01",
                    "2007-01-01",
                    "2008-01-01",
                    "2009-01-01"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "How many courses are in the Psychology department for each year? Return a line chart, rank in asc by the X-axis.",
            "How many courses are in the Psychology department for each year? Return a line chart, rank by the X-axis from low to high.",
            "Find the number of courses offered by Psychology department in each year with a line chart, and could you sort by the year in asc?",
            "Find the number of courses offered by Psychology department in each year with a line chart, could you sort by the year in asc?"
        ]
    },
    "611@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY year ORDER BY year DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY year ORDER BY year DESC"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2009-01-01",
                    "2008-01-01",
                    "2007-01-01",
                    "2006-01-01",
                    "2005-01-01",
                    "2004-01-01",
                    "2003-01-01"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each year with a line chart, show in desc by the x-axis.",
            "Find the number of courses offered by Psychology department in each year with a line chart, and sort by the x axis in desc.",
            "How many courses are in the Psychology department for each year? Return a line chart, and sort X from high to low order.",
            "How many courses are in the Psychology department for each year? Return a line chart, I want to rank X in descending order."
        ]
    },
    "612@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology'  ORDER BY year ASC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology'  ORDER BY year ASC BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each year with a line chart, and could you order X in ascending order?",
            "Find the number of courses offered by Psychology department in each year with a line chart, rank by the X-axis from low to high.",
            "How many courses are in the Psychology department for each year? Return a line chart, and display from low to high by the x axis.",
            "How many courses are in the Psychology department for each year? Return a line chart, and order X from low to high order."
        ]
    },
    "612@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology'  ORDER BY year DESC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology'  ORDER BY year DESC BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2009",
                    "2008",
                    "2007",
                    "2006",
                    "2005",
                    "2004",
                    "2003"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each year with a line chart, could you order by the X-axis from high to low?",
            "How many courses are in the Psychology department for each year? Return a line chart, and display X-axis in desc order.",
            "Find the number of courses offered by Psychology department in each year with a line chart, and display in desc by the X.",
            "How many courses are in the Psychology department for each year? Return a line chart, order by the X-axis in descending please."
        ]
    },
    "619@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "min(salary)",
            "x_data": [
                [
                    "Astronomy",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Finance",
                    "Geology",
                    "Marketing",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci."
                ]
            ],
            "y_data": [
                [
                    79070.08,
                    80797.83,
                    79866.95,
                    105311.38,
                    99382.59,
                    43770.36,
                    51647.57,
                    108011.81,
                    87549.8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for what is the lowest salary in departments with average salary greater than the overall average, show by the bar in ascending.",
            "Find the minimum salary for the departments whose average salary is above the average payment of all instructors Plot them as bar chart, and show names in ascending order.",
            "Give me a histogram for what is the lowest salary in departments with average salary greater than the overall average, and could you rank by the x axis in asc?",
            "Bar chart of minimal salary from each dept name, order dept_name in ascending order please.",
            "What is the lowest salary in departments with average salary greater than the overall average Plot them as bar chart, and sort dept_name in ascending order."
        ]
    },
    "619@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "min(salary)",
            "x_data": [
                [
                    "Pol. Sci.",
                    "Physics",
                    "Mech. Eng.",
                    "Marketing",
                    "Geology",
                    "Finance",
                    "Cybernetics",
                    "Comp. Sci.",
                    "Astronomy"
                ]
            ],
            "y_data": [
                [
                    87549.8,
                    108011.81,
                    51647.57,
                    43770.36,
                    99382.59,
                    105311.38,
                    79866.95,
                    80797.83,
                    79070.08
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a histogram for what is the lowest salary in departments with average salary greater than the overall average, and sort from high to low by the dept_name.",
            "Display a bar chart for what is the lowest salary in departments with average salary greater than the overall average, could you list X-axis from high to low order?",
            "Find the minimum salary for the departments whose average salary is above the average payment of all instructors Plot them as bar chart, and could you list X-axis from high to low order?",
            "Bar chart of minimal salary from each dept name, and list in descending by the X-axis please.",
            "What is the lowest salary in departments with average salary greater than the overall average Plot them as bar chart, and could you rank by the bar in desc?"
        ]
    },
    "619@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY min(salary) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY min(salary) ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "min(salary)",
            "x_data": [
                [
                    "Marketing",
                    "Mech. Eng.",
                    "Astronomy",
                    "Cybernetics",
                    "Comp. Sci.",
                    "Pol. Sci.",
                    "Geology",
                    "Finance",
                    "Physics"
                ]
            ],
            "y_data": [
                [
                    43770.36,
                    51647.57,
                    79070.08,
                    79866.95,
                    80797.83,
                    87549.8,
                    99382.59,
                    105311.38,
                    108011.81
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the minimum salary for the departments whose average salary is above the average payment of all instructors Plot them as bar chart, display in ascending by the Y-axis.",
            "Display a bar chart for what is the lowest salary in departments with average salary greater than the overall average, and could you list Y from low to high order please?",
            "What is the lowest salary in departments with average salary greater than the overall average Plot them as bar chart, and sort minimal salary in ascending order please.",
            "Bar chart of minimal salary from each dept name, order y axis in ascending order.",
            "Give me a histogram for what is the lowest salary in departments with average salary greater than the overall average, show by the Y-axis from low to high."
        ]
    },
    "619@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY min(salary) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY min(salary) DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "min(salary)",
            "x_data": [
                [
                    "Physics",
                    "Finance",
                    "Geology",
                    "Pol. Sci.",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Astronomy",
                    "Mech. Eng.",
                    "Marketing"
                ]
            ],
            "y_data": [
                [
                    108011.81,
                    105311.38,
                    99382.59,
                    87549.8,
                    80797.83,
                    79866.95,
                    79070.08,
                    51647.57,
                    43770.36
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the lowest salary in departments with average salary greater than the overall average Plot them as bar chart, list by the total number from high to low.",
            "Find the minimum salary for the departments whose average salary is above the average payment of all instructors Plot them as bar chart, and show in descending by the total number.",
            "Bar chart of minimal salary from each dept name, and list by the total number in descending.",
            "Give me a histogram for what is the lowest salary in departments with average salary greater than the overall average, and show in descending by the minimal salary.",
            "Display a bar chart for what is the lowest salary in departments with average salary greater than the overall average, and list by the total number from high to low."
        ]
    },
    "620@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY building ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY building ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Garfield",
                    "Gates",
                    "Lambea",
                    "Nassa",
                    "Painter",
                    "Rathbone",
                    "Saucon",
                    "Stabler",
                    "Taylor",
                    "Whitman"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many rooms in each building have a capacity of over 50 Visualize by bar chart, list by the X in ascending.",
            "Display a bar chart for how many rooms in each building have a capacity of over 50?, could you list from low to high by the X?",
            "Find the number of rooms with more than 50 capacity for each building Show bar chart, and could you display by the names from low to high?"
        ]
    },
    "620@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY building DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY building DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Whitman",
                    "Taylor",
                    "Stabler",
                    "Saucon",
                    "Rathbone",
                    "Painter",
                    "Nassa",
                    "Lambea",
                    "Gates",
                    "Garfield"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of rooms with more than 50 capacity for each building Show bar chart, and order from high to low by the X-axis.",
            "Display a bar chart for how many rooms in each building have a capacity of over 50?, and I want to show in desc by the x-axis.",
            "How many rooms in each building have a capacity of over 50 Visualize by bar chart, and list in desc by the x axis."
        ]
    },
    "620@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Garfield",
                    "Gates",
                    "Lambea",
                    "Nassa",
                    "Painter",
                    "Rathbone",
                    "Saucon",
                    "Stabler",
                    "Whitman",
                    "Taylor"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many rooms in each building have a capacity of over 50 Visualize by bar chart, and sort by the total number in asc.",
            "Find the number of rooms with more than 50 capacity for each building Show bar chart, display y axis in asc order.",
            "Display a bar chart for how many rooms in each building have a capacity of over 50?, rank from low to high by the y axis."
        ]
    },
    "620@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Taylor",
                    "Whitman",
                    "Stabler",
                    "Saucon",
                    "Rathbone",
                    "Painter",
                    "Nassa",
                    "Lambea",
                    "Gates",
                    "Garfield"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of rooms with more than 50 capacity for each building Show bar chart, and could you sort by the the total number in desc?",
            "How many rooms in each building have a capacity of over 50 Visualize by bar chart, order by the the total number in desc.",
            "Display a bar chart for how many rooms in each building have a capacity of over 50?, could you sort by the the total number in desc?"
        ]
    },
    "621@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY dept_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY dept_name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "sum(credits)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Civil Eng.",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "History",
                    "Languages",
                    "Marketing",
                    "Math",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    40,
                    37,
                    30,
                    23,
                    34,
                    37,
                    67,
                    28,
                    28,
                    49,
                    33,
                    29,
                    37,
                    20,
                    34,
                    40,
                    38,
                    23,
                    44,
                    21
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart for how many total credits are offered by each department?, order by the names from low to high.",
            "Find the total credits of courses provided by different department Plot them as bar chart, could you sort in ascending by the x-axis?",
            "How many total credits are offered by each department Show bar chart, and rank bars in asc order.",
            "Bar chart of total number of credits from each dept name, rank bars in asc order.",
            "Show me a bar chart for how many total credits are offered by each department?, and order by the names from low to high."
        ]
    },
    "621@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY dept_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY dept_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "sum(credits)",
            "x_data": [
                [
                    "Statistics",
                    "Psychology",
                    "Pol. Sci.",
                    "Physics",
                    "Mech. Eng.",
                    "Math",
                    "Marketing",
                    "Languages",
                    "History",
                    "Geology",
                    "Finance",
                    "English",
                    "Elec. Eng.",
                    "Cybernetics",
                    "Comp. Sci.",
                    "Civil Eng.",
                    "Biology",
                    "Athletics",
                    "Astronomy",
                    "Accounting"
                ]
            ],
            "y_data": [
                [
                    21,
                    44,
                    23,
                    38,
                    40,
                    34,
                    20,
                    37,
                    29,
                    33,
                    49,
                    28,
                    28,
                    67,
                    37,
                    34,
                    23,
                    30,
                    37,
                    40
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the total credits of courses provided by different department Plot them as bar chart, and order by the dept_name in descending.",
            "Show me a bar chart for how many total credits are offered by each department?, sort by the bar in desc.",
            "Bar chart of total number of credits from each dept name, and display dept_name in descending order.",
            "How many total credits are offered by each department Show bar chart, sort by the bar in desc.",
            "Draw a bar chart for how many total credits are offered by each department?, and rank bar from high to low order."
        ]
    },
    "621@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY sum(credits) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY sum(credits) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "sum(credits)",
            "x_data": [
                [
                    "Marketing",
                    "Statistics",
                    "Biology",
                    "Pol. Sci.",
                    "Elec. Eng.",
                    "English",
                    "History",
                    "Athletics",
                    "Geology",
                    "Civil Eng.",
                    "Math",
                    "Astronomy",
                    "Comp. Sci.",
                    "Languages",
                    "Physics",
                    "Accounting",
                    "Mech. Eng.",
                    "Psychology",
                    "Finance",
                    "Cybernetics"
                ]
            ],
            "y_data": [
                [
                    20,
                    21,
                    23,
                    23,
                    28,
                    28,
                    29,
                    30,
                    33,
                    34,
                    34,
                    37,
                    37,
                    37,
                    38,
                    40,
                    40,
                    44,
                    49,
                    67
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me a bar chart for how many total credits are offered by each department?, sort by the total number of credits from low to high.",
            "Draw a bar chart for how many total credits are offered by each department?, sort by the total number of credits from low to high.",
            "Bar chart of total number of credits from each dept name, and sort in asc by the total number of credits.",
            "How many total credits are offered by each department Show bar chart, I want to display Y in ascending order.",
            "Find the total credits of courses provided by different department Plot them as bar chart, and display Y in asc order."
        ]
    },
    "621@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY sum(credits) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY sum(credits) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "sum(credits)",
            "x_data": [
                [
                    "Cybernetics",
                    "Finance",
                    "Psychology",
                    "Mech. Eng.",
                    "Accounting",
                    "Physics",
                    "Languages",
                    "Comp. Sci.",
                    "Astronomy",
                    "Math",
                    "Civil Eng.",
                    "Geology",
                    "Athletics",
                    "History",
                    "English",
                    "Elec. Eng.",
                    "Pol. Sci.",
                    "Biology",
                    "Statistics",
                    "Marketing"
                ]
            ],
            "y_data": [
                [
                    67,
                    49,
                    44,
                    40,
                    40,
                    38,
                    37,
                    37,
                    37,
                    34,
                    34,
                    33,
                    30,
                    29,
                    28,
                    28,
                    23,
                    23,
                    21,
                    20
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart of total number of credits from each dept name, and show from high to low by the total number of credits.",
            "Draw a bar chart for how many total credits are offered by each department?, and rank y-axis in descending order.",
            "Find the total credits of courses provided by different department Plot them as bar chart, and list from high to low by the y-axis.",
            "Show me a bar chart for how many total credits are offered by each department?, order from high to low by the Y-axis.",
            "How many total credits are offered by each department Show bar chart, and order by the total number from high to low."
        ]
    },
    "623@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , max(capacity) FROM classroom GROUP BY building ORDER BY building ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , max(capacity) FROM classroom GROUP BY building ORDER BY building ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "max(capacity)",
            "x_data": [
                [
                    "Alumni",
                    "Bronfman",
                    "Chandler",
                    "Drown",
                    "Fairchild",
                    "Garfield",
                    "Gates",
                    "Grace",
                    "Lambea",
                    "Lamberton",
                    "Main",
                    "Nassa",
                    "Painter",
                    "Polya",
                    "Power",
                    "Rathbone",
                    "Saucon",
                    "Stabler",
                    "Taylor",
                    "Whitman"
                ]
            ],
            "y_data": [
                [
                    47,
                    12,
                    11,
                    18,
                    27,
                    59,
                    65,
                    34,
                    51,
                    10,
                    30,
                    92,
                    97,
                    28,
                    12,
                    60,
                    109,
                    113,
                    115,
                    120
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis building y axis maximal capacity, and order by the bars in asc.",
            "What is the greatest capacity for rooms in each building? Draw a bar chart, and list by the names in ascending please.",
            "Find the maximum capacity among rooms in each building with a bar chart, list by the names in ascending please."
        ]
    },
    "623@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , max(capacity) FROM classroom GROUP BY building ORDER BY building DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , max(capacity) FROM classroom GROUP BY building ORDER BY building DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "max(capacity)",
            "x_data": [
                [
                    "Whitman",
                    "Taylor",
                    "Stabler",
                    "Saucon",
                    "Rathbone",
                    "Power",
                    "Polya",
                    "Painter",
                    "Nassa",
                    "Main",
                    "Lamberton",
                    "Lambea",
                    "Grace",
                    "Gates",
                    "Garfield",
                    "Fairchild",
                    "Drown",
                    "Chandler",
                    "Bronfman",
                    "Alumni"
                ]
            ],
            "y_data": [
                [
                    120,
                    115,
                    113,
                    109,
                    60,
                    12,
                    28,
                    97,
                    92,
                    30,
                    10,
                    51,
                    34,
                    65,
                    59,
                    27,
                    18,
                    11,
                    12,
                    47
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the maximum capacity among rooms in each building with a bar chart, rank by the X-axis from high to low.",
            "Bar chart x axis building y axis maximal capacity, show by the X-axis from high to low.",
            "What is the greatest capacity for rooms in each building? Draw a bar chart, list bar in desc order please."
        ]
    },
    "623@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , max(capacity) FROM classroom GROUP BY building ORDER BY max(capacity) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , max(capacity) FROM classroom GROUP BY building ORDER BY max(capacity) ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "max(capacity)",
            "x_data": [
                [
                    "Lamberton",
                    "Chandler",
                    "Bronfman",
                    "Power",
                    "Drown",
                    "Fairchild",
                    "Polya",
                    "Main",
                    "Grace",
                    "Alumni",
                    "Lambea",
                    "Garfield",
                    "Rathbone",
                    "Gates",
                    "Nassa",
                    "Painter",
                    "Saucon",
                    "Stabler",
                    "Taylor",
                    "Whitman"
                ]
            ],
            "y_data": [
                [
                    10,
                    11,
                    12,
                    12,
                    18,
                    27,
                    28,
                    30,
                    34,
                    47,
                    51,
                    59,
                    60,
                    65,
                    92,
                    97,
                    109,
                    113,
                    115,
                    120
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the greatest capacity for rooms in each building? Draw a bar chart, list Y in asc order.",
            "Bar chart x axis building y axis maximal capacity, I want to show in asc by the total number please.",
            "Find the maximum capacity among rooms in each building with a bar chart, and I want to show Y-axis from low to high order."
        ]
    },
    "623@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , max(capacity) FROM classroom GROUP BY building ORDER BY max(capacity) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , max(capacity) FROM classroom GROUP BY building ORDER BY max(capacity) DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "max(capacity)",
            "x_data": [
                [
                    "Whitman",
                    "Taylor",
                    "Stabler",
                    "Saucon",
                    "Painter",
                    "Nassa",
                    "Gates",
                    "Rathbone",
                    "Garfield",
                    "Lambea",
                    "Alumni",
                    "Grace",
                    "Main",
                    "Polya",
                    "Fairchild",
                    "Drown",
                    "Power",
                    "Bronfman",
                    "Chandler",
                    "Lamberton"
                ]
            ],
            "y_data": [
                [
                    120,
                    115,
                    113,
                    109,
                    97,
                    92,
                    65,
                    60,
                    59,
                    51,
                    47,
                    34,
                    30,
                    28,
                    27,
                    18,
                    12,
                    12,
                    11,
                    10
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the maximum capacity among rooms in each building with a bar chart, I want to list by the y axis in desc please.",
            "What is the greatest capacity for rooms in each building? Draw a bar chart, rank by the maximal capacity in descending please.",
            "Bar chart x axis building y axis maximal capacity, and sort in desc by the total number."
        ]
    },
    "624@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY building ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY building ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "avg(capacity)",
            "x_data": [
                [
                    "Alumni",
                    "Bronfman",
                    "Chandler",
                    "Drown",
                    "Fairchild",
                    "Garfield",
                    "Gates",
                    "Grace",
                    "Lambea",
                    "Lamberton",
                    "Main",
                    "Nassa",
                    "Painter",
                    "Polya",
                    "Power",
                    "Rathbone",
                    "Saucon",
                    "Stabler",
                    "Taylor",
                    "Whitman"
                ]
            ],
            "y_data": [
                [
                    36.5,
                    12,
                    10.5,
                    18,
                    27,
                    59,
                    37.5,
                    34,
                    51,
                    10,
                    26,
                    92,
                    97,
                    28,
                    11,
                    60,
                    49.33333333333334,
                    113,
                    93,
                    76
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis building y axis the average of capacity, sort bars in asc order.",
            "What is the average capacity for rooms in each building? Draw a bar chart, and display bars in asc order.",
            "Find the average capacity among rooms in each building with a bar chart, and rank by the bars in ascending."
        ]
    },
    "624@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY building DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY building DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "avg(capacity)",
            "x_data": [
                [
                    "Whitman",
                    "Taylor",
                    "Stabler",
                    "Saucon",
                    "Rathbone",
                    "Power",
                    "Polya",
                    "Painter",
                    "Nassa",
                    "Main",
                    "Lamberton",
                    "Lambea",
                    "Grace",
                    "Gates",
                    "Garfield",
                    "Fairchild",
                    "Drown",
                    "Chandler",
                    "Bronfman",
                    "Alumni"
                ]
            ],
            "y_data": [
                [
                    76,
                    93,
                    113,
                    49.33333333333334,
                    60,
                    11,
                    28,
                    97,
                    92,
                    26,
                    10,
                    51,
                    34,
                    37.5,
                    59,
                    27,
                    18,
                    10.5,
                    12,
                    36.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the average capacity for rooms in each building? Draw a bar chart, rank by the X-axis in descending.",
            "Find the average capacity among rooms in each building with a bar chart, I want to sort from high to low by the building please.",
            "Bar chart x axis building y axis the average of capacity, and sort from high to low by the x-axis."
        ]
    },
    "624@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY avg(capacity) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY avg(capacity) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "avg(capacity)",
            "x_data": [
                [
                    "Lamberton",
                    "Chandler",
                    "Power",
                    "Bronfman",
                    "Drown",
                    "Main",
                    "Fairchild",
                    "Polya",
                    "Grace",
                    "Alumni",
                    "Gates",
                    "Saucon",
                    "Lambea",
                    "Garfield",
                    "Rathbone",
                    "Whitman",
                    "Nassa",
                    "Taylor",
                    "Painter",
                    "Stabler"
                ]
            ],
            "y_data": [
                [
                    10,
                    10.5,
                    11,
                    12,
                    18,
                    26,
                    27,
                    28,
                    34,
                    36.5,
                    37.5,
                    49.33333333333334,
                    51,
                    59,
                    60,
                    76,
                    92,
                    93,
                    97,
                    113
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the average capacity for rooms in each building? Draw a bar chart, and sort in asc by the Y.",
            "Find the average capacity among rooms in each building with a bar chart, and order in ascending by the y axis please.",
            "Bar chart x axis building y axis the average of capacity, and order in ascending by the y axis please."
        ]
    },
    "624@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY avg(capacity) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY avg(capacity) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "avg(capacity)",
            "x_data": [
                [
                    "Stabler",
                    "Painter",
                    "Taylor",
                    "Nassa",
                    "Whitman",
                    "Rathbone",
                    "Garfield",
                    "Lambea",
                    "Saucon",
                    "Gates",
                    "Alumni",
                    "Grace",
                    "Polya",
                    "Fairchild",
                    "Main",
                    "Drown",
                    "Bronfman",
                    "Power",
                    "Chandler",
                    "Lamberton"
                ]
            ],
            "y_data": [
                [
                    113,
                    97,
                    93,
                    92,
                    76,
                    60,
                    59,
                    51,
                    49.33333333333334,
                    37.5,
                    36.5,
                    34,
                    28,
                    27,
                    26,
                    18,
                    12,
                    11,
                    10.5,
                    10
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis building y axis the average of capacity, and show by the total number in descending please.",
            "Find the average capacity among rooms in each building with a bar chart, and display by the y axis from high to low.",
            "What is the average capacity for rooms in each building? Draw a bar chart, display by the y axis from high to low."
        ]
    },
    "625@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM department GROUP BY building ORDER BY building ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM department GROUP BY building ORDER BY building ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Brodhead",
                    "Bronfman",
                    "Candlestick",
                    "Chandler",
                    "Lambea",
                    "Lamberton",
                    "Linderman",
                    "Main",
                    "Mercer",
                    "Palmer",
                    "Rauch",
                    "Saucon",
                    "Taylor",
                    "Thompson",
                    "Whitman",
                    "Wrigley"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    3,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "How many departments for each building? Draw a bar chart, and show by the bar in ascending.",
            "Bar chart of how many building from each building, and could you rank by the X in asc?",
            "List the number of departments for each building with a bar chart, and show X in ascending order."
        ]
    },
    "625@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM department GROUP BY building ORDER BY building DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM department GROUP BY building ORDER BY building DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Wrigley",
                    "Whitman",
                    "Thompson",
                    "Taylor",
                    "Saucon",
                    "Rauch",
                    "Palmer",
                    "Mercer",
                    "Main",
                    "Linderman",
                    "Lamberton",
                    "Lambea",
                    "Chandler",
                    "Candlestick",
                    "Bronfman",
                    "Brodhead"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "Bar chart of how many building from each building, sort bar from high to low order.",
            "How many departments for each building? Draw a bar chart, and sort by the X in descending.",
            "List the number of departments for each building with a bar chart, and could you rank bar from high to low order?"
        ]
    },
    "625@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM department GROUP BY building ORDER BY COUNT(building) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM department GROUP BY building ORDER BY COUNT(building) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Brodhead",
                    "Bronfman",
                    "Chandler",
                    "Lambea",
                    "Lamberton",
                    "Linderman",
                    "Main",
                    "Mercer",
                    "Rauch",
                    "Saucon",
                    "Thompson",
                    "Whitman",
                    "Wrigley",
                    "Candlestick",
                    "Palmer",
                    "Taylor"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "Bar chart of how many building from each building, rank by the Y in asc.",
            "List the number of departments for each building with a bar chart, sort by the Y in asc please.",
            "How many departments for each building? Draw a bar chart, and rank in asc by the how many building."
        ]
    },
    "625@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM department GROUP BY building ORDER BY COUNT(building) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM department GROUP BY building ORDER BY COUNT(building) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Taylor",
                    "Palmer",
                    "Candlestick",
                    "Wrigley",
                    "Whitman",
                    "Thompson",
                    "Saucon",
                    "Rauch",
                    "Mercer",
                    "Main",
                    "Linderman",
                    "Lamberton",
                    "Lambea",
                    "Chandler",
                    "Bronfman",
                    "Brodhead"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "How many departments for each building? Draw a bar chart, show Y from high to low order.",
            "Bar chart of how many building from each building, and display total number in desc order.",
            "List the number of departments for each building with a bar chart, show by the how many building from high to low."
        ]
    },
    "626@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "Differential Geometry",
                    "Elastic Structures",
                    "Electron Microscopy",
                    "Embedded Systems",
                    "Game Programming",
                    "Graph Theory",
                    "Groups and Rings",
                    "Immunology",
                    "International Practicum",
                    "Operating Systems",
                    "Ponzi Schemes",
                    "Rock and Roll",
                    "World History"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "How many courses have two prerequisites? Show me a bar chart grouping by title, and could you sort by the bar in asc?",
            "Find the number of courses that have two prerequisites for each title in a bar chart, and show names in ascending order."
        ]
    },
    "626@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "World History",
                    "Rock and Roll",
                    "Ponzi Schemes",
                    "Operating Systems",
                    "International Practicum",
                    "Immunology",
                    "Groups and Rings",
                    "Graph Theory",
                    "Game Programming",
                    "Embedded Systems",
                    "Electron Microscopy",
                    "Elastic Structures",
                    "Differential Geometry"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Find the number of courses that have two prerequisites for each title in a bar chart, could you rank names in descending order?",
            "How many courses have two prerequisites? Show me a bar chart grouping by title, and display X-axis in desc order."
        ]
    },
    "626@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "Differential Geometry",
                    "Elastic Structures",
                    "Electron Microscopy",
                    "Embedded Systems",
                    "Graph Theory",
                    "Groups and Rings",
                    "Immunology",
                    "Operating Systems",
                    "Ponzi Schemes",
                    "Rock and Roll",
                    "World History",
                    "Game Programming",
                    "International Practicum"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Find the number of courses that have two prerequisites for each title in a bar chart, and rank y-axis in asc order.",
            "How many courses have two prerequisites? Show me a bar chart grouping by title, and sort from low to high by the Y-axis."
        ]
    },
    "626@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "International Practicum",
                    "Game Programming",
                    "World History",
                    "Rock and Roll",
                    "Ponzi Schemes",
                    "Operating Systems",
                    "Immunology",
                    "Groups and Rings",
                    "Graph Theory",
                    "Embedded Systems",
                    "Electron Microscopy",
                    "Elastic Structures",
                    "Differential Geometry"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "How many courses have two prerequisites? Show me a bar chart grouping by title, and sort y-axis in desc order.",
            "Find the number of courses that have two prerequisites for each title in a bar chart, and show by the Y-axis from high to low."
        ]
    },
    "627@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "AVG(salary)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "Languages",
                    "Marketing",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    48716.5925,
                    79070.08,
                    77098.198,
                    61287.25,
                    98133.47,
                    96346.5675,
                    74162.73999999999,
                    72089.04999999999,
                    105311.38,
                    99382.59,
                    57421.85666666668,
                    84097.4375,
                    79813.02,
                    114576.9,
                    100053.07333333332,
                    61143.05,
                    67795.44166666668
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the names and average salaries of all departments whose average salary is greater than 42000, and rank by the dept_name in ascending.",
            "Bar chart of mean salary from each dept name, could you list names from low to high order?",
            "Give me a histogram for what are the names and average salaries for departments with average salary higher than 42000?, and could you list names from low to high order?",
            "Display a bar chart for what are the names and average salaries for departments with average salary higher than 42000?, could you list names from low to high order?",
            "What are the names and average salaries for departments with average salary higher than 42000 Plot them as bar chart, and sort by the X-axis from low to high."
        ]
    },
    "627@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "AVG(salary)",
            "x_data": [
                [
                    "Statistics",
                    "Psychology",
                    "Pol. Sci.",
                    "Physics",
                    "Mech. Eng.",
                    "Marketing",
                    "Languages",
                    "Geology",
                    "Finance",
                    "English",
                    "Elec. Eng.",
                    "Cybernetics",
                    "Comp. Sci.",
                    "Biology",
                    "Athletics",
                    "Astronomy",
                    "Accounting"
                ]
            ],
            "y_data": [
                [
                    67795.44166666668,
                    61143.05,
                    100053.07333333332,
                    114576.9,
                    79813.02,
                    84097.4375,
                    57421.85666666668,
                    99382.59,
                    105311.38,
                    72089.04999999999,
                    74162.73999999999,
                    96346.5675,
                    98133.47,
                    61287.25,
                    77098.198,
                    79070.08,
                    48716.5925
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for what are the names and average salaries for departments with average salary higher than 42000?, list x axis in descending order.",
            "Find the names and average salaries of all departments whose average salary is greater than 42000, show by the x axis from high to low.",
            "What are the names and average salaries for departments with average salary higher than 42000 Plot them as bar chart, and display from high to low by the X.",
            "Give me a histogram for what are the names and average salaries for departments with average salary higher than 42000?, and could you order by the X-axis from high to low?",
            "Bar chart of mean salary from each dept name, and rank by the X-axis in desc."
        ]
    },
    "627@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY AVG(salary) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY AVG(salary) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "AVG(salary)",
            "x_data": [
                [
                    "Accounting",
                    "Languages",
                    "Psychology",
                    "Biology",
                    "Statistics",
                    "English",
                    "Elec. Eng.",
                    "Athletics",
                    "Astronomy",
                    "Mech. Eng.",
                    "Marketing",
                    "Cybernetics",
                    "Comp. Sci.",
                    "Geology",
                    "Pol. Sci.",
                    "Finance",
                    "Physics"
                ]
            ],
            "y_data": [
                [
                    48716.5925,
                    57421.85666666668,
                    61143.05,
                    61287.25,
                    67795.44166666668,
                    72089.04999999999,
                    74162.73999999999,
                    77098.198,
                    79070.08,
                    79813.02,
                    84097.4375,
                    96346.5675,
                    98133.47,
                    99382.59,
                    100053.07333333332,
                    105311.38,
                    114576.9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a histogram for what are the names and average salaries for departments with average salary higher than 42000?, and list in ascending by the y axis.",
            "Find the names and average salaries of all departments whose average salary is greater than 42000, and show in ascending by the Y please.",
            "Display a bar chart for what are the names and average salaries for departments with average salary higher than 42000?, list in ascending by the y axis.",
            "Bar chart of mean salary from each dept name, list in ascending by the y axis.",
            "What are the names and average salaries for departments with average salary higher than 42000 Plot them as bar chart, list in asc by the Y-axis."
        ]
    },
    "627@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY AVG(salary) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY AVG(salary) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "AVG(salary)",
            "x_data": [
                [
                    "Physics",
                    "Finance",
                    "Pol. Sci.",
                    "Geology",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Marketing",
                    "Mech. Eng.",
                    "Astronomy",
                    "Athletics",
                    "Elec. Eng.",
                    "English",
                    "Statistics",
                    "Biology",
                    "Psychology",
                    "Languages",
                    "Accounting"
                ]
            ],
            "y_data": [
                [
                    114576.9,
                    105311.38,
                    100053.07333333332,
                    99382.59,
                    98133.47,
                    96346.5675,
                    84097.4375,
                    79813.02,
                    79070.08,
                    77098.198,
                    74162.73999999999,
                    72089.04999999999,
                    67795.44166666668,
                    61287.25,
                    61143.05,
                    57421.85666666668,
                    48716.5925
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the names and average salaries for departments with average salary higher than 42000 Plot them as bar chart, display y axis in descending order.",
            "Give me a histogram for what are the names and average salaries for departments with average salary higher than 42000?, and could you order by the Y-axis from high to low?",
            "Bar chart of mean salary from each dept name, and could you order by the Y-axis from high to low?",
            "Find the names and average salaries of all departments whose average salary is greater than 42000, sort total number in desc order.",
            "Display a bar chart for what are the names and average salaries for departments with average salary higher than 42000?, and display y axis in descending order."
        ]
    },
    "629@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.dept_name , count(DISTINCT T2.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY T1.dept_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.dept_name , count(DISTINCT T2.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY T1.dept_name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(DISTINCT T2.id)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "Languages",
                    "Marketing",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    99,
                    106,
                    92,
                    100,
                    108,
                    86,
                    98,
                    95,
                    97,
                    92,
                    119,
                    85,
                    105,
                    96,
                    109,
                    100,
                    85
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many students are in each department? Show me a bar chart, rank by the dept_name in asc.",
            "Find the total number of students for each department with a bar chart, list X-axis in ascending order please."
        ]
    },
    "629@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.dept_name , count(DISTINCT T2.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY T1.dept_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.dept_name , count(DISTINCT T2.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY T1.dept_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(DISTINCT T2.id)",
            "x_data": [
                [
                    "Statistics",
                    "Psychology",
                    "Pol. Sci.",
                    "Physics",
                    "Mech. Eng.",
                    "Marketing",
                    "Languages",
                    "Geology",
                    "Finance",
                    "English",
                    "Elec. Eng.",
                    "Cybernetics",
                    "Comp. Sci.",
                    "Biology",
                    "Athletics",
                    "Astronomy",
                    "Accounting"
                ]
            ],
            "y_data": [
                [
                    85,
                    100,
                    109,
                    96,
                    105,
                    85,
                    119,
                    92,
                    97,
                    95,
                    98,
                    86,
                    108,
                    100,
                    92,
                    106,
                    99
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many students are in each department? Show me a bar chart, and rank by the X-axis from high to low.",
            "Find the total number of students for each department with a bar chart, and sort in desc by the x axis."
        ]
    },
    "629@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.dept_name , count(DISTINCT T2.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY count(DISTINCT T2.id) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.dept_name , count(DISTINCT T2.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY count(DISTINCT T2.id) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(DISTINCT T2.id)",
            "x_data": [
                [
                    "Marketing",
                    "Statistics",
                    "Cybernetics",
                    "Athletics",
                    "Geology",
                    "English",
                    "Physics",
                    "Finance",
                    "Elec. Eng.",
                    "Accounting",
                    "Biology",
                    "Psychology",
                    "Mech. Eng.",
                    "Astronomy",
                    "Comp. Sci.",
                    "Pol. Sci.",
                    "Languages"
                ]
            ],
            "y_data": [
                [
                    85,
                    85,
                    86,
                    92,
                    92,
                    95,
                    96,
                    97,
                    98,
                    99,
                    100,
                    100,
                    105,
                    106,
                    108,
                    109,
                    119
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many students are in each department? Show me a bar chart, sort by the y-axis from low to high.",
            "Find the total number of students for each department with a bar chart, and sort in ascending by the y-axis."
        ]
    },
    "629@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.dept_name , count(DISTINCT T2.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY count(DISTINCT T2.id) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.dept_name , count(DISTINCT T2.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY count(DISTINCT T2.id) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(DISTINCT T2.id)",
            "x_data": [
                [
                    "Languages",
                    "Pol. Sci.",
                    "Comp. Sci.",
                    "Astronomy",
                    "Mech. Eng.",
                    "Psychology",
                    "Biology",
                    "Accounting",
                    "Elec. Eng.",
                    "Finance",
                    "Physics",
                    "English",
                    "Geology",
                    "Athletics",
                    "Cybernetics",
                    "Statistics",
                    "Marketing"
                ]
            ],
            "y_data": [
                [
                    119,
                    109,
                    108,
                    106,
                    105,
                    100,
                    100,
                    99,
                    98,
                    97,
                    96,
                    95,
                    92,
                    92,
                    86,
                    85,
                    85
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many students are in each department? Show me a bar chart, and sort in desc by the total number.",
            "Find the total number of students for each department with a bar chart, and could you list y axis in descending order?"
        ]
    },
    "630@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY T1.dept_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY T1.dept_name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(DISTINCT T3.id)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "Languages",
                    "Marketing",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    5,
                    2,
                    2,
                    4,
                    4,
                    4,
                    1,
                    1,
                    3,
                    4,
                    2,
                    2,
                    3,
                    2,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many instructors are in each department? Show me a bar chart, sort by the x axis in asc.",
            "Find the total number of instructors for each department with a bar chart, could you order in asc by the X?"
        ]
    },
    "630@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY T1.dept_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY T1.dept_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(DISTINCT T3.id)",
            "x_data": [
                [
                    "Statistics",
                    "Psychology",
                    "Pol. Sci.",
                    "Physics",
                    "Mech. Eng.",
                    "Marketing",
                    "Languages",
                    "Geology",
                    "Finance",
                    "English",
                    "Elec. Eng.",
                    "Cybernetics",
                    "Comp. Sci.",
                    "Biology",
                    "Athletics",
                    "Astronomy",
                    "Accounting"
                ]
            ],
            "y_data": [
                [
                    6,
                    2,
                    3,
                    2,
                    2,
                    4,
                    3,
                    1,
                    1,
                    4,
                    4,
                    4,
                    2,
                    2,
                    5,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the total number of instructors for each department with a bar chart, sort by the x axis from high to low.",
            "How many instructors are in each department? Show me a bar chart, and sort by the x axis from high to low."
        ]
    },
    "630@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY count(DISTINCT T3.id) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY count(DISTINCT T3.id) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(DISTINCT T3.id)",
            "x_data": [
                [
                    "Astronomy",
                    "Finance",
                    "Geology",
                    "Biology",
                    "Comp. Sci.",
                    "Mech. Eng.",
                    "Physics",
                    "Psychology",
                    "Languages",
                    "Pol. Sci.",
                    "Accounting",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Marketing",
                    "Athletics",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    3,
                    3,
                    4,
                    4,
                    4,
                    4,
                    4,
                    5,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many instructors are in each department? Show me a bar chart, I want to order id) from low to high order.",
            "Find the total number of instructors for each department with a bar chart, show by the total number in asc."
        ]
    },
    "630@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY count(DISTINCT T3.id) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY count(DISTINCT T3.id) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(DISTINCT T3.id)",
            "x_data": [
                [
                    "Statistics",
                    "Athletics",
                    "Marketing",
                    "English",
                    "Elec. Eng.",
                    "Cybernetics",
                    "Accounting",
                    "Pol. Sci.",
                    "Languages",
                    "Psychology",
                    "Physics",
                    "Mech. Eng.",
                    "Comp. Sci.",
                    "Biology",
                    "Geology",
                    "Finance",
                    "Astronomy"
                ]
            ],
            "y_data": [
                [
                    6,
                    5,
                    4,
                    4,
                    4,
                    4,
                    4,
                    3,
                    3,
                    2,
                    2,
                    2,
                    2,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the total number of instructors for each department with a bar chart, and could you sort by the y axis in desc?",
            "How many instructors are in each department? Show me a bar chart, and show by the y axis from high to low."
        ]
    },
    "631@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , COUNT(dept_name) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , COUNT(dept_name) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "COUNT(dept_name)",
            "x_data": [
                [
                    "Athletics",
                    "Biology",
                    "Civil Eng.",
                    "Comp. Sci.",
                    "Cybernetics",
                    "English",
                    "Finance",
                    "History",
                    "Marketing",
                    "Mech. Eng.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "How many courses have more than one prerequisite for each department? Visualize with a bar chart, I want to rank by the dept_name in ascending.",
            "Find the number of courses that have more than one prerequisites for each department in a bar chart, and could you sort in ascending by the bars?"
        ]
    },
    "631@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , COUNT(dept_name) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , COUNT(dept_name) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "COUNT(dept_name)",
            "x_data": [
                [
                    "Statistics",
                    "Psychology",
                    "Mech. Eng.",
                    "Marketing",
                    "History",
                    "Finance",
                    "English",
                    "Cybernetics",
                    "Comp. Sci.",
                    "Civil Eng.",
                    "Biology",
                    "Athletics"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "How many courses have more than one prerequisite for each department? Visualize with a bar chart, and order x-axis in desc order.",
            "Find the number of courses that have more than one prerequisites for each department in a bar chart, and show by the x-axis in descending please."
        ]
    },
    "631@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , COUNT(dept_name) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY COUNT(dept_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , COUNT(dept_name) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY COUNT(dept_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "COUNT(dept_name)",
            "x_data": [
                [
                    "Biology",
                    "English",
                    "Finance",
                    "History",
                    "Marketing",
                    "Statistics",
                    "Athletics",
                    "Civil Eng.",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Mech. Eng.",
                    "Psychology"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "Find the number of courses that have more than one prerequisites for each department in a bar chart, display Y-axis from low to high order please.",
            "How many courses have more than one prerequisite for each department? Visualize with a bar chart, and display the number of dept name in asc order."
        ]
    },
    "631@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , COUNT(dept_name) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY COUNT(dept_name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , COUNT(dept_name) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY COUNT(dept_name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "COUNT(dept_name)",
            "x_data": [
                [
                    "Psychology",
                    "Mech. Eng.",
                    "Cybernetics",
                    "Comp. Sci.",
                    "Civil Eng.",
                    "Athletics",
                    "Statistics",
                    "Marketing",
                    "History",
                    "Finance",
                    "English",
                    "Biology"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "How many courses have more than one prerequisite for each department? Visualize with a bar chart, I want to list in descending by the y-axis.",
            "Find the number of courses that have more than one prerequisites for each department in a bar chart, list from high to low by the the number of dept name."
        ]
    },
    "632@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "SUM(credits)",
            "x_data": [
                [
                    "Athletics",
                    "Biology",
                    "Civil Eng.",
                    "Comp. Sci.",
                    "Cybernetics",
                    "English",
                    "Finance",
                    "History",
                    "Marketing",
                    "Mech. Eng.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    7,
                    3,
                    7,
                    8,
                    7,
                    3,
                    4,
                    3,
                    3,
                    6,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "What is the sum of credit value of courses with more than one prerequisite for each department? Return a bar chart, sort X-axis in asc order please.",
            "Find the sum of credits of courses that have more than one prerequisites for each department with a bar chart, I want to sort in ascending by the X-axis."
        ]
    },
    "632@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "SUM(credits)",
            "x_data": [
                [
                    "Statistics",
                    "Psychology",
                    "Mech. Eng.",
                    "Marketing",
                    "History",
                    "Finance",
                    "English",
                    "Cybernetics",
                    "Comp. Sci.",
                    "Civil Eng.",
                    "Biology",
                    "Athletics"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    6,
                    3,
                    3,
                    4,
                    3,
                    7,
                    8,
                    7,
                    3,
                    7
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "Find the sum of credits of courses that have more than one prerequisites for each department with a bar chart, and rank from high to low by the bar.",
            "What is the sum of credit value of courses with more than one prerequisite for each department? Return a bar chart, and show in descending by the dept_name."
        ]
    },
    "632@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY SUM(credits) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY SUM(credits) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "SUM(credits)",
            "x_data": [
                [
                    "Biology",
                    "English",
                    "History",
                    "Marketing",
                    "Statistics",
                    "Finance",
                    "Mech. Eng.",
                    "Psychology",
                    "Athletics",
                    "Civil Eng.",
                    "Cybernetics",
                    "Comp. Sci."
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    3,
                    3,
                    4,
                    6,
                    6,
                    7,
                    7,
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "Find the sum of credits of courses that have more than one prerequisites for each department with a bar chart, order Y from low to high order.",
            "What is the sum of credit value of courses with more than one prerequisite for each department? Return a bar chart, I want to show y-axis from low to high order."
        ]
    },
    "632@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY SUM(credits) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY SUM(credits) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "SUM(credits)",
            "x_data": [
                [
                    "Comp. Sci.",
                    "Cybernetics",
                    "Civil Eng.",
                    "Athletics",
                    "Psychology",
                    "Mech. Eng.",
                    "Finance",
                    "Statistics",
                    "Marketing",
                    "History",
                    "English",
                    "Biology"
                ]
            ],
            "y_data": [
                [
                    8,
                    7,
                    7,
                    7,
                    6,
                    6,
                    4,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "What is the sum of credit value of courses with more than one prerequisite for each department? Return a bar chart, and sort by the y axis in desc please.",
            "Find the sum of credits of courses that have more than one prerequisites for each department with a bar chart, could you show by the y axis in desc?"
        ]
    },
    "633@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "AVG(credits)",
            "x_data": [
                [
                    "Athletics",
                    "Biology",
                    "Civil Eng.",
                    "Comp. Sci.",
                    "Cybernetics",
                    "English",
                    "Finance",
                    "History",
                    "Marketing",
                    "Mech. Eng.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    3.5,
                    3,
                    3.5,
                    4,
                    3.5,
                    3,
                    4,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "What is the average of credit value of courses with more than one prerequisite for each department? Return a bar chart, and could you rank x axis in asc order?",
            "Find the average of credits of courses that have more than one prerequisite for each department with a bar chart, rank by the X in asc."
        ]
    },
    "633@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "AVG(credits)",
            "x_data": [
                [
                    "Statistics",
                    "Psychology",
                    "Mech. Eng.",
                    "Marketing",
                    "History",
                    "Finance",
                    "English",
                    "Cybernetics",
                    "Comp. Sci.",
                    "Civil Eng.",
                    "Biology",
                    "Athletics"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    3,
                    3,
                    4,
                    3,
                    3.5,
                    4,
                    3.5,
                    3,
                    3.5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "What is the average of credit value of courses with more than one prerequisite for each department? Return a bar chart, list by the bar in descending please.",
            "Find the average of credits of courses that have more than one prerequisite for each department with a bar chart, list by the bar in descending please."
        ]
    },
    "633@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY AVG(credits) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY AVG(credits) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "AVG(credits)",
            "x_data": [
                [
                    "Biology",
                    "English",
                    "History",
                    "Marketing",
                    "Mech. Eng.",
                    "Psychology",
                    "Statistics",
                    "Athletics",
                    "Civil Eng.",
                    "Cybernetics",
                    "Comp. Sci.",
                    "Finance"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3.5,
                    3.5,
                    3.5,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "Find the average of credits of courses that have more than one prerequisite for each department with a bar chart, display by the total number in ascending.",
            "What is the average of credit value of courses with more than one prerequisite for each department? Return a bar chart, and display by the y axis from low to high."
        ]
    },
    "633@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY AVG(credits) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY AVG(credits) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "AVG(credits)",
            "x_data": [
                [
                    "Finance",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Civil Eng.",
                    "Athletics",
                    "Statistics",
                    "Psychology",
                    "Mech. Eng.",
                    "Marketing",
                    "History",
                    "English",
                    "Biology"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    3.5,
                    3.5,
                    3.5,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name"
        },
        "nl_queries": [
            "What is the average of credit value of courses with more than one prerequisite for each department? Return a bar chart, and order y axis from high to low order.",
            "Find the average of credits of courses that have more than one prerequisite for each department with a bar chart, and sort in desc by the Y please."
        ]
    },
    "634@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "Aquatic Chemistry",
                    "Cat Herding",
                    "Differential Geometry",
                    "Elastic Structures",
                    "Electron Microscopy",
                    "Embedded Systems",
                    "Fiction Writing",
                    "Game Programming",
                    "Graph Theory",
                    "Groups and Rings",
                    "Immunology",
                    "International Practicum",
                    "Operating Systems",
                    "Ponzi Schemes",
                    "Rock and Roll",
                    "World History"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Find the number of courses that have more than one prerequisites for each title with a bar chart, and sort from low to high by the X-axis.",
            "How many courses with more than one prerequisite for each title? Return a bar chart, could you list x axis in ascending order please?"
        ]
    },
    "634@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "World History",
                    "Rock and Roll",
                    "Ponzi Schemes",
                    "Operating Systems",
                    "International Practicum",
                    "Immunology",
                    "Groups and Rings",
                    "Graph Theory",
                    "Game Programming",
                    "Fiction Writing",
                    "Embedded Systems",
                    "Electron Microscopy",
                    "Elastic Structures",
                    "Differential Geometry",
                    "Cat Herding",
                    "Aquatic Chemistry"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "How many courses with more than one prerequisite for each title? Return a bar chart, show by the bar in desc.",
            "Find the number of courses that have more than one prerequisites for each title with a bar chart, show x axis from high to low order."
        ]
    },
    "634@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "Aquatic Chemistry",
                    "Cat Herding",
                    "Differential Geometry",
                    "Elastic Structures",
                    "Electron Microscopy",
                    "Embedded Systems",
                    "Fiction Writing",
                    "Graph Theory",
                    "Groups and Rings",
                    "Immunology",
                    "Operating Systems",
                    "Ponzi Schemes",
                    "Rock and Roll",
                    "World History",
                    "Game Programming",
                    "International Practicum"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Find the number of courses that have more than one prerequisites for each title with a bar chart, and list by the Y-axis in ascending please.",
            "How many courses with more than one prerequisite for each title? Return a bar chart, and sort in ascending by the total number."
        ]
    },
    "634@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "International Practicum",
                    "Game Programming",
                    "World History",
                    "Rock and Roll",
                    "Ponzi Schemes",
                    "Operating Systems",
                    "Immunology",
                    "Groups and Rings",
                    "Graph Theory",
                    "Fiction Writing",
                    "Embedded Systems",
                    "Electron Microscopy",
                    "Elastic Structures",
                    "Differential Geometry",
                    "Cat Herding",
                    "Aquatic Chemistry"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "How many courses with more than one prerequisite for each title? Return a bar chart, sort Y-axis from high to low order.",
            "Find the number of courses that have more than one prerequisites for each title with a bar chart, could you display Y-axis in descending order?"
        ]
    },
    "635@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(credits)",
            "x_data": [
                [
                    "Aquatic Chemistry",
                    "Cat Herding",
                    "Differential Geometry",
                    "Elastic Structures",
                    "Electron Microscopy",
                    "Embedded Systems",
                    "Fiction Writing",
                    "Game Programming",
                    "Graph Theory",
                    "Groups and Rings",
                    "Immunology",
                    "International Practicum",
                    "Operating Systems",
                    "Ponzi Schemes",
                    "Rock and Roll",
                    "World History"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    3,
                    3,
                    4,
                    3,
                    8,
                    3,
                    4,
                    3,
                    7,
                    3,
                    3,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "What is the sum of credit value of courses with more than one prerequisite for each title? Return a bar chart, rank in asc by the x-axis.",
            "Find the sum of credits of courses that have more than one prerequisite for each title with a bar chart, and sort names in asc order."
        ]
    },
    "635@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(credits)",
            "x_data": [
                [
                    "World History",
                    "Rock and Roll",
                    "Ponzi Schemes",
                    "Operating Systems",
                    "International Practicum",
                    "Immunology",
                    "Groups and Rings",
                    "Graph Theory",
                    "Game Programming",
                    "Fiction Writing",
                    "Embedded Systems",
                    "Electron Microscopy",
                    "Elastic Structures",
                    "Differential Geometry",
                    "Cat Herding",
                    "Aquatic Chemistry"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    3,
                    3,
                    7,
                    3,
                    4,
                    3,
                    8,
                    3,
                    4,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "What is the sum of credit value of courses with more than one prerequisite for each title? Return a bar chart, could you order in descending by the names?",
            "Find the sum of credits of courses that have more than one prerequisite for each title with a bar chart, could you order in descending by the names?"
        ]
    },
    "635@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY SUM(credits) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY SUM(credits) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(credits)",
            "x_data": [
                [
                    "Aquatic Chemistry",
                    "Cat Herding",
                    "Differential Geometry",
                    "Elastic Structures",
                    "Electron Microscopy",
                    "Fiction Writing",
                    "Graph Theory",
                    "Immunology",
                    "Operating Systems",
                    "Ponzi Schemes",
                    "Rock and Roll",
                    "Embedded Systems",
                    "Groups and Rings",
                    "World History",
                    "International Practicum",
                    "Game Programming"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    4,
                    4,
                    4,
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "What is the sum of credit value of courses with more than one prerequisite for each title? Return a bar chart, sort Y from low to high order please.",
            "Find the sum of credits of courses that have more than one prerequisite for each title with a bar chart, list by the y axis in ascending."
        ]
    },
    "635@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY SUM(credits) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY SUM(credits) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(credits)",
            "x_data": [
                [
                    "Game Programming",
                    "International Practicum",
                    "World History",
                    "Groups and Rings",
                    "Embedded Systems",
                    "Rock and Roll",
                    "Ponzi Schemes",
                    "Operating Systems",
                    "Immunology",
                    "Graph Theory",
                    "Fiction Writing",
                    "Electron Microscopy",
                    "Elastic Structures",
                    "Differential Geometry",
                    "Cat Herding",
                    "Aquatic Chemistry"
                ]
            ],
            "y_data": [
                [
                    8,
                    7,
                    4,
                    4,
                    4,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Find the sum of credits of courses that have more than one prerequisite for each title with a bar chart, sort sum credits in desc order please.",
            "What is the sum of credit value of courses with more than one prerequisite for each title? Return a bar chart, and order by the sum credits in desc."
        ]
    },
    "636@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(credits)",
            "x_data": [
                [
                    "Aquatic Chemistry",
                    "Cat Herding",
                    "Differential Geometry",
                    "Elastic Structures",
                    "Electron Microscopy",
                    "Embedded Systems",
                    "Fiction Writing",
                    "Game Programming",
                    "Graph Theory",
                    "Groups and Rings",
                    "Immunology",
                    "International Practicum",
                    "Operating Systems",
                    "Ponzi Schemes",
                    "Rock and Roll",
                    "World History"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    3,
                    3,
                    4,
                    3,
                    4,
                    3,
                    4,
                    3,
                    3.5,
                    3,
                    3,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "What is the average of credit value of courses with more than one prerequisite for each title? Return a bar chart, show x axis in ascending order.",
            "Find the average of credits of courses that have more than one prerequisite for each title with a bar chart, and show x axis in ascending order."
        ]
    },
    "636@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(credits)",
            "x_data": [
                [
                    "World History",
                    "Rock and Roll",
                    "Ponzi Schemes",
                    "Operating Systems",
                    "International Practicum",
                    "Immunology",
                    "Groups and Rings",
                    "Graph Theory",
                    "Game Programming",
                    "Fiction Writing",
                    "Embedded Systems",
                    "Electron Microscopy",
                    "Elastic Structures",
                    "Differential Geometry",
                    "Cat Herding",
                    "Aquatic Chemistry"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    3,
                    3,
                    3.5,
                    3,
                    4,
                    3,
                    4,
                    3,
                    4,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "What is the average of credit value of courses with more than one prerequisite for each title? Return a bar chart, list x-axis from high to low order please.",
            "Find the average of credits of courses that have more than one prerequisite for each title with a bar chart, and display X in descending order."
        ]
    },
    "636@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY AVG(credits) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY AVG(credits) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(credits)",
            "x_data": [
                [
                    "Aquatic Chemistry",
                    "Cat Herding",
                    "Differential Geometry",
                    "Elastic Structures",
                    "Electron Microscopy",
                    "Fiction Writing",
                    "Graph Theory",
                    "Immunology",
                    "Operating Systems",
                    "Ponzi Schemes",
                    "Rock and Roll",
                    "International Practicum",
                    "Embedded Systems",
                    "Game Programming",
                    "Groups and Rings",
                    "World History"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3.5,
                    4,
                    4,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "What is the average of credit value of courses with more than one prerequisite for each title? Return a bar chart, display Y in asc order.",
            "Find the average of credits of courses that have more than one prerequisite for each title with a bar chart, and list in asc by the y axis."
        ]
    },
    "636@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY AVG(credits) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY AVG(credits) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(credits)",
            "x_data": [
                [
                    "World History",
                    "Groups and Rings",
                    "Game Programming",
                    "Embedded Systems",
                    "International Practicum",
                    "Rock and Roll",
                    "Ponzi Schemes",
                    "Operating Systems",
                    "Immunology",
                    "Graph Theory",
                    "Fiction Writing",
                    "Electron Microscopy",
                    "Elastic Structures",
                    "Differential Geometry",
                    "Cat Herding",
                    "Aquatic Chemistry"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    4,
                    4,
                    3.5,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Find the average of credits of courses that have more than one prerequisite for each title with a bar chart, I want to order in descending by the y-axis.",
            "What is the average of credit value of courses with more than one prerequisite for each title? Return a bar chart, rank by the total number in descending."
        ]
    },
    "640@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION GROUP BY year ORDER BY year ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY year ORDER BY year ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2001-01-01",
                    "2002-01-01",
                    "2003-01-01",
                    "2004-01-01",
                    "2005-01-01",
                    "2006-01-01",
                    "2007-01-01",
                    "2008-01-01",
                    "2009-01-01",
                    "2010-01-01"
                ]
            ],
            "y_data": [
                [
                    5,
                    13,
                    12,
                    7,
                    8,
                    13,
                    12,
                    10,
                    9,
                    11
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "Visualize the general trend of how many courses over the year, and could you show X in asc order please?",
            "Find the number of courses provided in each year with a line chart, and sort in asc by the year.",
            "How many courses are provided in each year? Visualize a line chart, and I want to list x-axis in ascending order please."
        ]
    },
    "640@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION GROUP BY year ORDER BY year DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY year ORDER BY year DESC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2010-01-01",
                    "2009-01-01",
                    "2008-01-01",
                    "2007-01-01",
                    "2006-01-01",
                    "2005-01-01",
                    "2004-01-01",
                    "2003-01-01",
                    "2002-01-01",
                    "2001-01-01"
                ]
            ],
            "y_data": [
                [
                    11,
                    9,
                    10,
                    12,
                    13,
                    8,
                    7,
                    12,
                    13,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year"
        },
        "nl_queries": [
            "How many courses are provided in each year? Visualize with a line chart, and order x-axis in descending order.",
            "Visualize the general trend of the number of courses over the year, and show x-axis from high to low order.",
            "Find the number of courses provided in each year with a line chart, could you display X in descending order?"
        ]
    },
    "642@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION ORDER BY year ASC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION ORDER BY year ASC BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2001",
                    "2002",
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010"
                ]
            ],
            "y_data": [
                [
                    5,
                    13,
                    12,
                    7,
                    8,
                    13,
                    12,
                    10,
                    9,
                    11
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "How many courses are provided in each year? Visualize with a line chart, and order X-axis in asc order.",
            "Find the number of courses provided in each year with a line chart, I want to rank the year in asc order please.",
            "Plot the binning year and count their total number as a trend line, list x axis in ascending order."
        ]
    },
    "642@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION ORDER BY year DESC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION ORDER BY year DESC BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2010",
                    "2009",
                    "2008",
                    "2007",
                    "2006",
                    "2005",
                    "2004",
                    "2003",
                    "2002",
                    "2001"
                ]
            ],
            "y_data": [
                [
                    11,
                    9,
                    10,
                    12,
                    13,
                    8,
                    7,
                    12,
                    13,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "Plot year by count the total number as a trend line, note that binning year and display x axis in desc order please.",
            "Find the number of courses provided in each year with a line chart, and show by the year in desc.",
            "How many courses are provided in each year? Visualize with a line chart, sort in descending by the x axis."
        ]
    },
    "647@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION GROUP BY semester ,  year ORDER BY year ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY semester ,  year ORDER BY year ASC"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2001-01-01",
                    "2002-01-01",
                    "2003-01-01",
                    "2004-01-01",
                    "2005-01-01",
                    "2006-01-01",
                    "2007-01-01",
                    "2008-01-01",
                    "2009-01-01",
                    "2010-01-01"
                ]
            ],
            "y_data": [
                [
                    2,
                    9,
                    6,
                    3,
                    4,
                    8,
                    6,
                    1,
                    7,
                    5
                ],
                [
                    3,
                    4,
                    6,
                    4,
                    4,
                    5,
                    6,
                    9,
                    2,
                    6
                ]
            ],
            "classify": [
                "Fall",
                "Spring"
            ],
            "describe": "GROUP BY semester, GROUP BY year"
        },
        "nl_queries": [
            "I want to see trend the total number over year by semester, and sort in ascending by the X.",
            "How many courses are provided in each year? Visualize with a group line chart grouping by semester, and rank x axis in asc order.",
            "Find the number of courses provided in each year with a group line chart that groups by semester, and I want to sort in asc by the X."
        ]
    },
    "647@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION GROUP BY semester ,  year ORDER BY year DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY semester ,  year ORDER BY year DESC"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2010-01-01",
                    "2009-01-01",
                    "2008-01-01",
                    "2007-01-01",
                    "2006-01-01",
                    "2005-01-01",
                    "2004-01-01",
                    "2003-01-01",
                    "2002-01-01",
                    "2001-01-01"
                ]
            ],
            "y_data": [
                [
                    5,
                    7,
                    1,
                    6,
                    8,
                    4,
                    3,
                    6,
                    9,
                    2
                ],
                [
                    6,
                    2,
                    9,
                    6,
                    5,
                    4,
                    4,
                    6,
                    4,
                    3
                ]
            ],
            "classify": [
                "Fall",
                "Spring"
            ],
            "describe": "GROUP BY semester, GROUP BY year"
        },
        "nl_queries": [
            "How many courses are provided in each year? Visualize with a group line chart grouping by semester, could you list x axis in desc order?",
            "I want to see trend the total number over year by semester, and show from high to low by the X-axis.",
            "Find the number of courses provided in each year with a group line chart that groups by semester, and order from high to low by the X-axis."
        ]
    },
    "648@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION GROUP BY semester ORDER BY year ASC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY semester ORDER BY year ASC BIN year BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2001",
                    "2002",
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010"
                ]
            ],
            "y_data": [
                [
                    2,
                    9,
                    6,
                    3,
                    4,
                    8,
                    6,
                    1,
                    7,
                    5
                ],
                [
                    3,
                    4,
                    6,
                    4,
                    4,
                    5,
                    6,
                    9,
                    2,
                    6
                ]
            ],
            "classify": [
                "Fall",
                "Spring"
            ],
            "describe": "GROUP BY semester, BIN year BY YEAR"
        },
        "nl_queries": [
            "Find the number of courses provided in each year with a group line chart that groups by semester, list the binning year in asc order.",
            "How many courses are provided in each year? binning by year and create a line chart grouping by semester, and sort in ascending by the X-axis.",
            "I want to see trend count(*) over year by semester, binning year and show the x axis in asc order please."
        ]
    },
    "648@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION GROUP BY semester ORDER BY year DESC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY semester ORDER BY year DESC BIN year BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2010",
                    "2009",
                    "2008",
                    "2007",
                    "2006",
                    "2005",
                    "2004",
                    "2003",
                    "2002",
                    "2001"
                ]
            ],
            "y_data": [
                [
                    5,
                    7,
                    1,
                    6,
                    8,
                    4,
                    3,
                    6,
                    9,
                    2
                ],
                [
                    6,
                    2,
                    9,
                    6,
                    5,
                    4,
                    4,
                    6,
                    4,
                    3
                ]
            ],
            "classify": [
                "Fall",
                "Spring"
            ],
            "describe": "GROUP BY semester, BIN year BY YEAR"
        },
        "nl_queries": [
            "Find the number of courses provided in each year with a group line chart that groups by semester, and I want to show in desc by the X.",
            "I want to see trend of count(*) over binning year by semester, order by the x axis from high to low.",
            "How many courses are provided in each year? Visualize with a group line chart grouping by semester, I want to order X from in desc order."
        ]
    },
    "652@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY name ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY name ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Bietzk",
                    "DAgostino",
                    "Dale",
                    "Jaekel",
                    "Mahmoud",
                    "Mingoz",
                    "Ullman "
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "Show how many courses in 2008 for every instructor with a bar chart, and display by the names from low to high.",
            "List the number of courses in year 2008 for each instructor in a bar chart, and list name in asc order."
        ]
    },
    "652@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY name ORDER BY name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY name ORDER BY name DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Ullman ",
                    "Mingoz",
                    "Mahmoud",
                    "Jaekel",
                    "Dale",
                    "DAgostino",
                    "Bietzk"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "Show how many courses in 2008 for every instructor with a bar chart, display from high to low by the x axis.",
            "List the number of courses in year 2008 for each instructor in a bar chart, and order X in desc order."
        ]
    },
    "652@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY name ORDER BY COUNT(name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY name ORDER BY COUNT(name) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Bietzk",
                    "Jaekel",
                    "Mahmoud",
                    "Ullman ",
                    "DAgostino",
                    "Dale",
                    "Mingoz"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "List the number of courses in year 2008 for each instructor in a bar chart, display y axis in ascending order.",
            "Show how many courses in 2008 for every instructor with a bar chart, show Y-axis in asc order."
        ]
    },
    "652@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY name ORDER BY COUNT(name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY name ORDER BY COUNT(name) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Mingoz",
                    "Dale",
                    "DAgostino",
                    "Ullman ",
                    "Mahmoud",
                    "Jaekel",
                    "Bietzk"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "List the number of courses in year 2008 for each instructor in a bar chart, display by the total number in descending.",
            "Show how many courses in 2008 for every instructor with a bar chart, display Y-axis from high to low order."
        ]
    },
    "653@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY title ORDER BY title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY title ORDER BY title ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "Animal Behavior",
                    "Elastic Structures",
                    "Embedded Systems",
                    "Marine Mammals",
                    "Networking",
                    "Race Car Driving",
                    "Surfing",
                    "Transaction Processing",
                    "World History"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "How many instructors for every course in 2008? Show me a bar chart grouping by course title, could you order from low to high by the X?",
            "List the number of instructors for each course in year 2008 with a bar chart, and I want to rank by the X in ascending."
        ]
    },
    "653@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY title ORDER BY title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY title ORDER BY title DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "World History",
                    "Transaction Processing",
                    "Surfing",
                    "Race Car Driving",
                    "Networking",
                    "Marine Mammals",
                    "Embedded Systems",
                    "Elastic Structures",
                    "Animal Behavior"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "How many instructors for every course in 2008? Show me a bar chart grouping by course title, could you list X from high to low order?",
            "List the number of instructors for each course in year 2008 with a bar chart, and sort by the X-axis in descending please."
        ]
    },
    "653@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY title ORDER BY COUNT(title) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY title ORDER BY COUNT(title) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "Animal Behavior",
                    "Embedded Systems",
                    "Marine Mammals",
                    "Networking",
                    "Race Car Driving",
                    "Surfing",
                    "Transaction Processing",
                    "World History",
                    "Elastic Structures"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "List the number of instructors for each course in year 2008 with a bar chart, list in asc by the y axis.",
            "How many instructors for every course in 2008? Show me a bar chart grouping by course title, and I want to rank by the y-axis in asc."
        ]
    },
    "653@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY title ORDER BY COUNT(title) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY title ORDER BY COUNT(title) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "Elastic Structures",
                    "World History",
                    "Transaction Processing",
                    "Surfing",
                    "Race Car Driving",
                    "Networking",
                    "Marine Mammals",
                    "Embedded Systems",
                    "Animal Behavior"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "How many instructors for every course in 2008? Show me a bar chart grouping by course title, and rank by the y axis in desc.",
            "List the number of instructors for each course in year 2008 with a bar chart, order by the y-axis in desc."
        ]
    },
    "654@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY dept_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY dept_name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Civil Eng.",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "History",
                    "Languages",
                    "Marketing",
                    "Math",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    99,
                    106,
                    92,
                    100,
                    120,
                    108,
                    86,
                    98,
                    95,
                    97,
                    92,
                    117,
                    119,
                    85,
                    91,
                    105,
                    96,
                    109,
                    100,
                    85
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a bar chart for the total number of each dept name, and sort from low to high by the bar.",
            "Find the total number of students in each department Show bar chart, and I want to show by the X-axis from low to high.",
            "How many students are in each department Plot them as bar chart, and order by the x axis from low to high.",
            "Visualize a bar chart for how many students are in each department?, and sort from low to high by the bar.",
            "how many students are in each department?, order X from low to high order."
        ]
    },
    "654@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY dept_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY dept_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Statistics",
                    "Psychology",
                    "Pol. Sci.",
                    "Physics",
                    "Mech. Eng.",
                    "Math",
                    "Marketing",
                    "Languages",
                    "History",
                    "Geology",
                    "Finance",
                    "English",
                    "Elec. Eng.",
                    "Cybernetics",
                    "Comp. Sci.",
                    "Civil Eng.",
                    "Biology",
                    "Athletics",
                    "Astronomy",
                    "Accounting"
                ]
            ],
            "y_data": [
                [
                    85,
                    100,
                    109,
                    96,
                    105,
                    91,
                    85,
                    119,
                    117,
                    92,
                    97,
                    95,
                    98,
                    86,
                    108,
                    120,
                    100,
                    92,
                    106,
                    99
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the total number of students in each department Show bar chart, and rank x-axis in desc order.",
            "How many students are in each department Plot them as bar chart, rank x-axis in desc order.",
            "how many students are in each department?, order X-axis in desc order.",
            "Visualize a bar chart for how many students are in each department?, and show in descending by the names.",
            "Give me a bar chart for the total number of each dept name, and rank x-axis in desc order."
        ]
    },
    "654@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Marketing",
                    "Statistics",
                    "Cybernetics",
                    "Math",
                    "Athletics",
                    "Geology",
                    "English",
                    "Physics",
                    "Finance",
                    "Elec. Eng.",
                    "Accounting",
                    "Biology",
                    "Psychology",
                    "Mech. Eng.",
                    "Astronomy",
                    "Comp. Sci.",
                    "Pol. Sci.",
                    "History",
                    "Languages",
                    "Civil Eng."
                ]
            ],
            "y_data": [
                [
                    85,
                    85,
                    86,
                    91,
                    92,
                    92,
                    95,
                    96,
                    97,
                    98,
                    99,
                    100,
                    100,
                    105,
                    106,
                    108,
                    109,
                    117,
                    119,
                    120
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "how many students are in each department?, and sort in asc by the Y please.",
            "Give me a bar chart for the total number of each dept name, I want to show by the the total number in ascending.",
            "How many students are in each department Plot them as bar chart, and show by the total number from low to high please.",
            "Visualize a bar chart for how many students are in each department?, and show in ascending by the Y.",
            "Find the total number of students in each department Show bar chart, and display by the Y from low to high."
        ]
    },
    "654@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Civil Eng.",
                    "Languages",
                    "History",
                    "Pol. Sci.",
                    "Comp. Sci.",
                    "Astronomy",
                    "Mech. Eng.",
                    "Psychology",
                    "Biology",
                    "Accounting",
                    "Elec. Eng.",
                    "Finance",
                    "Physics",
                    "English",
                    "Geology",
                    "Athletics",
                    "Math",
                    "Cybernetics",
                    "Statistics",
                    "Marketing"
                ]
            ],
            "y_data": [
                [
                    120,
                    119,
                    117,
                    109,
                    108,
                    106,
                    105,
                    100,
                    100,
                    99,
                    98,
                    97,
                    96,
                    95,
                    92,
                    92,
                    91,
                    86,
                    85,
                    85
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the total number of students in each department Show bar chart, and I want to show in descending by the total number.",
            "Visualize a bar chart for how many students are in each department?, and could you sort y axis in descending order?",
            "how many students are in each department?, and could you rank by the the total number in desc?",
            "How many students are in each department Plot them as bar chart, and I want to show in descending by the total number.",
            "Give me a bar chart for the total number of each dept name, and I want to list y axis from high to low order."
        ]
    },
    "655@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY dept_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY dept_name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "budget",
            "x_data": [
                [
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Cybernetics",
                    "English",
                    "Finance",
                    "History",
                    "Languages",
                    "Math",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology"
                ]
            ],
            "y_data": [
                [
                    617253.94,
                    734550.7,
                    647610.55,
                    794541.46,
                    611042.66,
                    866831.75,
                    699140.86,
                    601283.6,
                    777605.11,
                    942162.76,
                    573745.09,
                    848175.04
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and budget of departments whose budgets are more than the average budget Visualize by bar chart, I want to order from low to high by the x-axis please.",
            "Return a histogram on what are the names and budgets of departments with budgets greater than the average?, display by the bars from low to high.",
            "What are the names and budgets of departments with budgets greater than the average Plot them as bar chart, and display by the bars from low to high.",
            "Display a bar chart for what are the names and budgets of departments with budgets greater than the average?, and I want to order from low to high by the x-axis please."
        ]
    },
    "655@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY dept_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY dept_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "budget",
            "x_data": [
                [
                    "Psychology",
                    "Pol. Sci.",
                    "Physics",
                    "Math",
                    "Languages",
                    "History",
                    "Finance",
                    "English",
                    "Cybernetics",
                    "Biology",
                    "Athletics",
                    "Astronomy"
                ]
            ],
            "y_data": [
                [
                    848175.04,
                    573745.09,
                    942162.76,
                    777605.11,
                    601283.6,
                    699140.86,
                    866831.75,
                    611042.66,
                    794541.46,
                    647610.55,
                    734550.7,
                    617253.94
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a histogram on what are the names and budgets of departments with budgets greater than the average?, could you rank X-axis from high to low order?",
            "What are the names and budgets of departments with budgets greater than the average Plot them as bar chart, and could you show by the bars in descending?",
            "Find the name and budget of departments whose budgets are more than the average budget Visualize by bar chart, and display names in descending order.",
            "Display a bar chart for what are the names and budgets of departments with budgets greater than the average?, order from high to low by the x axis please."
        ]
    },
    "655@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY budget ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY budget ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "budget",
            "x_data": [
                [
                    "Pol. Sci.",
                    "Languages",
                    "English",
                    "Astronomy",
                    "Biology",
                    "History",
                    "Athletics",
                    "Math",
                    "Cybernetics",
                    "Psychology",
                    "Finance",
                    "Physics"
                ]
            ],
            "y_data": [
                [
                    573745.09,
                    601283.6,
                    611042.66,
                    617253.94,
                    647610.55,
                    699140.86,
                    734550.7,
                    777605.11,
                    794541.46,
                    848175.04,
                    866831.75,
                    942162.76
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a histogram on what are the names and budgets of departments with budgets greater than the average?, and sort in ascending by the Y please.",
            "What are the names and budgets of departments with budgets greater than the average Plot them as bar chart, could you display by the budget from low to high?",
            "Display a bar chart for what are the names and budgets of departments with budgets greater than the average?, and order total number in asc order.",
            "Find the name and budget of departments whose budgets are more than the average budget Visualize by bar chart, and could you display by the budget from low to high?"
        ]
    },
    "655@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY budget DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY budget DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "budget",
            "x_data": [
                [
                    "Physics",
                    "Finance",
                    "Psychology",
                    "Cybernetics",
                    "Math",
                    "Athletics",
                    "History",
                    "Biology",
                    "Astronomy",
                    "English",
                    "Languages",
                    "Pol. Sci."
                ]
            ],
            "y_data": [
                [
                    942162.76,
                    866831.75,
                    848175.04,
                    794541.46,
                    777605.11,
                    734550.7,
                    699140.86,
                    647610.55,
                    617253.94,
                    611042.66,
                    601283.6,
                    573745.09
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the names and budgets of departments with budgets greater than the average Plot them as bar chart, and could you order Y-axis from high to low order?",
            "Find the name and budget of departments whose budgets are more than the average budget Visualize by bar chart, display from high to low by the Y.",
            "Display a bar chart for what are the names and budgets of departments with budgets greater than the average?, and order by the budget from high to low.",
            "Return a histogram on what are the names and budgets of departments with budgets greater than the average?, order by the budget from high to low."
        ]
    },
    "657@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM department WHERE budget > (SELECT avg(budget) FROM department) GROUP BY building ORDER BY building ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM department WHERE budget > (SELECT avg(budget) FROM department) GROUP BY building ORDER BY building ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Brodhead",
                    "Bronfman",
                    "Candlestick",
                    "Linderman",
                    "Mercer",
                    "Palmer",
                    "Taylor",
                    "Thompson",
                    "Whitman",
                    "Wrigley"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "How many departments whose budget is more than the average budget in each building? Show me a bar chart, and order X from low to high order please.",
            "Give the number of departments with greater than average budget in each building with a bar chart, and sort by the bar in ascending."
        ]
    },
    "657@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM department WHERE budget > (SELECT avg(budget) FROM department) GROUP BY building ORDER BY building DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM department WHERE budget > (SELECT avg(budget) FROM department) GROUP BY building ORDER BY building DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Wrigley",
                    "Whitman",
                    "Thompson",
                    "Taylor",
                    "Palmer",
                    "Mercer",
                    "Linderman",
                    "Candlestick",
                    "Bronfman",
                    "Brodhead"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "How many departments whose budget is more than the average budget in each building? Show me a bar chart, could you show by the bar in descending?",
            "Give the number of departments with greater than average budget in each building with a bar chart, I want to show X-axis from high to low order please."
        ]
    },
    "657@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM department WHERE budget > (SELECT avg(budget) FROM department) GROUP BY building ORDER BY COUNT(building) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM department WHERE budget > (SELECT avg(budget) FROM department) GROUP BY building ORDER BY COUNT(building) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Brodhead",
                    "Bronfman",
                    "Linderman",
                    "Mercer",
                    "Palmer",
                    "Thompson",
                    "Whitman",
                    "Wrigley",
                    "Candlestick",
                    "Taylor"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "How many departments whose budget is more than the average budget in each building? Show me a bar chart, list by the total number in asc.",
            "Give the number of departments with greater than average budget in each building with a bar chart, and order the number of building from low to high order."
        ]
    },
    "657@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM department WHERE budget > (SELECT avg(budget) FROM department) GROUP BY building ORDER BY COUNT(building) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM department WHERE budget > (SELECT avg(budget) FROM department) GROUP BY building ORDER BY COUNT(building) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Taylor",
                    "Candlestick",
                    "Wrigley",
                    "Whitman",
                    "Thompson",
                    "Palmer",
                    "Mercer",
                    "Linderman",
                    "Bronfman",
                    "Brodhead"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building"
        },
        "nl_queries": [
            "How many departments whose budget is more than the average budget in each building? Show me a bar chart, and display y axis from high to low order.",
            "Give the number of departments with greater than average budget in each building with a bar chart, and rank from high to low by the Y."
        ]
    },
    "723@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY role_description ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY role_description ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_description",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Editor",
                    "Manager",
                    "Photo",
                    "Proof Manager"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show a bar chart about how many employees does each role have?, sort x-axis from low to high order."
        ]
    },
    "723@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY role_description DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY role_description DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_description",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Proof Manager",
                    "Photo",
                    "Manager",
                    "Editor"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show a bar chart about how many employees does each role have?, display x axis from high to low order please."
        ]
    },
    "723@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_description",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Manager",
                    "Proof Manager",
                    "Editor",
                    "Photo"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show a bar chart about how many employees does each role have?, and I want to display Y in ascending order please."
        ]
    },
    "723@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_description",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Photo",
                    "Editor",
                    "Proof Manager",
                    "Manager"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show a bar chart about how many employees does each role have?, I want to order by the the total number in descending."
        ]
    },
    "725@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY T1.role_code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY T1.role_code ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ED",
                    "MG",
                    "PR",
                    "PT"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many employees does each role have? Plot a bar chart listing role id and number of employees, rank by the x-axis in asc."
        ]
    },
    "725@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY T1.role_code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY T1.role_code DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "PT",
                    "PR",
                    "MG",
                    "ED"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many employees does each role have? Plot a bar chart listing role id and number of employees, display by the role_code in descending please."
        ]
    },
    "725@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "MG",
                    "PR",
                    "ED",
                    "PT"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many employees does each role have? Plot a bar chart listing role id and number of employees, and sort by the y-axis from low to high."
        ]
    },
    "725@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "PT",
                    "ED",
                    "PR",
                    "MG"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many employees does each role have? Plot a bar chart listing role id and number of employees, and could you order Y in descending order?"
        ]
    },
    "726@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY COUNT(receipt_date) ASC",
                "binning": "BIN receipt_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY COUNT(receipt_date) ASC BIN receipt_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "receipt_date",
            "y_name": "COUNT(receipt_date)",
            "x_data": [
                [
                    "Thur",
                    "Tue",
                    "Sat",
                    "Sun",
                    "Wed",
                    "Fri",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    2,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN receipt_date BY WEEKDAY"
        },
        "nl_queries": [
            "List the number of documents for each receipt date and bin by weekday in a bar chart, I want to list in ascending by the total number please.",
            "Bar chart of the frequency from each receipt date, and bin the date in weekday interval, and then show y axis in asc order."
        ]
    },
    "726@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY COUNT(receipt_date) DESC",
                "binning": "BIN receipt_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY COUNT(receipt_date) DESC BIN receipt_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "receipt_date",
            "y_name": "COUNT(receipt_date)",
            "x_data": [
                [
                    "Mon",
                    "Fri",
                    "Wed",
                    "Sun",
                    "Sat",
                    "Tue",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN receipt_date BY WEEKDAY"
        },
        "nl_queries": [
            "List the number of documents for each receipt date and bin by weekday in a bar chart, sort y axis from high to low order.",
            "Bar chart of the frequency from each receipt date, bin date by weekday, order y in desc order."
        ]
    },
    "729@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date ASC",
                "binning": "BIN receipt_date BY YEAR"
            },
            "VQL": "Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date ASC BIN receipt_date BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "line",
            "x_name": "receipt_date",
            "y_name": "COUNT(receipt_date)",
            "x_data": [
                [
                    "1973~1977",
                    "1978~1982",
                    "1983~1987",
                    "1988~1992",
                    "1993~1997",
                    "1998~2002",
                    "2003~2007",
                    "2008~2012",
                    "2013~2017"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    3,
                    0,
                    2,
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN receipt_date BY YEAR"
        },
        "nl_queries": [
            "List the number of documents for each receipt date and bin by year with a line chart, order by the X in ascending.",
            "Show the number of documents for each receipt date and bin by year with a line chart, show in asc by the receipt_date.",
            "I want to see trend of how many receipt date by receipt date, I want to display from low to high by the X.",
            "Give me the trend of how many receipt date by receipt date, and could you show in asc by the receipt_date?"
        ]
    },
    "729@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date DESC",
                "binning": "BIN receipt_date BY YEAR"
            },
            "VQL": "Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date DESC BIN receipt_date BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "line",
            "x_name": "receipt_date",
            "y_name": "COUNT(receipt_date)",
            "x_data": [
                [
                    "2013~2017",
                    "2008~2012",
                    "2003~2007",
                    "1998~2002",
                    "1993~1997",
                    "1988~1992",
                    "1983~1987",
                    "1978~1982",
                    "1973~1977"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    1,
                    1,
                    2,
                    0,
                    3,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN receipt_date BY YEAR"
        },
        "nl_queries": [
            "Show the number of documents for each receipt date and bin by year with a line chart, sort by the x-axis in desc please.",
            "List the number of documents for each receipt date and bin by year with a line chart, and sort by the x-axis in desc please.",
            "I want to see trend of how many receipt date by receipt date, and order by the X in desc please."
        ]
    },
    "3208@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Adam Scott",
                    "Graeme McDowell"
                ]
            ],
            "y_data": [
                [
                    26,
                    34
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the name and age for all male people who don't have a wedding with a bar chart, and I want to show from low to high by the names.",
            "A bar chart about the name and age for all male people who don't have a wedding, could you display by the x axis in ascending?"
        ]
    },
    "3208@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Graeme McDowell",
                    "Adam Scott"
                ]
            ],
            "y_data": [
                [
                    34,
                    26
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the name and age for all male people who don't have a wedding with a bar chart, and list by the x axis in descending please.",
            "A bar chart about the name and age for all male people who don't have a wedding, and could you rank in desc by the X please?"
        ]
    },
    "3208@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Age ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Age ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Adam Scott",
                    "Graeme McDowell"
                ]
            ],
            "y_data": [
                [
                    26,
                    34
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "A bar chart about the name and age for all male people who don't have a wedding, and could you order y-axis in ascending order?",
            "Show the name and age for all male people who don't have a wedding with a bar chart, list from low to high by the Y-axis."
        ]
    },
    "3208@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Age DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Age DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Graeme McDowell",
                    "Adam Scott"
                ]
            ],
            "y_data": [
                [
                    34,
                    26
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "A bar chart about the name and age for all male people who don't have a wedding, and show by the Y in descending please.",
            "Show the name and age for all male people who don't have a wedding with a bar chart, and list from high to low by the Y."
        ]
    },
    "3209@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) ASC",
                "binning": "BIN Open_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) ASC BIN Open_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "Thur",
                    "Mon",
                    "Tue",
                    "Wed",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY WEEKDAY"
        },
        "nl_queries": [
            "How many churches open each year? Convert the year into the weekday interval and visualize with a bar chart, and display in ascending by the Y-axis.",
            "Bar chart x axis open date y axis how many open date, and order in asc by the y-axis."
        ]
    },
    "3209@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) DESC",
                "binning": "BIN Open_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) DESC BIN Open_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "Sun",
                    "Sat",
                    "Fri",
                    "Wed",
                    "Tue",
                    "Mon",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY WEEKDAY"
        },
        "nl_queries": [
            "How many churches open each year? Convert the year into the weekday interval and visualize with a bar chart, and rank total number in desc order.",
            "Bar chart x axis open date y axis how many open date, rank total number in desc order."
        ]
    },
    "3210@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date ASC"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "line",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "1830",
                    "1831",
                    "1832",
                    "1833",
                    "1834",
                    "1835",
                    "1836",
                    "1837",
                    "1838",
                    "1839",
                    "1840",
                    "1841",
                    "1842",
                    "1843",
                    "1844"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    1,
                    1,
                    0,
                    1,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY TIME"
        },
        "nl_queries": [
            "Give me the trend about the number of church opening in each year, and display X-axis from low to high order.",
            "Show me a line chart of how the number of open date change over the open date, and I want to display by the x-axis from low to high.",
            "A line chart shows how many churches open each year?, I want to sort by the X-axis from low to high."
        ]
    },
    "3210@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date DESC"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "line",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "1844",
                    "1843",
                    "1842",
                    "1841",
                    "1840",
                    "1839",
                    "1838",
                    "1837",
                    "1836",
                    "1835",
                    "1834",
                    "1833",
                    "1832",
                    "1831",
                    "1830"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    1,
                    0,
                    1,
                    1,
                    0,
                    1,
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY TIME"
        },
        "nl_queries": [
            "Show me a line chart of how the number of open date change over the open date, list by the Open_Date in desc please.",
            "Give me the trend about the number of church opening in each year, could you show by the X-axis in desc?",
            "A line chart shows how many churches open each year?, and list x axis from high to low order."
        ]
    },
    "3214@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Australia",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "A bar chart about the number of countries for all people whose age is smaller than the average, list in ascending by the x-axis.",
            "Show the number of countries for all people whose age is smaller than the average, display by the x-axis in ascending."
        ]
    },
    "3214@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "United States",
                    "Australia"
                ]
            ],
            "y_data": [
                [
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "A bar chart about the number of countries for all people whose age is smaller than the average, and could you display in desc by the X-axis?",
            "Show the number of countries for all people whose age is smaller than the average, could you rank in descending by the names?"
        ]
    },
    "3214@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY COUNT(Country) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY COUNT(Country) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Australia",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "A bar chart about the number of countries for all people whose age is smaller than the average, display Y in ascending order.",
            "Show the number of countries for all people whose age is smaller than the average, order from low to high by the total number."
        ]
    },
    "3214@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY COUNT(Country) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY COUNT(Country) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "United States",
                    "Australia"
                ]
            ],
            "y_data": [
                [
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Show the number of countries for all people whose age is smaller than the average, display Y-axis in desc order.",
            "A bar chart about the number of countries for all people whose age is smaller than the average, and display by the total number in descending."
        ]
    },
    "3216@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Australia",
                    "Canada",
                    "Northern Ireland",
                    "Sweden",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all countries and the number of people from each country with a bar chart, rank bar in asc order.",
            "Give me a bar chart for the total number of each country, I want to list by the x axis in ascending.",
            "Show all countries and the number of people from each country, rank bar in asc order."
        ]
    },
    "3216@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "United States",
                    "Sweden",
                    "Northern Ireland",
                    "Canada",
                    "Australia"
                ]
            ],
            "y_data": [
                [
                    8,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all countries and the number of people from each country, and display bar in descending order.",
            "Show all countries and the number of people from each country with a bar chart, I want to sort Country from high to low order.",
            "Give me a bar chart for the total number of each country, rank by the X-axis from high to low."
        ]
    },
    "3216@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Australia",
                    "Canada",
                    "Northern Ireland",
                    "Sweden",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a bar chart for the total number of each country, could you order from low to high by the the total number ?",
            "Show all countries and the number of people from each country, I want to display in asc by the y axis please.",
            "Show all countries and the number of people from each country with a bar chart, order y axis from low to high order."
        ]
    },
    "3216@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "United States",
                    "Sweden",
                    "Northern Ireland",
                    "Canada",
                    "Australia"
                ]
            ],
            "y_data": [
                [
                    8,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all countries and the number of people from each country with a bar chart, and show Y in descending order please.",
            "Show all countries and the number of people from each country, order Y in descending order please.",
            "Give me a bar chart for the total number of each country, and display from high to low by the Y-axis."
        ]
    },
    "3217@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) ASC",
                "binning": "BIN Open_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) ASC BIN Open_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "Thur",
                    "Mon",
                    "Tue",
                    "Wed",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY WEEKDAY"
        },
        "nl_queries": [
            "Visualize a bar chart that bin the open date into a day of the week interval and count them, and list in ascending by the total number please.",
            "Draw a bar chart of open date versus the number of open date, show in ascending by the y axis.",
            "Please compare the number of the church by open date (bin into the weekday) using a bar chart, rank y axis in asc order please."
        ]
    },
    "3217@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) DESC",
                "binning": "BIN Open_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) DESC BIN Open_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "Sun",
                    "Sat",
                    "Fri",
                    "Wed",
                    "Tue",
                    "Mon",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY WEEKDAY"
        },
        "nl_queries": [
            "Visualize a bar chart that bin the open date into a day of the week interval and count them, and sort from high to low by the Y-axis.",
            "Please compare the number of the church by open date (bin into the weekday) using a bar chart, and order total number from high to low order.",
            "Draw a bar chart of open date versus the number of open date, and order from high to low by the total number."
        ]
    },
    "3218@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date ASC",
                "binning": "BIN Open_Date BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date ASC BIN Open_Date BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "line",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "1830",
                    "1831",
                    "1832",
                    "1833",
                    "1834",
                    "1835",
                    "1836",
                    "1837",
                    "1838",
                    "1839",
                    "1840",
                    "1841",
                    "1842",
                    "1843",
                    "1844"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    1,
                    1,
                    0,
                    1,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY YEAR"
        },
        "nl_queries": [
            "Visualize a line chart that bins the open date into the Year interval and counts them, I want to rank in ascending by the x-axis please.",
            "Please show the trend of the number of the church by open date (bin into the year) using a line chart, and I want to rank x axis from low to high order.",
            "I want to see trend of the number of open date by open date, and list by the X-axis in asc."
        ]
    },
    "3218@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date DESC",
                "binning": "BIN Open_Date BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date DESC BIN Open_Date BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "line",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "1844",
                    "1843",
                    "1842",
                    "1841",
                    "1840",
                    "1839",
                    "1838",
                    "1837",
                    "1836",
                    "1835",
                    "1834",
                    "1833",
                    "1832",
                    "1831",
                    "1830"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    1,
                    0,
                    1,
                    1,
                    0,
                    1,
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY YEAR"
        },
        "nl_queries": [
            "Visualize a line chart that bins the open date into the Year interval and counts them, and could you sort X-axis in descending order?",
            "Please show the trend of the number of the church by open date (bin into the year) using a line chart, and display by the x-axis in descending please.",
            "I want to see trend of the number of open date by open date, display by the Open_Date from high to low."
        ]
    },
    "2360@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "count(*)",
            "x_data": [
                [
                    "",
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a bar chart on how many movie reviews does each director get?, and order in asc by the bars.",
            "How many movie reviews does each director get Show bar chart, and order x axis from low to high order.",
            "Show me a bar chart for how many movie reviews does each director get?, and order bars in ascending order.",
            "For each director, how many reviews have they received Visualize by bar chart, and order in asc by the names."
        ]
    },
    "2360@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Victor Fleming",
                    "Steven Spielberg",
                    "Robert Wise",
                    "James Cameron",
                    ""
                ]
            ],
            "y_data": [
                [
                    3,
                    5,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me a bar chart for how many movie reviews does each director get?, show in desc by the bar.",
            "For each director, how many reviews have they received Visualize by bar chart, order bar in desc order.",
            "How many movie reviews does each director get Show bar chart, and could you sort in desc by the X-axis?",
            "Return a bar chart on how many movie reviews does each director get?, sort director in descending order."
        ]
    },
    "2360@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "count(*)",
            "x_data": [
                [
                    "",
                    "James Cameron",
                    "Robert Wise",
                    "Victor Fleming",
                    "Steven Spielberg"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    3,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me a bar chart for how many movie reviews does each director get?, and display the total number in ascending order.",
            "How many movie reviews does each director get Show bar chart, and rank y axis in ascending order.",
            "For each director, how many reviews have they received Visualize by bar chart, and display the total number in ascending order.",
            "Return a bar chart on how many movie reviews does each director get?, display the total number in ascending order."
        ]
    },
    "2360@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Steven Spielberg",
                    "Victor Fleming",
                    "Robert Wise",
                    "James Cameron",
                    ""
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each director, how many reviews have they received Visualize by bar chart, and could you rank from high to low by the Y-axis?",
            "Show me a bar chart for how many movie reviews does each director get?, and I want to display by the y axis in descending please.",
            "How many movie reviews does each director get Show bar chart, sort y-axis in desc order please.",
            "Return a bar chart on how many movie reviews does each director get?, order Y-axis from high to low order."
        ]
    },
    "2368@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(stars)",
            "x_data": [
                [
                    "Avatar",
                    "E.T.",
                    "Gone with the Wind",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    8,
                    5,
                    5,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Please tell me the total star ratings of each movie title using a bar chart, and order bar in ascending order.",
            "Visualize the title and and the total star rating of the movie using a bar chart, order by the X from low to high."
        ]
    },
    "2368@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(stars)",
            "x_data": [
                [
                    "The Sound of Music",
                    "Snow White",
                    "Gone with the Wind",
                    "E.T.",
                    "Avatar"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    5,
                    5,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Please tell me the total star ratings of each movie title using a bar chart, I want to show in descending by the X.",
            "Visualize the title and and the total star rating of the movie using a bar chart, could you display bars in descending order?"
        ]
    },
    "2368@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY SUM(stars) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY SUM(stars) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(stars)",
            "x_data": [
                [
                    "The Sound of Music",
                    "Snow White",
                    "E.T.",
                    "Gone with the Wind",
                    "Avatar"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    5,
                    5,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Visualize the title and and the total star rating of the movie using a bar chart, show from low to high by the total number.",
            "Please tell me the total star ratings of each movie title using a bar chart, and sort Y in asc order please."
        ]
    },
    "2368@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY SUM(stars) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY SUM(stars) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(stars)",
            "x_data": [
                [
                    "Avatar",
                    "Gone with the Wind",
                    "E.T.",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    8,
                    5,
                    5,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Visualize the title and and the total star rating of the movie using a bar chart, and could you order in desc by the y axis please?",
            "Please tell me the total star ratings of each movie title using a bar chart, and list from high to low by the y-axis."
        ]
    },
    "2369@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(stars)",
            "x_data": [
                [
                    "Avatar",
                    "E.T.",
                    "Gone with the Wind",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    4,
                    2.5,
                    2.5,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "What are the average star ratings of each movie title? Could you return me a bar chart?, and could you list by the title in asc please?",
            "Please tell me the average star ratings of each movie title using a bar chart, list x-axis from low to high order.",
            "Visualize the title and and the average star rating of the movie using a bar chart, sort bars in asc order."
        ]
    },
    "2369@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(stars)",
            "x_data": [
                [
                    "The Sound of Music",
                    "Snow White",
                    "Gone with the Wind",
                    "E.T.",
                    "Avatar"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    2.5,
                    2.5,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Please tell me the average star ratings of each movie title using a bar chart, and could you show by the bar in desc?",
            "Visualize the title and and the average star rating of the movie using a bar chart, list bars in desc order please.",
            "What are the average star ratings of each movie title? Could you return me a bar chart?, show names from high to low order please."
        ]
    },
    "2369@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY AVG(stars) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY AVG(stars) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(stars)",
            "x_data": [
                [
                    "The Sound of Music",
                    "E.T.",
                    "Gone with the Wind",
                    "Avatar",
                    "Snow White"
                ]
            ],
            "y_data": [
                [
                    2,
                    2.5,
                    2.5,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "What are the average star ratings of each movie title? Could you return me a bar chart?, and I want to show total number in asc order.",
            "Please tell me the average star ratings of each movie title using a bar chart, and display from low to high by the mean stars.",
            "Visualize the title and and the average star rating of the movie using a bar chart, display from low to high by the y-axis."
        ]
    },
    "2369@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY AVG(stars) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY AVG(stars) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(stars)",
            "x_data": [
                [
                    "Snow White",
                    "Avatar",
                    "Gone with the Wind",
                    "E.T.",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    2.5,
                    2.5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "What are the average star ratings of each movie title? Could you return me a bar chart?, rank in desc by the Y please.",
            "Please tell me the average star ratings of each movie title using a bar chart, rank in desc by the Y please.",
            "Visualize the title and and the average star rating of the movie using a bar chart, and could you display y axis in descending order?"
        ]
    },
    "2370@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(min(T1.stars))",
            "x_data": [
                [
                    "Avatar",
                    "E.T.",
                    "Gone with the Wind",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    8,
                    5,
                    5,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Visualize the total smallest rating of different movie title using a bar chart, and sort by the X in asc please.",
            "Visualize the title and their total smallest ratings of the movie using a bar chart, sort from low to high by the bars.",
            "Please return me a bar chart show what are the total smallest rating of different movie title?, and list in ascending by the X."
        ]
    },
    "2370@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(min(T1.stars))",
            "x_data": [
                [
                    "The Sound of Music",
                    "Snow White",
                    "Gone with the Wind",
                    "E.T.",
                    "Avatar"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    5,
                    5,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Please return me a bar chart show what are the total smallest rating of different movie title?, order from high to low by the names.",
            "Visualize the total smallest rating of different movie title using a bar chart, rank by the x-axis in desc.",
            "Visualize the title and their total smallest ratings of the movie using a bar chart, show bar in desc order."
        ]
    },
    "2370@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY SUM(min(T1.stars)) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY SUM(min(T1.stars)) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(min(T1.stars))",
            "x_data": [
                [
                    "The Sound of Music",
                    "Snow White",
                    "E.T.",
                    "Gone with the Wind",
                    "Avatar"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    5,
                    5,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Please return me a bar chart show what are the total smallest rating of different movie title?, and I want to sort total number from low to high order.",
            "Visualize the title and their total smallest ratings of the movie using a bar chart, order y axis from low to high order.",
            "Visualize the total smallest rating of different movie title using a bar chart, rank by the total number in ascending please."
        ]
    },
    "2370@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY SUM(min(T1.stars)) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY SUM(min(T1.stars)) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "SUM(min(T1.stars))",
            "x_data": [
                [
                    "Avatar",
                    "Gone with the Wind",
                    "E.T.",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    8,
                    5,
                    5,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Please return me a bar chart show what are the total smallest rating of different movie title?, show in descending by the Y-axis please.",
            "Visualize the title and their total smallest ratings of the movie using a bar chart, and rank from high to low by the y-axis please.",
            "Visualize the total smallest rating of different movie title using a bar chart, and could you order from high to low by the y axis?"
        ]
    },
    "2371@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(min(T1.stars))",
            "x_data": [
                [
                    "Avatar",
                    "E.T.",
                    "Gone with the Wind",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    4,
                    2.5,
                    2.5,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Visualize the title and their average smallest ratings of the movie using a bar chart, rank by the X in ascending.",
            "Visualize the average smallest rating of different movie title using a bar chart, show names from low to high order.",
            "Please return me a bar chart show what are the average smallest rating of different movie title?, I want to list names in ascending order."
        ]
    },
    "2371@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(min(T1.stars))",
            "x_data": [
                [
                    "The Sound of Music",
                    "Snow White",
                    "Gone with the Wind",
                    "E.T.",
                    "Avatar"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    2.5,
                    2.5,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Visualize the title and their average smallest ratings of the movie using a bar chart, sort by the title in descending please.",
            "Please return me a bar chart show what are the average smallest rating of different movie title?, and sort by the x axis in descending.",
            "Visualize the average smallest rating of different movie title using a bar chart, and could you rank by the x axis from high to low please?"
        ]
    },
    "2371@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY AVG(min(T1.stars)) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY AVG(min(T1.stars)) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(min(T1.stars))",
            "x_data": [
                [
                    "The Sound of Music",
                    "E.T.",
                    "Gone with the Wind",
                    "Avatar",
                    "Snow White"
                ]
            ],
            "y_data": [
                [
                    2,
                    2.5,
                    2.5,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Please return me a bar chart show what are the average smallest rating of different movie title?, show from low to high by the stars).",
            "Visualize the title and their average smallest ratings of the movie using a bar chart, and show by the y-axis from low to high.",
            "Visualize the average smallest rating of different movie title using a bar chart, and I want to sort by the stars) in ascending please."
        ]
    },
    "2371@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY AVG(min(T1.stars)) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY AVG(min(T1.stars)) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(min(T1.stars))",
            "x_data": [
                [
                    "Snow White",
                    "Avatar",
                    "Gone with the Wind",
                    "E.T.",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    2.5,
                    2.5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "Visualize the average smallest rating of different movie title using a bar chart, and order by the total number in desc.",
            "Visualize the title and their average smallest ratings of the movie using a bar chart, and sort in descending by the stars).",
            "Please return me a bar chart show what are the average smallest rating of different movie title?, sort in descending by the stars)."
        ]
    },
    "2381@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY title ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "stars",
            "x_data": [
                [
                    "Avatar",
                    "Gone with the Wind",
                    "Raiders of the Lost Ark",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the title and score of the movie with a bar chart, I want to display in asc by the x-axis.",
            "Draw a bar chart to compare the stars of each movie by title, and rank by the names in asc."
        ]
    },
    "2381@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY title DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "stars",
            "x_data": [
                [
                    "The Sound of Music",
                    "Snow White",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind",
                    "Avatar"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the title and score of the movie with a bar chart, show X-axis in descending order.",
            "Draw a bar chart to compare the stars of each movie by title, and show X-axis in descending order."
        ]
    },
    "2381@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "stars",
            "x_data": [
                [
                    "Gone with the Wind",
                    "Raiders of the Lost Ark",
                    "The Sound of Music",
                    "Avatar",
                    "Snow White"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the title and score of the movie with a bar chart, and rank in ascending by the Y-axis.",
            "Draw a bar chart to compare the stars of each movie by title, could you sort Y from low to high order?"
        ]
    },
    "2381@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "stars",
            "x_data": [
                [
                    "Snow White",
                    "Avatar",
                    "The Sound of Music",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart to compare the stars of each movie by title, and sort in descending by the Y-axis.",
            "Show the title and score of the movie with a bar chart, and I want to show Y-axis in descending order."
        ]
    },
    "2383@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "Avatar",
                    "Gone with the Wind",
                    "Raiders of the Lost Ark",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Compare the lowest rating among all movies by each title using a histogram, list from low to high by the title.",
            "Show the title and the lowest rating among all movies in a bar chart, list in ascending by the bars."
        ]
    },
    "2383@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "The Sound of Music",
                    "Snow White",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind",
                    "Avatar"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the title and the lowest rating among all movies in a bar chart, order names from high to low order please.",
            "Compare the lowest rating among all movies by each title using a histogram, could you rank from high to low by the X-axis?"
        ]
    },
    "2383@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY min(T1.stars) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY min(T1.stars) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "Gone with the Wind",
                    "Raiders of the Lost Ark",
                    "The Sound of Music",
                    "Avatar",
                    "Snow White"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the title and the lowest rating among all movies in a bar chart, I want to rank in ascending by the Y.",
            "Compare the lowest rating among all movies by each title using a histogram, and I want to show Y-axis from low to high order."
        ]
    },
    "2383@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY min(T1.stars) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY min(T1.stars) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "Snow White",
                    "Avatar",
                    "The Sound of Music",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the title and the lowest rating among all movies in a bar chart, order in desc by the Y-axis please.",
            "Compare the lowest rating among all movies by each title using a histogram, and show from high to low by the stars."
        ]
    },
    "2385@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY director ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY director ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "stars",
            "x_data": [
                [
                    "",
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the stars of each director by a bar chart, and display from low to high by the X.",
            "Please give me a bar chart to compare the stars by directors, sort by the x axis in asc."
        ]
    },
    "2385@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY director DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY director DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "stars",
            "x_data": [
                [
                    "Victor Fleming",
                    "Steven Spielberg",
                    "Robert Wise",
                    "James Cameron",
                    ""
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Please give me a bar chart to compare the stars by directors, and list by the X-axis from high to low.",
            "Show the stars of each director by a bar chart, and could you order from high to low by the x axis?"
        ]
    },
    "2385@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "stars",
            "x_data": [
                [
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming",
                    "James Cameron",
                    ""
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Please give me a bar chart to compare the stars by directors, I want to display by the Y-axis from low to high.",
            "Show the stars of each director by a bar chart, and could you order stars in asc order?"
        ]
    },
    "2385@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "stars",
            "x_data": [
                [
                    "",
                    "James Cameron",
                    "Victor Fleming",
                    "Steven Spielberg",
                    "Robert Wise"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the stars of each director by a bar chart, show by the Y in desc.",
            "Please give me a bar chart to compare the stars by directors, list by the y-axis in desc."
        ]
    },
    "2387@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY director ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY director ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "",
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Compare the lowest rating among all movies by each director using a bar chart, list by the director from low to high.",
            "Show the director and their lowest rating among all movies in a bar chart, list by the director from low to high.",
            "Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies, sort in ascending by the x axis."
        ]
    },
    "2387@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY director DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY director DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "Victor Fleming",
                    "Steven Spielberg",
                    "Robert Wise",
                    "James Cameron",
                    ""
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Compare the lowest rating among all movies by each director using a bar chart, display x axis from high to low order please.",
            "Show the director and their lowest rating among all movies in a bar chart, display by the x axis from high to low please.",
            "Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies, and order x-axis from high to low order."
        ]
    },
    "2387@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY min(T1.stars) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY min(T1.stars) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming",
                    "James Cameron",
                    ""
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies, and I want to list in ascending by the Y-axis.",
            "Show the director and their lowest rating among all movies in a bar chart, display by the stars in asc.",
            "Compare the lowest rating among all movies by each director using a bar chart, and could you list Y-axis in asc order?"
        ]
    },
    "2387@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY min(T1.stars) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY min(T1.stars) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "",
                    "James Cameron",
                    "Victor Fleming",
                    "Steven Spielberg",
                    "Robert Wise"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies, display Y in desc order.",
            "Show the director and their lowest rating among all movies in a bar chart, and sort total number from high to low order.",
            "Compare the lowest rating among all movies by each director using a bar chart, and display y axis from high to low order."
        ]
    },
    "2392@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY title ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "stars",
            "x_data": [
                [
                    "Avatar",
                    "Gone with the Wind",
                    "Raiders of the Lost Ark",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Ignore movies whose director is NULL For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a bar chart, and I want to display X from low to high order please."
        ]
    },
    "2392@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY title DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "stars",
            "x_data": [
                [
                    "The Sound of Music",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind",
                    "Avatar"
                ]
            ],
            "y_data": [
                [
                    3,
                    4,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Ignore movies whose director is NULL For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a bar chart, show X in descending order please."
        ]
    },
    "2392@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY stars ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY stars ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "stars",
            "x_data": [
                [
                    "The Sound of Music",
                    "Gone with the Wind",
                    "Raiders of the Lost Ark",
                    "Avatar"
                ]
            ],
            "y_data": [
                [
                    3,
                    4,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Ignore movies whose director is NULL For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a bar chart, order y-axis in asc order please."
        ]
    },
    "2392@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY stars DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY stars DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "stars",
            "x_data": [
                [
                    "Avatar",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Ignore movies whose director is NULL For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a bar chart, sort y-axis in desc order."
        ]
    },
    "2394@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title ORDER BY title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title ORDER BY title ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    "Avatar",
                    "Gone with the Wind",
                    "Raiders of the Lost Ark",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Ignore movies whose director is NULL For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a bar chart, rank x-axis in asc order."
        ]
    },
    "2394@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title ORDER BY title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title ORDER BY title DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    "The Sound of Music",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind",
                    "Avatar"
                ]
            ],
            "y_data": [
                [
                    3,
                    4,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Ignore movies whose director is NULL For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a bar chart, order names in desc order please."
        ]
    },
    "2394@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title ORDER BY max(T1.stars) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title ORDER BY max(T1.stars) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    "The Sound of Music",
                    "Gone with the Wind",
                    "Raiders of the Lost Ark",
                    "Avatar"
                ]
            ],
            "y_data": [
                [
                    3,
                    4,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Ignore movies whose director is NULL For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a bar chart, order from low to high by the y-axis."
        ]
    },
    "2394@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title ORDER BY max(T1.stars) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title ORDER BY max(T1.stars) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    "Avatar",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Ignore movies whose director is NULL For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a bar chart, and show stars in descending order."
        ]
    },
    "2396@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY director ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY director ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "stars",
            "x_data": [
                [
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each director, return the director's name together with the value of that rating and ignore movies whose director is NULL Could you plot the result with a bar chart?, and sort in ascending by the bars."
        ]
    },
    "2396@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY director DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY director DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "stars",
            "x_data": [
                [
                    "Victor Fleming",
                    "Steven Spielberg",
                    "Robert Wise",
                    "James Cameron"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    3,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each director, return the director's name together with the value of that rating and ignore movies whose director is NULL Could you plot the result with a bar chart?, I want to list by the director in desc."
        ]
    },
    "2396@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY stars ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY stars ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "stars",
            "x_data": [
                [
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming",
                    "James Cameron"
                ]
            ],
            "y_data": [
                [
                    3,
                    4,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each director, return the director's name together with the value of that rating and ignore movies whose director is NULL Could you plot the result with a bar chart?, and display by the Y in asc."
        ]
    },
    "2396@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY stars DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" ORDER BY stars DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "stars",
            "x_data": [
                [
                    "James Cameron",
                    "Victor Fleming",
                    "Steven Spielberg",
                    "Robert Wise"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each director, return the director's name together with the value of that rating and ignore movies whose director is NULL Could you plot the result with a bar chart?, rank by the total number in descending."
        ]
    },
    "2398@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director ORDER BY director ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director ORDER BY director ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each director, return the director's name together with the highest rating among all of their movies and ignore movies whose director is NULL Could you plot the result with a bar chart?, and I want to list x-axis in ascending order."
        ]
    },
    "2398@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director ORDER BY director DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director ORDER BY director DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    "Victor Fleming",
                    "Steven Spielberg",
                    "Robert Wise",
                    "James Cameron"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    3,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each director, return the director's name together with the highest rating among all of their movies and ignore movies whose director is NULL Could you plot the result with a bar chart?, list by the x-axis in descending please."
        ]
    },
    "2398@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director ORDER BY max(T1.stars) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director ORDER BY max(T1.stars) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming",
                    "James Cameron"
                ]
            ],
            "y_data": [
                [
                    3,
                    4,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each director, return the director's name together with the highest rating among all of their movies and ignore movies whose director is NULL Could you plot the result with a bar chart?, and could you display by the Y in ascending?"
        ]
    },
    "2398@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director ORDER BY max(T1.stars) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director ORDER BY max(T1.stars) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    "James Cameron",
                    "Victor Fleming",
                    "Steven Spielberg",
                    "Robert Wise"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each director, return the director's name together with the highest rating among all of their movies and ignore movies whose director is NULL Could you plot the result with a bar chart?, order by the y axis from high to low."
        ]
    },
    "2402@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "avg(T1.stars)",
            "x_data": [
                [
                    "Ashley White",
                    "Brittany Harris",
                    "Chris Jackson",
                    "Daniel Lewis",
                    "Elizabeth Thomas",
                    "James Cameron",
                    "Mike Anderson",
                    "Sarah Martinez"
                ]
            ],
            "y_data": [
                [
                    3,
                    2.6666666666666665,
                    3,
                    4,
                    4,
                    5,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?, could you display in ascending by the X-axis?",
            "What is the average rating star for each reviewer, could you display in ascending by the X-axis?",
            "A bar chart about what is the average rating star for each reviewer?, display in ascending by the x axis please.",
            "What is the average number of stars that each reviewer awards for a movie Show bar chart, and list by the bar from low to high.",
            "Draw a bar chart for what is the average rating star for each reviewer?, and I want to order from low to high by the X.",
            "Return a histogram on what is the average number of stars that each reviewer awards for a movie?, and display in ascending by the x axis please."
        ]
    },
    "2402@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "avg(T1.stars)",
            "x_data": [
                [
                    "Sarah Martinez",
                    "Mike Anderson",
                    "James Cameron",
                    "Elizabeth Thomas",
                    "Daniel Lewis",
                    "Chris Jackson",
                    "Brittany Harris",
                    "Ashley White"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    5,
                    4,
                    4,
                    3,
                    2.6666666666666665,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a histogram on what is the average number of stars that each reviewer awards for a movie?, and I want to display x-axis in desc order please.",
            "Draw a bar chart for what is the average rating star for each reviewer?, show from high to low by the bar please.",
            "A bar chart about what is the average rating star for each reviewer?, could you show x axis from high to low order?",
            "What is the average rating star for each reviewer, and rank by the bar in descending please.",
            "What is the average number of stars that each reviewer awards for a movie Show bar chart, could you order by the name from high to low?",
            "Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?, and could you order by the name from high to low?"
        ]
    },
    "2402@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "avg(T1.stars)",
            "x_data": [
                [
                    "Brittany Harris",
                    "Ashley White",
                    "Chris Jackson",
                    "Mike Anderson",
                    "Sarah Martinez",
                    "Daniel Lewis",
                    "Elizabeth Thomas",
                    "James Cameron"
                ]
            ],
            "y_data": [
                [
                    2.6666666666666665,
                    3,
                    3,
                    3,
                    3,
                    4,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?, rank in ascending by the y-axis.",
            "What is the average rating star for each reviewer, and order Y-axis from low to high order please.",
            "What is the average number of stars that each reviewer awards for a movie Show bar chart, and rank in ascending by the y-axis.",
            "Return a histogram on what is the average number of stars that each reviewer awards for a movie?, and display by the y axis in ascending.",
            "Draw a bar chart for what is the average rating star for each reviewer?, order by the stars in ascending.",
            "A bar chart about what is the average rating star for each reviewer?, and display in ascending by the total number."
        ]
    },
    "2402@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "avg(T1.stars)",
            "x_data": [
                [
                    "James Cameron",
                    "Elizabeth Thomas",
                    "Daniel Lewis",
                    "Sarah Martinez",
                    "Mike Anderson",
                    "Chris Jackson",
                    "Ashley White",
                    "Brittany Harris"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    4,
                    3,
                    3,
                    3,
                    3,
                    2.6666666666666665
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?, and show in descending by the Y-axis.",
            "Return a histogram on what is the average number of stars that each reviewer awards for a movie?, and rank Y in descending order.",
            "Draw a bar chart for what is the average rating star for each reviewer?, sort y axis in desc order please.",
            "A bar chart about what is the average rating star for each reviewer?, I want to show from high to low by the y axis.",
            "What is the average rating star for each reviewer, display in descending by the total number.",
            "What is the average number of stars that each reviewer awards for a movie Show bar chart, and rank Y in descending order."
        ]
    },
    "2405@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "Avatar",
                    "E.T.",
                    "Gone with the Wind",
                    "Raiders of the Lost Ark",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "A bar chart for what are the number of the titles of all movies that have between 3 and 5 stars?, and list X-axis in asc order please.",
            "A bar chart for what are the number of the titles of all movies that have rating star is between 3 and 5?, and display in asc by the X-axis.",
            "What are the number of the titles of all movies that have rating star is between 3 and 5?, list by the names from low to high.",
            "What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart, and display X-axis in ascending order.",
            "What are the number of the titles of all movies that have between 3 and 5 stars?, display X-axis in ascending order.",
            "What are the titles of all movies that have rating star is between 3 and 5, and count them by a bar chart, display in ascending by the title."
        ]
    },
    "2405@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "The Sound of Music",
                    "Snow White",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind",
                    "E.T.",
                    "Avatar"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "What are the number of the titles of all movies that have between 3 and 5 stars?, and show names in descending order.",
            "A bar chart for what are the number of the titles of all movies that have between 3 and 5 stars?, I want to show by the bars from high to low.",
            "What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart, and order bars in descending order.",
            "A bar chart for what are the number of the titles of all movies that have rating star is between 3 and 5?, show names in descending order.",
            "What are the titles of all movies that have rating star is between 3 and 5, and count them by a bar chart, and rank by the x-axis in descending.",
            "What are the number of the titles of all movies that have rating star is between 3 and 5?, I want to show by the bars from high to low."
        ]
    },
    "2405@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "E.T.",
                    "The Sound of Music",
                    "Avatar",
                    "Gone with the Wind",
                    "Raiders of the Lost Ark",
                    "Snow White"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "What are the number of the titles of all movies that have between 3 and 5 stars?, rank Y-axis in asc order.",
            "What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart, rank in ascending by the y-axis.",
            "A bar chart for what are the number of the titles of all movies that have rating star is between 3 and 5?, and could you rank y-axis in ascending order?",
            "What are the number of the titles of all movies that have rating star is between 3 and 5?, could you rank y-axis in ascending order?",
            "A bar chart for what are the number of the titles of all movies that have between 3 and 5 stars?, and sort from low to high by the the number of title.",
            "What are the titles of all movies that have rating star is between 3 and 5, and count them by a bar chart, and I want to show by the y axis in asc."
        ]
    },
    "2405@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "Snow White",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind",
                    "Avatar",
                    "The Sound of Music",
                    "E.T."
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title"
        },
        "nl_queries": [
            "What are the number of the titles of all movies that have rating star is between 3 and 5?, list by the y axis in desc.",
            "What are the titles of all movies that have rating star is between 3 and 5, and count them by a bar chart, and could you display by the y axis in descending?",
            "A bar chart for what are the number of the titles of all movies that have between 3 and 5 stars?, and list by the y axis in desc.",
            "What are the number of the titles of all movies that have between 3 and 5 stars?, and could you sort the number of title from high to low order?",
            "What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart, and could you display by the y axis in descending?",
            "A bar chart for what are the number of the titles of all movies that have rating star is between 3 and 5?, list by the y axis in desc."
        ]
    },
    "2408@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year ASC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year ASC BIN year BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "1981~1983",
                    "1984~1986",
                    "1987~1989",
                    "1990~1992",
                    "1993~1995",
                    "1996~1998",
                    "1999~2001",
                    "2002~2004",
                    "2005~2007",
                    "2008~2009"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    2
                ],
                [
                    3,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    2
                ],
                [
                    4,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    2
                ],
                [
                    4,
                    0,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0,
                    0,
                    2
                ]
            ],
            "classify": [
                "Avatar",
                "E.T.",
                "Raiders of the Lost Ark",
                "Titanic"
            ],
            "describe": "GROUP BY title, BIN year BY YEAR"
        },
        "nl_queries": [
            "For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title The result can be drawn as a trend line, and show x-axis in ascending order.",
            "For each director who directed more than one movie, for each movie title, bin their dates of release into Year interval and count the total number in each bucket using a line chart, and list by the X-axis in asc.",
            "For each director who directed more than one movie, for each movie title, bin their dates of release into Year interval and count the total number in each bucket using a line chart, and show x-axis in ascending order.",
            "For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title The result can be drawn as a trend line, and display in ascending by the x-axis."
        ]
    },
    "2408@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year DESC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year DESC BIN year BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2008~2009",
                    "2005~2007",
                    "2002~2004",
                    "1999~2001",
                    "1996~1998",
                    "1993~1995",
                    "1990~1992",
                    "1987~1989",
                    "1984~1986",
                    "1981~1983"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    2
                ],
                [
                    2,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    3
                ],
                [
                    2,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    4
                ],
                [
                    2,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0,
                    0,
                    0,
                    4
                ]
            ],
            "classify": [
                "Avatar",
                "E.T.",
                "Raiders of the Lost Ark",
                "Titanic"
            ],
            "describe": "GROUP BY title, BIN year BY YEAR"
        },
        "nl_queries": [
            "For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title The result can be drawn as a trend line, show X-axis in descending order.",
            "For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title The result can be drawn as a trend line, display by the x-axis from high to low please.",
            "For each director who directed more than one movie, for each movie title, bin their dates of release into Year interval and count the total number in each bucket using a line chart, and display by the x-axis from high to low please.",
            "For each director who directed more than one movie, for each movie title, bin their dates of release into Year interval and count the total number in each bucket using a line chart, sort year from high to low order."
        ]
    },
    "2409@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title ORDER BY year ASC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title ORDER BY year ASC BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "1981~1983",
                    "1984~1986",
                    "1987~1989",
                    "1990~1992",
                    "1993~1995",
                    "1996~1998",
                    "1999~2001",
                    "2002~2004",
                    "2005~2007",
                    "2008~2009"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "For directors who had more than one movie, bin the dates of release into Year interval and them compute the total number of movies in each year bucket Show me the result using a line chart, and I want to order by the x-axis from low to high.",
            "For directors who had more than one movie, bin the dates of release into Year interval and them compute the total number of movies in each year bucket Show me the result using a line chart, I want to rank year from low to high order."
        ]
    },
    "2409@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title ORDER BY year DESC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title ORDER BY year DESC BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2008~2009",
                    "2005~2007",
                    "2002~2004",
                    "1999~2001",
                    "1996~1998",
                    "1993~1995",
                    "1990~1992",
                    "1987~1989",
                    "1984~1986",
                    "1981~1983"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR"
        },
        "nl_queries": [
            "For directors who had more than one movie, bin the dates of release into Year interval and them compute the total number of movies in each year bucket Show me the result using a line chart, and list x axis from high to low order.",
            "For directors who had more than one movie, bin the dates of release into Year interval and them compute the total number of movies in each year bucket Show me the result using a line chart, and rank by the year from high to low."
        ]
    },
    "769@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY Location_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY Location_Code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location_Code",
            "y_name": "COUNT(Location_Code)",
            "x_data": [
                [
                    "b",
                    "c",
                    "e",
                    "n",
                    "x"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    4,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location_Code"
        },
        "nl_queries": [
            "Show the number of documents for each location code in a bar chart, and could you rank from low to high by the X?",
            "How many documents for different location code? Plot a bar chart to show the proportion, list x-axis in asc order please.",
            "Bar chart x axis location code y axis how many location code, and list x-axis in asc order please."
        ]
    },
    "769@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY Location_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY Location_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location_Code",
            "y_name": "COUNT(Location_Code)",
            "x_data": [
                [
                    "x",
                    "n",
                    "e",
                    "c",
                    "b"
                ]
            ],
            "y_data": [
                [
                    5,
                    1,
                    4,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location_Code"
        },
        "nl_queries": [
            "How many documents for different location code? Plot a bar chart to show the proportion, and sort in desc by the Location_Code please.",
            "Show the number of documents for each location code in a bar chart, I want to order from high to low by the bars.",
            "Bar chart x axis location code y axis how many location code, and I want to order from high to low by the bars."
        ]
    },
    "769@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Location_Code) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Location_Code) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location_Code",
            "y_name": "COUNT(Location_Code)",
            "x_data": [
                [
                    "n",
                    "c",
                    "b",
                    "e",
                    "x"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location_Code"
        },
        "nl_queries": [
            "Bar chart x axis location code y axis how many location code, and show by the Y-axis in ascending.",
            "How many documents for different location code? Plot a bar chart to show the proportion, and order y-axis in ascending order please.",
            "Show the number of documents for each location code in a bar chart, and could you list from low to high by the Y?"
        ]
    },
    "769@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Location_Code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Location_Code) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location_Code",
            "y_name": "COUNT(Location_Code)",
            "x_data": [
                [
                    "x",
                    "e",
                    "b",
                    "c",
                    "n"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location_Code"
        },
        "nl_queries": [
            "Show the number of documents for each location code in a bar chart, and I want to rank by the y axis in desc.",
            "How many documents for different location code? Plot a bar chart to show the proportion, and show Y in desc order.",
            "Bar chart x axis location code y axis how many location code, display by the y-axis from high to low."
        ]
    },
    "770@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From ORDER BY Date_in_Location_From ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From ORDER BY Date_in_Location_From ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "1972-03-31",
                    "1985-05-13",
                    "1986-10-14",
                    "1997-03-10",
                    "2008-06-08",
                    "2009-08-18",
                    "2010-11-26",
                    "2017-01-06"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_in_Location_From"
        },
        "nl_queries": [
            "Show the number of documents in different starting date and group by starting date with a line chart, list by the X from low to high.",
            "How many documents in different starting date? Return a line chart grouping by starting date, and list by the X from low to high.",
            "Plot how many date in location from over date in location from in a line chart, and list by the X from low to high."
        ]
    },
    "770@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From ORDER BY Date_in_Location_From DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From ORDER BY Date_in_Location_From DESC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "2017-01-06",
                    "2010-11-26",
                    "2009-08-18",
                    "2008-06-08",
                    "1997-03-10",
                    "1986-10-14",
                    "1985-05-13",
                    "1972-03-31"
                ]
            ],
            "y_data": [
                [
                    5,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_in_Location_From"
        },
        "nl_queries": [
            "Plot how many date in location from over date in location from in a line chart, display in desc by the x-axis.",
            "How many documents in different starting date? Return a line chart grouping by starting date, list by the X in descending.",
            "Show the number of documents in different starting date and group by starting date with a line chart, list by the X in descending."
        ]
    },
    "771@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From ASC",
                "binning": "BIN Date_in_Location_From BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From ASC BIN Date_in_Location_From BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "1972~1976",
                    "1977~1981",
                    "1982~1986",
                    "1987~1991",
                    "1992~1996",
                    "1997~2001",
                    "2002~2006",
                    "2007~2011",
                    "2012~2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    3,
                    0,
                    3,
                    0,
                    0,
                    1,
                    0,
                    3,
                    0,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN Date_in_Location_From BY YEAR"
        },
        "nl_queries": [
            "Can you draw the trend of how many date in location from over the date in location from?, and list by the x-axis from low to high.",
            "Show the number of documents in different starting date and bin starting date by year interval with a line chart, sort X in asc order please.",
            "How many documents in different starting date? Return a line chart binning starting date by year interval, sort X in asc order please."
        ]
    },
    "771@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From DESC",
                "binning": "BIN Date_in_Location_From BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From DESC BIN Date_in_Location_From BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "2017",
                    "2012~2016",
                    "2007~2011",
                    "2002~2006",
                    "1997~2001",
                    "1992~1996",
                    "1987~1991",
                    "1982~1986",
                    "1977~1981",
                    "1972~1976"
                ]
            ],
            "y_data": [
                [
                    5,
                    0,
                    3,
                    0,
                    1,
                    0,
                    0,
                    3,
                    0,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN Date_in_Location_From BY YEAR"
        },
        "nl_queries": [
            "Show the number of documents in different starting date and bin starting date by year interval with a line chart, and list x axis in descending order.",
            "Can you draw the trend of how many date in location from over the date in location from?, order by the x-axis in descending.",
            "How many documents in different starting date? Return a line chart binning starting date by year interval, order in descending by the Date_in_Location_From please."
        ]
    },
    "772@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) ASC",
                "binning": "BIN Date_in_Location_From BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) ASC BIN Date_in_Location_From BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "Sat",
                    "Thur",
                    "Wed",
                    "Sun",
                    "Mon",
                    "Tue",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    1,
                    2,
                    3,
                    9
                ]
            ],
            "classify": [],
            "describe": "BIN Date_in_Location_From BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of documents in different starting date and bin starting date by weekday interval with a bar chart, list in ascending by the Y-axis.",
            "Bar chart x axis date in location from y axis the number of date in location from, and sort by the y axis in asc.",
            "How many documents in different starting date? Return a bar chart binning starting date by weekday interval, could you display in ascending by the y-axis?"
        ]
    },
    "772@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) DESC",
                "binning": "BIN Date_in_Location_From BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) DESC BIN Date_in_Location_From BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "Fri",
                    "Tue",
                    "Mon",
                    "Sun",
                    "Wed",
                    "Thur",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    9,
                    3,
                    2,
                    1,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_in_Location_From BY WEEKDAY"
        },
        "nl_queries": [
            "Bar chart x axis date in location from y axis the number of date in location from, and order by the total number in desc please.",
            "Show the number of documents in different starting date and bin starting date by weekday interval with a bar chart, and rank y axis in desc order please.",
            "How many documents in different starting date? Return a bar chart binning starting date by weekday interval, I want to sort y-axis in descending order."
        ]
    },
    "773@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To ORDER BY Date_in_Locaton_To ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To ORDER BY Date_in_Locaton_To ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "1976-06-15",
                    "1986-10-14",
                    "1987-11-05",
                    "1995-01-01",
                    "1997-03-10",
                    "2008-06-08",
                    "2009-08-18",
                    "2010-11-26",
                    "2012-07-03",
                    "2017-01-06"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_in_Locaton_To"
        },
        "nl_queries": [
            "Show the number of documents in different ending date and group by ending date with a line chart, and sort in ascending by the x-axis.",
            "How many documents in different ending date? Return a line chart grouping by ending date, and rank from low to high by the Date_in_Locaton_To.",
            "Can you draw the trend of how many date in locaton to over the date in locaton to?, order Date_in_Locaton_To in ascending order please."
        ]
    },
    "773@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To ORDER BY Date_in_Locaton_To DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To ORDER BY Date_in_Locaton_To DESC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "2017-01-06",
                    "2012-07-03",
                    "2010-11-26",
                    "2009-08-18",
                    "2008-06-08",
                    "1997-03-10",
                    "1995-01-01",
                    "1987-11-05",
                    "1986-10-14",
                    "1976-06-15"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_in_Locaton_To"
        },
        "nl_queries": [
            "Show the number of documents in different ending date and group by ending date with a line chart, and display in desc by the X.",
            "Can you draw the trend of how many date in locaton to over the date in locaton to?, and I want to sort x-axis in descending order please.",
            "How many documents in different ending date? Return a line chart grouping by ending date, and display in desc by the X."
        ]
    },
    "774@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To ASC",
                "binning": "BIN Date_in_Locaton_To BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To ASC BIN Date_in_Locaton_To BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "1976~1979",
                    "1980~1983",
                    "1984~1987",
                    "1988~1991",
                    "1992~1995",
                    "1996~1999",
                    "2000~2003",
                    "2004~2007",
                    "2008~2011",
                    "2012~2015",
                    "2016~2017"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    4,
                    0,
                    1,
                    1,
                    0,
                    0,
                    5,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Date_in_Locaton_To BY YEAR"
        },
        "nl_queries": [
            "I want to see trend of the number of date in locaton to by date in locaton to, and list by the x axis in asc.",
            "Show the number of documents in different ending date and bin ending date by year interval with a line chart, and list by the x axis in asc.",
            "How many documents in different ending date? Return a line chart binning ending date by year interval, could you rank by the X-axis from low to high?"
        ]
    },
    "774@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To DESC",
                "binning": "BIN Date_in_Locaton_To BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To DESC BIN Date_in_Locaton_To BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "2016~2017",
                    "2012~2015",
                    "2008~2011",
                    "2004~2007",
                    "2000~2003",
                    "1996~1999",
                    "1992~1995",
                    "1988~1991",
                    "1984~1987",
                    "1980~1983",
                    "1976~1979"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    5,
                    0,
                    0,
                    1,
                    1,
                    0,
                    4,
                    0,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Date_in_Locaton_To BY YEAR"
        },
        "nl_queries": [
            "I want to see trend of the number of date in locaton to by date in locaton to, sort by the x axis in desc.",
            "How many documents in different ending date? Return a line chart binning ending date by year interval, I want to rank X in descending order.",
            "Show the number of documents in different ending date and bin ending date by year interval with a line chart, and I want to display X from high to low order please."
        ]
    },
    "775@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) ASC",
                "binning": "BIN Date_in_Locaton_To BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) ASC BIN Date_in_Locaton_To BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "Sat",
                    "Wed",
                    "Mon",
                    "Sun",
                    "Thur",
                    "Fri",
                    "Tue"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    2,
                    2,
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN Date_in_Locaton_To BY WEEKDAY"
        },
        "nl_queries": [
            "How many documents in different ending date? Return a bar chart binning ending date by weekday, order y-axis from low to high order.",
            "Show the number of documents in different ending date and bin ending date by weekday with a bar chart, and could you display by the y axis from low to high?",
            "Create a bar chart showing the number of date in locaton to across date in locaton to, could you display by the y axis from low to high?"
        ]
    },
    "775@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) DESC",
                "binning": "BIN Date_in_Locaton_To BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) DESC BIN Date_in_Locaton_To BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "Tue",
                    "Fri",
                    "Thur",
                    "Sun",
                    "Mon",
                    "Wed",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    6,
                    4,
                    2,
                    2,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_in_Locaton_To BY WEEKDAY"
        },
        "nl_queries": [
            "Create a bar chart showing the number of date in locaton to across date in locaton to, I want to show the number of date in locaton to from high to low order.",
            "How many documents in different ending date? Return a bar chart binning ending date by weekday, and rank by the total number in descending.",
            "Show the number of documents in different ending date and bin ending date by weekday with a bar chart, and rank by the total number in descending."
        ]
    },
    "776@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From ASC",
                "binning": "BIN Date_in_Location_From BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From ASC BIN Date_in_Location_From BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "1972~1976",
                    "1977~1981",
                    "1982~1986",
                    "1987~1991",
                    "1992~1996",
                    "1997~2001",
                    "2002~2006",
                    "2007~2011",
                    "2012~2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    3,
                    0,
                    5,
                    0,
                    0,
                    1,
                    0,
                    3,
                    0,
                    6
                ],
                [
                    4,
                    0,
                    5,
                    0,
                    0,
                    1,
                    0,
                    3,
                    0,
                    7
                ],
                [
                    5,
                    0,
                    5,
                    0,
                    0,
                    1,
                    0,
                    5,
                    0,
                    8
                ],
                [
                    5,
                    0,
                    5,
                    0,
                    0,
                    1,
                    0,
                    5,
                    0,
                    9
                ],
                [
                    6,
                    0,
                    6,
                    0,
                    0,
                    2,
                    0,
                    6,
                    0,
                    10
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, BIN Date_in_Location_From BY YEAR"
        },
        "nl_queries": [
            "Show the number of documents in different starting date Bin starting date by year interval and group by location code with a group line chart, sort x axis from low to high order.",
            "Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code, display Date_in_Location_From from low to high order please.",
            "Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code, and order X in asc order.",
            "Show the number of documents in different starting date Bin starting date by year interval and group by location code with a group line chart, and display x-axis in asc order."
        ]
    },
    "776@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From DESC",
                "binning": "BIN Date_in_Location_From BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From DESC BIN Date_in_Location_From BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "2017",
                    "2012~2016",
                    "2007~2011",
                    "2002~2006",
                    "1997~2001",
                    "1992~1996",
                    "1987~1991",
                    "1982~1986",
                    "1977~1981",
                    "1972~1976"
                ]
            ],
            "y_data": [
                [
                    6,
                    0,
                    3,
                    0,
                    1,
                    0,
                    0,
                    5,
                    0,
                    3
                ],
                [
                    7,
                    0,
                    3,
                    0,
                    1,
                    0,
                    0,
                    5,
                    0,
                    4
                ],
                [
                    8,
                    0,
                    5,
                    0,
                    1,
                    0,
                    0,
                    5,
                    0,
                    5
                ],
                [
                    9,
                    0,
                    5,
                    0,
                    1,
                    0,
                    0,
                    5,
                    0,
                    5
                ],
                [
                    10,
                    0,
                    6,
                    0,
                    2,
                    0,
                    0,
                    6,
                    0,
                    6
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, BIN Date_in_Location_From BY YEAR"
        },
        "nl_queries": [
            "Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code, and order in descending by the Date_in_Location_From please.",
            "Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code, and could you rank from high to low by the X?",
            "Show the number of documents in different starting date Bin starting date by year interval and group by location code with a group line chart, and order in desc by the X."
        ]
    },
    "777@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) ASC",
                "binning": "BIN Date_in_Location_From BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) ASC BIN Date_in_Location_From BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "Sat",
                    "Thur",
                    "Wed",
                    "Sun",
                    "Mon",
                    "Tue",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    3
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                ],
                [
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, BIN Date_in_Location_From BY WEEKDAY"
        },
        "nl_queries": [
            "Stacked bar chart of how many date in location from for with each Location_Code in each date in location from, could you order by the the number of date in location from in ascending?",
            "Show the number of documents in different starting date Bin starting date by weekday and group by location code with a stacked bar chart, display from low to high by the Y."
        ]
    },
    "777@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) DESC",
                "binning": "BIN Date_in_Location_From BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) DESC BIN Date_in_Location_From BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "Fri",
                    "Tue",
                    "Mon",
                    "Sun",
                    "Wed",
                    "Thur",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    2,
                    1,
                    1,
                    1,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, BIN Date_in_Location_From BY WEEKDAY"
        },
        "nl_queries": [
            "Stacked bar chart of how many date in location from for with each Location_Code in each date in location from, and order by the y axis in descending.",
            "Show the number of documents in different starting date Bin starting date by weekday and group by location code with a stacked bar chart, show by the y-axis in desc."
        ]
    },
    "778@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To ORDER BY Date_in_Locaton_To ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To ORDER BY Date_in_Locaton_To ASC"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "1976-06-15",
                    "1986-10-14",
                    "1987-11-05",
                    "1995-01-01",
                    "1997-03-10",
                    "2008-06-08",
                    "2009-08-18",
                    "2010-11-26",
                    "2012-07-03",
                    "2017-01-06"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    0,
                    1,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0
                ],
                [
                    0,
                    1,
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    1
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    0
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, GROUP BY Date_in_Locaton_To"
        },
        "nl_queries": [
            "Give me a group line chart showing the number of documents in different ending date The x-axis is ending date and group by location code, and list by the Date_in_Locaton_To in ascending.",
            "I want to see trend the number of date in locaton to over date in locaton to by Location_Code, and sort by the Date_in_Locaton_To in asc.",
            "I want to see trend the number of date in locaton to over date in locaton to by Location_Code, and sort X in ascending order.",
            "Give me a group line chart showing the number of documents in different ending date The x-axis is ending date and group by location code, rank by the x axis from low to high please."
        ]
    },
    "778@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To ORDER BY Date_in_Locaton_To DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To ORDER BY Date_in_Locaton_To DESC"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "2017-01-06",
                    "2012-07-03",
                    "2010-11-26",
                    "2009-08-18",
                    "2008-06-08",
                    "1997-03-10",
                    "1995-01-01",
                    "1987-11-05",
                    "1986-10-14",
                    "1976-06-15"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    1,
                    0,
                    1,
                    0
                ],
                [
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0
                ],
                [
                    1,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    1,
                    1,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    1,
                    1,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, GROUP BY Date_in_Locaton_To"
        },
        "nl_queries": [
            "Give me a group line chart showing the number of documents in different ending date The x-axis is ending date and group by location code, I want to order in descending by the X-axis please.",
            "Give me a group line chart showing the number of documents in different ending date The x-axis is ending date and group by location code, show by the x axis in desc.",
            "I want to see trend the number of date in locaton to over date in locaton to by Location_Code, could you sort in descending by the Date_in_Locaton_To please?",
            "I want to see trend the number of date in locaton to over date in locaton to by Location_Code, order by the X-axis in descending."
        ]
    },
    "779@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To ASC",
                "binning": "BIN Date_in_Locaton_To BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To ASC BIN Date_in_Locaton_To BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "1976~1979",
                    "1980~1983",
                    "1984~1987",
                    "1988~1991",
                    "1992~1995",
                    "1996~1999",
                    "2000~2003",
                    "2004~2007",
                    "2008~2011",
                    "2012~2015",
                    "2016~2017"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    5,
                    0,
                    2,
                    1,
                    0,
                    0,
                    6,
                    1,
                    1
                ],
                [
                    2,
                    0,
                    6,
                    0,
                    2,
                    1,
                    0,
                    0,
                    7,
                    1,
                    1
                ],
                [
                    2,
                    0,
                    8,
                    0,
                    2,
                    1,
                    0,
                    0,
                    8,
                    1,
                    2
                ],
                [
                    2,
                    0,
                    8,
                    0,
                    2,
                    2,
                    0,
                    0,
                    8,
                    1,
                    2
                ],
                [
                    4,
                    0,
                    8,
                    0,
                    2,
                    2,
                    0,
                    0,
                    10,
                    2,
                    2
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, BIN Date_in_Locaton_To BY YEAR"
        },
        "nl_queries": [
            "Show the number of documents in different ending date Bin ending date by year interval and group by location code with a group line chart, and rank in asc by the x-axis.",
            "Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code, and I want to show by the X-axis from low to high.",
            "Show the number of documents in different ending date Bin ending date by year interval and group by location code with a group line chart, show by the X from low to high.",
            "Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code, show x axis in asc order please."
        ]
    },
    "779@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To DESC",
                "binning": "BIN Date_in_Locaton_To BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To DESC BIN Date_in_Locaton_To BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "2016~2017",
                    "2012~2015",
                    "2008~2011",
                    "2004~2007",
                    "2000~2003",
                    "1996~1999",
                    "1992~1995",
                    "1988~1991",
                    "1984~1987",
                    "1980~1983",
                    "1976~1979"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    6,
                    0,
                    0,
                    1,
                    2,
                    0,
                    5,
                    0,
                    2
                ],
                [
                    1,
                    1,
                    7,
                    0,
                    0,
                    1,
                    2,
                    0,
                    6,
                    0,
                    2
                ],
                [
                    2,
                    1,
                    8,
                    0,
                    0,
                    1,
                    2,
                    0,
                    8,
                    0,
                    2
                ],
                [
                    2,
                    1,
                    8,
                    0,
                    0,
                    2,
                    2,
                    0,
                    8,
                    0,
                    2
                ],
                [
                    2,
                    2,
                    10,
                    0,
                    0,
                    2,
                    2,
                    0,
                    8,
                    0,
                    4
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, BIN Date_in_Locaton_To BY YEAR"
        },
        "nl_queries": [
            "Show the number of documents in different ending date Bin ending date by year interval and group by location code with a group line chart, display by the X-axis from high to low please.",
            "Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code, display from high to low by the x axis.",
            "Show the number of documents in different ending date Bin ending date by year interval and group by location code with a group line chart, I want to display by the Date_in_Locaton_To from high to low.",
            "Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code, and sort in desc by the Date_in_Locaton_To please."
        ]
    },
    "780@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Locaton_To) ASC",
                "binning": "BIN Date_in_Locaton_To BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Locaton_To) ASC BIN Date_in_Locaton_To BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "Sat",
                    "Wed",
                    "Mon",
                    "Sun",
                    "Thur",
                    "Fri",
                    "Tue"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    1
                ],
                [
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    4
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, BIN Date_in_Locaton_To BY WEEKDAY"
        },
        "nl_queries": [
            "Show the number of documents in different ending date Bin ending date by weekday and group by location code with a stacked bar chart, order by the Y in ascending.",
            "Stacked bar of date in locaton to and the number of date in locaton to colored by Location_Code, order by the Y in ascending."
        ]
    },
    "780@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Locaton_To) DESC",
                "binning": "BIN Date_in_Locaton_To BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Locaton_To) DESC BIN Date_in_Locaton_To BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "Tue",
                    "Fri",
                    "Thur",
                    "Sun",
                    "Mon",
                    "Wed",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    1,
                    1,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    1,
                    1,
                    1,
                    1,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0
                ],
                [
                    4,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, BIN Date_in_Locaton_To BY WEEKDAY"
        },
        "nl_queries": [
            "Stacked bar of date in locaton to and the number of date in locaton to colored by Location_Code, rank in desc by the y axis.",
            "Show the number of documents in different ending date Bin ending date by weekday and group by location code with a stacked bar chart, could you display in descending by the y axis please?"
        ]
    },
    "782@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Role_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ED",
                    "HR",
                    "MG",
                    "PR",
                    "PT"
                ]
            ],
            "y_data": [
                [
                    7,
                    1,
                    1,
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a histogram on what is the code of each role and the number of employees in each role?, and I want to display bars in ascending order.",
            "Show all role codes and the number of employees in each role Show bar chart, and show by the X-axis in ascending.",
            "Show all role codes and the number of employees in each role by a bar chart, could you sort from low to high by the names?",
            "Bar chart x axis role code y axis the total number, order X-axis from low to high order please.",
            "What is the code of each role and the number of employees in each role Show bar chart, order X-axis from low to high order please.",
            "Give me a histogram for what is the code of each role and the number of employees in each role?, could you sort from low to high by the names?"
        ]
    },
    "782@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Role_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "PT",
                    "PR",
                    "MG",
                    "HR",
                    "ED"
                ]
            ],
            "y_data": [
                [
                    1,
                    5,
                    1,
                    1,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis role code y axis the total number, I want to display in descending by the Role_Code.",
            "Show all role codes and the number of employees in each role Show bar chart, and could you show by the bars in desc please?",
            "Show all role codes and the number of employees in each role by a bar chart, display from high to low by the X-axis please.",
            "What is the code of each role and the number of employees in each role Show bar chart, and I want to show by the x axis in desc please.",
            "Return a histogram on what is the code of each role and the number of employees in each role?, sort x axis in desc order please.",
            "Give me a histogram for what is the code of each role and the number of employees in each role?, and sort x axis in desc order please."
        ]
    },
    "782@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Role_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "HR",
                    "MG",
                    "PT",
                    "PR",
                    "ED"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    5,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all role codes and the number of employees in each role by a bar chart, show in ascending by the Y-axis please.",
            "Return a histogram on what is the code of each role and the number of employees in each role?, and show in ascending by the Y-axis please.",
            "Show all role codes and the number of employees in each role Show bar chart, and show from low to high by the y axis.",
            "Give me a histogram for what is the code of each role and the number of employees in each role?, and could you sort y axis in ascending order?",
            "Bar chart x axis role code y axis the total number, and show in ascending by the Y-axis please.",
            "What is the code of each role and the number of employees in each role Show bar chart, could you sort y axis in ascending order?"
        ]
    },
    "782@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Role_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ED",
                    "PR",
                    "PT",
                    "MG",
                    "HR"
                ]
            ],
            "y_data": [
                [
                    7,
                    5,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the code of each role and the number of employees in each role Show bar chart, and order by the y axis in desc please.",
            "Show all role codes and the number of employees in each role Show bar chart, I want to rank from high to low by the Y-axis please.",
            "Bar chart x axis role code y axis the total number, sort by the the total number from high to low.",
            "Return a histogram on what is the code of each role and the number of employees in each role?, order by the y axis in desc please.",
            "Show all role codes and the number of employees in each role by a bar chart, and sort by the the total number from high to low.",
            "Give me a histogram for what is the code of each role and the number of employees in each role?, and I want to order in descending by the Y-axis."
        ]
    },
    "783@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) ASC",
                "binning": "BIN Calendar_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) ASC BIN Calendar_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Calendar_Date",
            "y_name": "COUNT(Calendar_Date)",
            "x_data": [
                [
                    "Sat",
                    "Wed",
                    "Thur",
                    "Sun",
                    "Fri",
                    "Mon",
                    "Tue"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN Calendar_Date BY WEEKDAY"
        },
        "nl_queries": [
            "Bar chart x axis calendar date y axis the number of calendar date, and display by the y axis from low to high.",
            "Show all calendar dates and bin by weekday in a bar chart, could you order how many calendar date from low to high order?",
            "What are all the calendar dates? Show a bar chart binning calendar date by weekday, display by the y axis from low to high."
        ]
    },
    "783@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) DESC",
                "binning": "BIN Calendar_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) DESC BIN Calendar_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Calendar_Date",
            "y_name": "COUNT(Calendar_Date)",
            "x_data": [
                [
                    "Tue",
                    "Mon",
                    "Fri",
                    "Sun",
                    "Thur",
                    "Wed",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    3,
                    2,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Calendar_Date BY WEEKDAY"
        },
        "nl_queries": [
            "Show all calendar dates and bin by weekday in a bar chart, I want to rank y axis in desc order.",
            "Bar chart x axis calendar date y axis the number of calendar date, I want to display by the Y in desc.",
            "What are all the calendar dates? Show a bar chart binning calendar date by weekday, could you display total number in desc order?"
        ]
    },
    "787@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date ASC",
                "binning": "BIN Calendar_Date BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date ASC BIN Calendar_Date BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Calendar_Date",
            "y_name": "COUNT(Calendar_Date)",
            "x_data": [
                [
                    "1972~1976",
                    "1977~1981",
                    "1982~1986",
                    "1987~1991",
                    "1992~1996",
                    "1997~2001",
                    "2002~2006",
                    "2007~2011",
                    "2012~2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    2,
                    2,
                    2,
                    1,
                    0,
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Calendar_Date BY YEAR"
        },
        "nl_queries": [
            "Show all calendar dates and bin by year in a line chart, list by the Calendar_Date from low to high.",
            "Plot calendar date by how many calendar date as a line chart, rank X in asc order please.",
            "What are all the calendar dates? Give me a line chart binning calendar dates by year, rank from low to high by the x-axis please."
        ]
    },
    "787@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date DESC",
                "binning": "BIN Calendar_Date BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date DESC BIN Calendar_Date BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Calendar_Date",
            "y_name": "COUNT(Calendar_Date)",
            "x_data": [
                [
                    "2017",
                    "2012~2016",
                    "2007~2011",
                    "2002~2006",
                    "1997~2001",
                    "1992~1996",
                    "1987~1991",
                    "1982~1986",
                    "1977~1981",
                    "1972~1976"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    4,
                    0,
                    1,
                    2,
                    2,
                    2,
                    0,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Calendar_Date BY YEAR"
        },
        "nl_queries": [
            "What are all the calendar dates? Give me a line chart binning calendar dates by year, and list X-axis in desc order.",
            "Show all calendar dates and bin by year in a line chart, and order by the x-axis in desc.",
            "Plot calendar date by how many calendar date as a line chart, list x-axis in descending order please."
        ]
    },
    "789@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date ASC"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Calendar_Date",
            "y_name": "Day_Number",
            "x_data": [
                [
                    "1972-03-31",
                    "1976-06-15",
                    "1985-05-13",
                    "1986-10-14",
                    "1987-11-05",
                    "1988-02-01",
                    "1994-11-15",
                    "1995-01-01",
                    "1997-03-10",
                    "2007-05-28",
                    "2008-06-08",
                    "2009-08-18",
                    "2010-11-26",
                    "2012-07-03",
                    "2017-01-06"
                ]
            ],
            "y_data": [
                [
                    5,
                    7,
                    7,
                    1,
                    3,
                    8,
                    9,
                    1,
                    7,
                    2,
                    3,
                    8,
                    7,
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a line on what are all the calendar dates and day Numbers?, and order from low to high by the x-axis.",
            "Show all calendar dates and day Numbers Plot them as line chart, list by the X-axis in asc please.",
            "Show me the trend about what are all the calendar dates and day Numbers?, list by the X-axis in asc please.",
            "I want to see trend of day_number by calendar date, and list in asc by the x-axis.",
            "Show all calendar dates and day Numbers in a line chart, list in asc by the x-axis.",
            "What are all the calendar dates and day Numbers Show the trend, sort X-axis from low to high order."
        ]
    },
    "789@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date DESC"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Calendar_Date",
            "y_name": "Day_Number",
            "x_data": [
                [
                    "2017-01-06",
                    "2012-07-03",
                    "2010-11-26",
                    "2009-08-18",
                    "2008-06-08",
                    "2007-05-28",
                    "1997-03-10",
                    "1995-01-01",
                    "1994-11-15",
                    "1988-02-01",
                    "1987-11-05",
                    "1986-10-14",
                    "1985-05-13",
                    "1976-06-15",
                    "1972-03-31"
                ]
            ],
            "y_data": [
                [
                    8,
                    7,
                    7,
                    8,
                    3,
                    2,
                    7,
                    1,
                    9,
                    8,
                    3,
                    1,
                    7,
                    7,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all calendar dates and day Numbers Plot them as line chart, rank by the Calendar_Date from high to low please.",
            "I want to see trend of day_number by calendar date, rank in descending by the x axis.",
            "What are all the calendar dates and day Numbers Show the trend, and rank in descending by the x axis.",
            "Show me the trend about what are all the calendar dates and day Numbers?, rank in descending by the x-axis please.",
            "Show all calendar dates and day Numbers in a line chart, sort in desc by the x axis.",
            "Return a line on what are all the calendar dates and day Numbers?, and rank in descending by the X-axis."
        ]
    },
    "791@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "b",
                    "c",
                    "e",
                    "n",
                    "x"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    4,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the location codes and the number of documents in each location in a bar chart, and list from low to high by the bars.",
            "Display a bar chart for what is the code of each location and the number of documents in that location?, sort in ascending by the x axis please.",
            "what is the code of each location and the number of documents in that location?, and could you order by the Location_Code in ascending?",
            "Create a bar chart showing the total number across location code, and order by the Location_Code in asc.",
            "Show the location codes and the number of documents in each location Visualize by bar chart, and list by the x-axis in asc.",
            "What is the code of each location and the number of documents in that location Show bar chart, sort in ascending by the x axis."
        ]
    },
    "791@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "x",
                    "n",
                    "e",
                    "c",
                    "b"
                ]
            ],
            "y_data": [
                [
                    5,
                    1,
                    4,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for what is the code of each location and the number of documents in that location?, and could you show X from high to low order?",
            "Create a bar chart showing the total number across location code, and could you show X from high to low order?",
            "Show the location codes and the number of documents in each location in a bar chart, and I want to display by the names from high to low.",
            "what is the code of each location and the number of documents in that location?, display in desc by the X.",
            "Show the location codes and the number of documents in each location Visualize by bar chart, display by the X in descending.",
            "What is the code of each location and the number of documents in that location Show bar chart, and could you show bar in desc order?"
        ]
    },
    "791@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "n",
                    "c",
                    "b",
                    "e",
                    "x"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Create a bar chart showing the total number across location code, and list by the total number in ascending.",
            "Show the location codes and the number of documents in each location Visualize by bar chart, and I want to display in ascending by the Y-axis.",
            "Display a bar chart for what is the code of each location and the number of documents in that location?, list by the total number in ascending.",
            "what is the code of each location and the number of documents in that location?, I want to list in asc by the y-axis.",
            "Show the location codes and the number of documents in each location in a bar chart, list total number in asc order.",
            "What is the code of each location and the number of documents in that location Show bar chart, and list total number in asc order."
        ]
    },
    "791@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "x",
                    "e",
                    "b",
                    "c",
                    "n"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for what is the code of each location and the number of documents in that location?, rank in descending by the y-axis.",
            "what is the code of each location and the number of documents in that location?, and rank in descending by the y-axis.",
            "What is the code of each location and the number of documents in that location Show bar chart, and display in desc by the the total number .",
            "Create a bar chart showing the total number across location code, and order from high to low by the total number.",
            "Show the location codes and the number of documents in each location Visualize by bar chart, display by the total number from high to low.",
            "Show the location codes and the number of documents in each location in a bar chart, order the total number in descending order."
        ]
    },
    "793@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY COUNT(Date_Stored) ASC",
                "binning": "BIN Date_Stored BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY COUNT(Date_Stored) ASC BIN Date_Stored BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Stored",
            "y_name": "COUNT(Date_Stored)",
            "x_data": [
                [
                    "Fri",
                    "Sat",
                    "Wed",
                    "Thur",
                    "Mon",
                    "Sun",
                    "Tue"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    1,
                    3,
                    4,
                    7
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Stored BY WEEKDAY"
        },
        "nl_queries": [
            "Return a bar chart showing the number of documents stored in each weekday, and list in asc by the Y please.",
            "How many documents are stored? Bin the store date by weekday in a bar chart, and order by the y-axis from low to high."
        ]
    },
    "793@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY COUNT(Date_Stored) DESC",
                "binning": "BIN Date_Stored BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY COUNT(Date_Stored) DESC BIN Date_Stored BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Stored",
            "y_name": "COUNT(Date_Stored)",
            "x_data": [
                [
                    "Tue",
                    "Sun",
                    "Mon",
                    "Thur",
                    "Wed",
                    "Sat",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    7,
                    4,
                    3,
                    1,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Stored BY WEEKDAY"
        },
        "nl_queries": [
            "Return a bar chart showing the number of documents stored in each weekday, order from high to low by the total number.",
            "How many documents are stored? Bin the store date by weekday in a bar chart, and I want to show in desc by the y-axis."
        ]
    },
    "798@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY Date_Stored ASC",
                "binning": "BIN Date_Stored BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY Date_Stored ASC BIN Date_Stored BY YEAR"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_Stored",
            "y_name": "COUNT(Date_Stored)",
            "x_data": [
                [
                    "1976~1979",
                    "1980~1983",
                    "1984~1987",
                    "1988~1991",
                    "1992~1995",
                    "1996~1999",
                    "2000~2003",
                    "2004~2007",
                    "2008~2011",
                    "2012"
                ]
            ],
            "y_data": [
                [
                    3,
                    0,
                    2,
                    0,
                    1,
                    3,
                    0,
                    0,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Stored BY YEAR"
        },
        "nl_queries": [
            "Show how many documents are stored and bin by year in a line chart, and could you rank X from low to high order please?",
            "Show how many documents are stored and bin by year in a line chart, and order by the X-axis from low to high please."
        ]
    },
    "798@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY Date_Stored DESC",
                "binning": "BIN Date_Stored BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY Date_Stored DESC BIN Date_Stored BY YEAR"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_Stored",
            "y_name": "COUNT(Date_Stored)",
            "x_data": [
                [
                    "2012",
                    "2008~2011",
                    "2004~2007",
                    "2000~2003",
                    "1996~1999",
                    "1992~1995",
                    "1988~1991",
                    "1984~1987",
                    "1980~1983",
                    "1976~1979"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    0,
                    0,
                    3,
                    1,
                    0,
                    2,
                    0,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Stored BY YEAR"
        },
        "nl_queries": [
            "Show how many documents are stored and bin by year in a line chart, and rank by the x-axis in desc.",
            "Show how many documents are stored and bin by year in a line chart, and sort by the Date_Stored from high to low please."
        ]
    },
    "1085@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM member GROUP BY Country ORDER BY Country ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM member GROUP BY Country ORDER BY Country ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Canada",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "A bar chart showing the number of members in each country, rank from low to high by the bars please.",
            "Plot how many country by grouped by country as a bar graph, rank from low to high by the bars please."
        ]
    },
    "1085@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM member GROUP BY Country ORDER BY Country DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM member GROUP BY Country ORDER BY Country DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "United States",
                    "Canada"
                ]
            ],
            "y_data": [
                [
                    6,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "A bar chart showing the number of members in each country, and rank by the names in desc.",
            "Plot how many country by grouped by country as a bar graph, show X from high to low order."
        ]
    },
    "1085@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM member GROUP BY Country ORDER BY COUNT(Country) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM member GROUP BY Country ORDER BY COUNT(Country) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Canada",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "A bar chart showing the number of members in each country, I want to display y-axis in asc order.",
            "Plot how many country by grouped by country as a bar graph, and show from low to high by the the number of country."
        ]
    },
    "1085@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM member GROUP BY Country ORDER BY COUNT(Country) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM member GROUP BY Country ORDER BY COUNT(Country) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "United States",
                    "Canada"
                ]
            ],
            "y_data": [
                [
                    6,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "A bar chart showing the number of members in each country, and sort y-axis in desc order.",
            "Plot how many country by grouped by country as a bar graph, could you display by the y axis from high to low please?"
        ]
    },
    "1087@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT College_Location , COUNT(College_Location) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY College_Location ORDER BY College_Location ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT College_Location , COUNT(College_Location) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY College_Location ORDER BY College_Location ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "College_Location",
            "y_name": "COUNT(College_Location)",
            "x_data": [
                [
                    "McGill",
                    "Minnesota",
                    "Ottawa",
                    "St. Francis Xavier",
                    "Western Ontario"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY College_Location"
        },
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college location, and I want to show in asc by the bars."
        ]
    },
    "1087@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT College_Location , COUNT(College_Location) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY College_Location ORDER BY College_Location DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT College_Location , COUNT(College_Location) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY College_Location ORDER BY College_Location DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "College_Location",
            "y_name": "COUNT(College_Location)",
            "x_data": [
                [
                    "Western Ontario",
                    "St. Francis Xavier",
                    "Ottawa",
                    "Minnesota",
                    "McGill"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY College_Location"
        },
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college location, and could you sort bar in desc order?"
        ]
    },
    "1087@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT College_Location , COUNT(College_Location) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY College_Location ORDER BY COUNT(College_Location) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT College_Location , COUNT(College_Location) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY College_Location ORDER BY COUNT(College_Location) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "College_Location",
            "y_name": "COUNT(College_Location)",
            "x_data": [
                [
                    "Minnesota",
                    "Ottawa",
                    "St. Francis Xavier",
                    "Western Ontario",
                    "McGill"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY College_Location"
        },
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college location, and list how many college location from low to high order."
        ]
    },
    "1087@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT College_Location , COUNT(College_Location) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY College_Location ORDER BY COUNT(College_Location) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT College_Location , COUNT(College_Location) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY College_Location ORDER BY COUNT(College_Location) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "College_Location",
            "y_name": "COUNT(College_Location)",
            "x_data": [
                [
                    "McGill",
                    "Western Ontario",
                    "St. Francis Xavier",
                    "Ottawa",
                    "Minnesota"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY College_Location"
        },
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college location, show from high to low by the y axis."
        ]
    },
    "1089@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY T1.Name ORDER BY T1.Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Name , COUNT(T1.Name) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY T1.Name ORDER BY T1.Name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "B.C. School",
                    "Calgary School",
                    "Edmonton School",
                    "Saskatchewan School",
                    "Toronto School"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college, sort from low to high by the X-axis."
        ]
    },
    "1089@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY T1.Name ORDER BY T1.Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Name , COUNT(T1.Name) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY T1.Name ORDER BY T1.Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Toronto School",
                    "Saskatchewan School",
                    "Edmonton School",
                    "Calgary School",
                    "B.C. School"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college, I want to display by the X in descending."
        ]
    },
    "1089@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY T1.Name ORDER BY COUNT(T1.Name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Name , COUNT(T1.Name) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY T1.Name ORDER BY COUNT(T1.Name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "B.C. School",
                    "Calgary School",
                    "Saskatchewan School",
                    "Toronto School",
                    "Edmonton School"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college, sort total number in asc order."
        ]
    },
    "1089@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY T1.Name ORDER BY COUNT(T1.Name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Name , COUNT(T1.Name) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY T1.Name ORDER BY COUNT(T1.Name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Edmonton School",
                    "Toronto School",
                    "Saskatchewan School",
                    "Calgary School",
                    "B.C. School"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college, could you display y axis in desc order please?"
        ]
    },
    "1091@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM member GROUP BY Country ORDER BY Country ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM member GROUP BY Country ORDER BY Country ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Canada",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the different countries and the number of members from each with a bar chart, rank by the bar in ascending.",
            "Plot the total number by grouped by country as a bar graph, and could you sort by the Country from low to high please?",
            "Show the different countries and the number of members from each Visualize by bar chart, rank by the bar in ascending."
        ]
    },
    "1091@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM member GROUP BY Country ORDER BY Country DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM member GROUP BY Country ORDER BY Country DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "United States",
                    "Canada"
                ]
            ],
            "y_data": [
                [
                    6,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the different countries and the number of members from each Visualize by bar chart, and could you list x axis in descending order?",
            "Plot the total number by grouped by country as a bar graph, and could you rank by the x-axis in desc?",
            "Show the different countries and the number of members from each with a bar chart, and could you sort by the Country in descending?"
        ]
    },
    "1091@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM member GROUP BY Country ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM member GROUP BY Country ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Canada",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the different countries and the number of members from each Visualize by bar chart, order by the y axis from low to high please.",
            "Plot the total number by grouped by country as a bar graph, and order by the y axis from low to high please.",
            "Show the different countries and the number of members from each with a bar chart, and could you order in asc by the Y-axis?"
        ]
    },
    "1091@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM member GROUP BY Country ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM member GROUP BY Country ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "United States",
                    "Canada"
                ]
            ],
            "y_data": [
                [
                    6,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the different countries and the number of members from each with a bar chart, list Y in desc order.",
            "Show the different countries and the number of members from each Visualize by bar chart, list by the total number in descending.",
            "Plot the total number by grouped by country as a bar graph, and display y axis in desc order."
        ]
    },
    "2784@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY preferred_foot ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY preferred_foot ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "soccer_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "preferred_foot",
            "y_name": "count(*)",
            "x_data": [
                [
                    "left",
                    "right"
                ]
            ],
            "y_data": [
                [
                    1606,
                    5955
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            ", list X-axis in ascending order."
        ]
    },
    "2784@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY preferred_foot DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY preferred_foot DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "soccer_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "preferred_foot",
            "y_name": "count(*)",
            "x_data": [
                [
                    "right",
                    "left"
                ]
            ],
            "y_data": [
                [
                    5955,
                    1606
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            ", show preferred_foot in descending order."
        ]
    },
    "2784@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "soccer_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "preferred_foot",
            "y_name": "count(*)",
            "x_data": [
                [
                    "left",
                    "right"
                ]
            ],
            "y_data": [
                [
                    1606,
                    5955
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            ", could you order by the total number in asc?"
        ]
    },
    "2784@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "soccer_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "preferred_foot",
            "y_name": "count(*)",
            "x_data": [
                [
                    "right",
                    "left"
                ]
            ],
            "y_data": [
                [
                    5955,
                    1606
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            ", and show in descending by the Y."
        ]
    },
    "1324@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(*) FROM representative GROUP BY Party ORDER BY Party ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party , COUNT(*) FROM representative GROUP BY Party ORDER BY Party ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Democratic",
                    "Republican"
                ]
            ],
            "y_data": [
                [
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart of the total number from each party, and could you order by the bars in asc?",
            "Give me a histogram for what are the different parties of representative? Show the party name and the number of representatives in each party, could you order by the bars in asc?",
            "What are the different parties of representative? Show the party name and the number of representatives in each party, list by the x axis in ascending."
        ]
    },
    "1324@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(*) FROM representative GROUP BY Party ORDER BY Party DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party , COUNT(*) FROM representative GROUP BY Party ORDER BY Party DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Republican",
                    "Democratic"
                ]
            ],
            "y_data": [
                [
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the different parties of representative? Show the party name and the number of representatives in each party, sort names in descending order.",
            "Bar chart of the total number from each party, and rank x axis in descending order.",
            "Give me a histogram for what are the different parties of representative? Show the party name and the number of representatives in each party, and sort in desc by the bar."
        ]
    },
    "1324@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party , COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Democratic",
                    "Republican"
                ]
            ],
            "y_data": [
                [
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a histogram for what are the different parties of representative? Show the party name and the number of representatives in each party, and show total number in asc order please.",
            "What are the different parties of representative? Show the party name and the number of representatives in each party, order in asc by the Y-axis.",
            "Bar chart of the total number from each party, show total number in asc order please."
        ]
    },
    "1324@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party , COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Republican",
                    "Democratic"
                ]
            ],
            "y_data": [
                [
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the different parties of representative? Show the party name and the number of representatives in each party, and could you show total number in descending order?",
            "Bar chart of the total number from each party, I want to sort Y from high to low order please.",
            "Give me a histogram for what are the different parties of representative? Show the party name and the number of representatives in each party, and I want to order the total number from high to low order."
        ]
    },
    "1326@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date , Vote_Percent FROM election ORDER BY Date ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date , Vote_Percent FROM election ORDER BY Date ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Vote_Percent",
            "x_data": [
                [
                    "1946",
                    "1949",
                    "1953",
                    "July 1942",
                    "October 1942"
                ]
            ],
            "y_data": [
                [
                    19.5,
                    19.5,
                    16,
                    16.2,
                    18.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the dates and vote percents of elections Show bar chart, order by the names in ascending.",
            "Show vote_percent from each date, and I want to rank x-axis in ascending order.",
            "List the dates and vote percents of elections in a bar chart, rank in ascending by the bar please."
        ]
    },
    "1326@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date , Vote_Percent FROM election ORDER BY Date DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date , Vote_Percent FROM election ORDER BY Date DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Vote_Percent",
            "x_data": [
                [
                    "October 1942",
                    "July 1942",
                    "1953",
                    "1949",
                    "1946"
                ]
            ],
            "y_data": [
                [
                    18.5,
                    16.2,
                    16,
                    19.5,
                    19.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show vote_percent from each date, and I want to rank by the x-axis from high to low.",
            "List the dates and vote percents of elections in a bar chart, and I want to rank by the x-axis from high to low.",
            "List the dates and vote percents of elections Show bar chart, I want to rank by the x-axis from high to low."
        ]
    },
    "1326@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date , Vote_Percent FROM election ORDER BY Vote_Percent ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date , Vote_Percent FROM election ORDER BY Vote_Percent ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Vote_Percent",
            "x_data": [
                [
                    "1953",
                    "July 1942",
                    "October 1942",
                    "1946",
                    "1949"
                ]
            ],
            "y_data": [
                [
                    16,
                    16.2,
                    18.5,
                    19.5,
                    19.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the dates and vote percents of elections Show bar chart, show by the Y from low to high.",
            "List the dates and vote percents of elections in a bar chart, list by the Vote_Percent in asc please.",
            "Show vote_percent from each date, list by the Vote_Percent in asc please."
        ]
    },
    "1326@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date , Vote_Percent FROM election ORDER BY Vote_Percent DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date , Vote_Percent FROM election ORDER BY Vote_Percent DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Vote_Percent",
            "x_data": [
                [
                    "1949",
                    "1946",
                    "October 1942",
                    "July 1942",
                    "1953"
                ]
            ],
            "y_data": [
                [
                    19.5,
                    19.5,
                    18.5,
                    16.2,
                    16
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the dates and vote percents of elections Show bar chart, and list y axis from high to low order.",
            "Show vote_percent from each date, could you show y axis from high to low order please?",
            "List the dates and vote percents of elections in a bar chart, and I want to order by the y-axis in desc."
        ]
    },
    "1328@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(Party) FROM representative GROUP BY Party ORDER BY Party ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party , COUNT(Party) FROM representative GROUP BY Party ORDER BY Party ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "COUNT(Party)",
            "x_data": [
                [
                    "Democratic",
                    "Republican"
                ]
            ],
            "y_data": [
                [
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Party"
        },
        "nl_queries": [
            "Plot how many party by grouped by party as a bar graph, list bar in asc order.",
            "A bar chart showing how many representatives in each party, order X in asc order."
        ]
    },
    "1328@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(Party) FROM representative GROUP BY Party ORDER BY Party DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party , COUNT(Party) FROM representative GROUP BY Party ORDER BY Party DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "COUNT(Party)",
            "x_data": [
                [
                    "Republican",
                    "Democratic"
                ]
            ],
            "y_data": [
                [
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Party"
        },
        "nl_queries": [
            "Plot how many party by grouped by party as a bar graph, rank in desc by the bar.",
            "A bar chart showing how many representatives in each party, could you order in descending by the x-axis?"
        ]
    },
    "1328@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(Party) FROM representative GROUP BY Party ORDER BY COUNT(Party) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party , COUNT(Party) FROM representative GROUP BY Party ORDER BY COUNT(Party) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "COUNT(Party)",
            "x_data": [
                [
                    "Democratic",
                    "Republican"
                ]
            ],
            "y_data": [
                [
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Party"
        },
        "nl_queries": [
            "Plot how many party by grouped by party as a bar graph, could you rank by the total number from low to high?",
            "A bar chart showing how many representatives in each party, and I want to display Y-axis from low to high order."
        ]
    },
    "1328@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(Party) FROM representative GROUP BY Party ORDER BY COUNT(Party) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party , COUNT(Party) FROM representative GROUP BY Party ORDER BY COUNT(Party) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "COUNT(Party)",
            "x_data": [
                [
                    "Republican",
                    "Democratic"
                ]
            ],
            "y_data": [
                [
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Party"
        },
        "nl_queries": [
            "A bar chart showing how many representatives in each party, show y-axis in desc order.",
            "Plot how many party by grouped by party as a bar graph, rank by the y axis in descending."
        ]
    },
    "909@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_category_code",
            "y_name": "avg(product_price)",
            "x_data": [
                [
                    "Book",
                    "Food",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    35,
                    2.88,
                    66.67
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the average price of the products for each category, could you list by the bars in ascending?",
            "Show me a bar chart for what is the average price of the products for each category?, show from low to high by the x axis.",
            "Return the average price of products that have each category code in a bar chart, sort in ascending by the names.",
            "A bar chart about what is the average price of the products for each category?, and rank product_category_code in ascending order.",
            "Return the average price of products that have each category code, and sort in ascending by the names.",
            "Bar graph to show the average of product price from different product category code, show names from low to high order."
        ]
    },
    "909@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_category_code",
            "y_name": "avg(product_price)",
            "x_data": [
                [
                    "Hardware",
                    "Food",
                    "Book"
                ]
            ],
            "y_data": [
                [
                    66.67,
                    2.88,
                    35
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the average price of the products for each category, and sort bars in descending order.",
            "Return the average price of products that have each category code, and show X in desc order.",
            "Show me a bar chart for what is the average price of the products for each category?, and I want to order bar from high to low order.",
            "A bar chart about what is the average price of the products for each category?, sort bars in descending order.",
            "Return the average price of products that have each category code in a bar chart, could you rank x axis in desc order?",
            "Bar graph to show the average of product price from different product category code, and show bar in descending order."
        ]
    },
    "909@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_category_code",
            "y_name": "avg(product_price)",
            "x_data": [
                [
                    "Food",
                    "Book",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    2.88,
                    35,
                    66.67
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me a bar chart for what is the average price of the products for each category?, order by the Y from low to high.",
            "Bar graph to show the average of product price from different product category code, and I want to display by the Y-axis in ascending.",
            "Return the average price of products that have each category code in a bar chart, and list y axis from low to high order.",
            "A bar chart about what is the average price of the products for each category?, and rank from low to high by the y axis.",
            "Return the average price of products that have each category code, and order by the mean product price in asc.",
            "What is the average price of the products for each category, list y axis from low to high order."
        ]
    },
    "909@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_category_code",
            "y_name": "avg(product_price)",
            "x_data": [
                [
                    "Hardware",
                    "Book",
                    "Food"
                ]
            ],
            "y_data": [
                [
                    66.67,
                    35,
                    2.88
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return the average price of products that have each category code in a bar chart, and order Y in desc order please.",
            "A bar chart about what is the average price of the products for each category?, order Y in desc order please.",
            "Return the average price of products that have each category code, and could you sort mean product price from high to low order please?",
            "Bar graph to show the average of product price from different product category code, and order Y in desc order please.",
            "What is the average price of the products for each category, I want to show from high to low by the mean product price please.",
            "Show me a bar chart for what is the average price of the products for each category?, could you show from high to low by the y axis?"
        ]
    },
    "911@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Chocolate",
                    "Keyboard",
                    "Mouse",
                    "The Great Gatsby"
                ]
            ],
            "y_data": [
                [
                    6,
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "what are all the different product names, and how many complains has each received?, and order X-axis in asc order.",
            "Draw a bar chart for what are all the different product names, and how many complains has each received?, I want to order by the X-axis in ascending please.",
            "List the name of all products along with the number of complaints that they have received, and order from low to high by the X-axis.",
            "List the name of all products along with the number of complaints that they have received with a bar chart, and I want to rank by the x axis in ascending please.",
            "What are all the different product names, and how many complains has each received Show bar chart, sort by the X-axis from low to high please."
        ]
    },
    "911@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "The Great Gatsby",
                    "Mouse",
                    "Keyboard",
                    "Chocolate"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are all the different product names, and how many complains has each received Show bar chart, and show in desc by the bars.",
            "what are all the different product names, and how many complains has each received?, rank in desc by the product_name.",
            "List the name of all products along with the number of complaints that they have received with a bar chart, and show in descending by the x axis.",
            "List the name of all products along with the number of complaints that they have received, sort in desc by the bars.",
            "Draw a bar chart for what are all the different product names, and how many complains has each received?, sort in desc by the bars."
        ]
    },
    "911@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Keyboard",
                    "Mouse",
                    "The Great Gatsby",
                    "Chocolate"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List the name of all products along with the number of complaints that they have received with a bar chart, show by the Y-axis in asc.",
            "What are all the different product names, and how many complains has each received Show bar chart, I want to display in ascending by the Y.",
            "List the name of all products along with the number of complaints that they have received, sort by the the total number from low to high please.",
            "Draw a bar chart for what are all the different product names, and how many complains has each received?, sort by the the total number from low to high please.",
            "what are all the different product names, and how many complains has each received?, rank in asc by the Y-axis."
        ]
    },
    "911@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Chocolate",
                    "The Great Gatsby",
                    "Mouse",
                    "Keyboard"
                ]
            ],
            "y_data": [
                [
                    6,
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are all the different product names, and how many complains has each received Show bar chart, and rank Y-axis in descending order.",
            "List the name of all products along with the number of complaints that they have received, order in desc by the y-axis.",
            "what are all the different product names, and how many complains has each received?, and order from high to low by the Y please.",
            "Draw a bar chart for what are all the different product names, and how many complains has each received?, show from high to low by the Y-axis.",
            "List the name of all products along with the number of complaints that they have received with a bar chart, and show from high to low by the Y-axis."
        ]
    },
    "690@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "France",
                    "Netherlands",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all countries and the number of singers in each country Show bar chart, and I want to sort by the X in asc.",
            "Give me a histogram for how many singers are from each country?, and I want to sort in ascending by the names.",
            "Draw a bar chart of country versus the total number, and rank from low to high by the X-axis.",
            "Return a bar chart on how many singers are from each country?, and rank from low to high by the X-axis.",
            "How many singers are from each country, I want to show by the bar from low to high.",
            "Show all countries and the number of singers in each country in a bar chart, and I want to sort by the X in asc."
        ]
    },
    "690@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "United States",
                    "Netherlands",
                    "France"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many singers are from each country, and could you rank by the x-axis in descending?",
            "Show all countries and the number of singers in each country Show bar chart, and sort bar in desc order please.",
            "Show all countries and the number of singers in each country in a bar chart, and I want to order by the bars from high to low.",
            "Give me a histogram for how many singers are from each country?, and sort in descending by the names.",
            "Return a bar chart on how many singers are from each country?, list by the bar from high to low.",
            "Draw a bar chart of country versus the total number, could you rank by the bar in desc?"
        ]
    },
    "690@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Netherlands",
                    "United States",
                    "France"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a histogram for how many singers are from each country?, and could you display in ascending by the the total number ?",
            "Show all countries and the number of singers in each country Show bar chart, and show from low to high by the Y.",
            "Return a bar chart on how many singers are from each country?, list by the y axis in ascending.",
            "How many singers are from each country, show by the the total number in asc.",
            "Show all countries and the number of singers in each country in a bar chart, and order Y from low to high order.",
            "Draw a bar chart of country versus the total number, rank y axis in ascending order."
        ]
    },
    "690@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "France",
                    "United States",
                    "Netherlands"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many singers are from each country, could you display by the y axis in descending please?",
            "Draw a bar chart of country versus the total number, and sort the total number in desc order.",
            "Return a bar chart on how many singers are from each country?, sort the total number in desc order.",
            "Give me a histogram for how many singers are from each country?, and sort the total number in desc order.",
            "Show all countries and the number of singers in each country in a bar chart, show Y-axis from high to low order.",
            "Show all countries and the number of singers in each country Show bar chart, and could you sort from high to low by the Y-axis?"
        ]
    },
    "692@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "John Nizinik",
                    "Justin Brown",
                    "Rose White",
                    "Timbaland",
                    "Tribal King"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "List all singer names in concerts in year 2014, and count them by a bar chart, could you display by the names from low to high?",
            "What are the names of the singers who performed in a concert in 2014, and count them by a bar chart, display X-axis in ascending order.",
            "What are the number of the names of the singers who performed in a concert in 2014?, display X-axis in ascending order.",
            "A bar chart for what are the number of the names of the singers who performed in a concert in 2014?, and display bar from low to high order."
        ]
    },
    "692@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Tribal King",
                    "Timbaland",
                    "Rose White",
                    "Justin Brown",
                    "John Nizinik"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "List all singer names in concerts in year 2014, and count them by a bar chart, and show X from high to low order.",
            "A bar chart for what are the number of the names of the singers who performed in a concert in 2014?, could you sort by the bar in descending please?",
            "What are the names of the singers who performed in a concert in 2014, and count them by a bar chart, could you sort by the bar in descending please?",
            "What are the number of the names of the singers who performed in a concert in 2014?, show by the bar in desc please."
        ]
    },
    "692@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY COUNT(Name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY COUNT(Name) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "John Nizinik",
                    "Rose White",
                    "Timbaland",
                    "Tribal King",
                    "Justin Brown"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "What are the number of the names of the singers who performed in a concert in 2014?, order by the the number of name from low to high.",
            "List all singer names in concerts in year 2014, and count them by a bar chart, and show by the Y-axis from low to high.",
            "A bar chart for what are the number of the names of the singers who performed in a concert in 2014?, order by the the number of name from low to high.",
            "What are the names of the singers who performed in a concert in 2014, and count them by a bar chart, and list the number of name from low to high order."
        ]
    },
    "692@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY COUNT(Name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY COUNT(Name) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Justin Brown",
                    "Tribal King",
                    "Timbaland",
                    "Rose White",
                    "John Nizinik"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name"
        },
        "nl_queries": [
            "What are the names of the singers who performed in a concert in 2014, and count them by a bar chart, list from high to low by the the number of name.",
            "A bar chart for what are the number of the names of the singers who performed in a concert in 2014?, and order from high to low by the total number.",
            "List all singer names in concerts in year 2014, and count them by a bar chart, list from high to low by the the number of name.",
            "What are the number of the names of the singers who performed in a concert in 2014?, could you show the number of name in desc order?"
        ]
    },
    "693@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY Country ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY Country ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "France",
                    "Netherlands",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Give me a bar chart for the number of country of each country, list by the x-axis from low to high please.",
            "What is the number of singers for each country? Show a bar chart, display by the names in ascending.",
            "Show the number of singers in each country with a bar chart, and list by the x-axis from low to high please."
        ]
    },
    "693@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY Country DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY Country DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "United States",
                    "Netherlands",
                    "France"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Show the number of singers in each country with a bar chart, and sort bar from high to low order.",
            "Give me a bar chart for the number of country of each country, sort names in desc order.",
            "What is the number of singers for each country? Show a bar chart, and sort by the bar from high to low."
        ]
    },
    "693@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY COUNT(Country) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY COUNT(Country) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Netherlands",
                    "United States",
                    "France"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Show the number of singers in each country with a bar chart, display by the the number of country in asc.",
            "Give me a bar chart for the number of country of each country, and could you rank total number from low to high order?",
            "What is the number of singers for each country? Show a bar chart, and list from low to high by the y-axis."
        ]
    },
    "693@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY COUNT(Country) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY COUNT(Country) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "France",
                    "United States",
                    "Netherlands"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Give me a bar chart for the number of country of each country, and list in descending by the the number of country.",
            "What is the number of singers for each country? Show a bar chart, and I want to rank y-axis in desc order.",
            "Show the number of singers in each country with a bar chart, I want to rank y-axis in desc order."
        ]
    },
    "696@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY Country ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY Country ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "France",
                    "Netherlands",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    34.5,
                    52,
                    32
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "What is the average age of singers for each country? Visualize with a bar chart, show X-axis in ascending order.",
            "Show the average of age from each country, and show from low to high by the X please.",
            "Show the average age of singers for each country with a bar chart, and order in asc by the x axis."
        ]
    },
    "696@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY Country DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY Country DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "United States",
                    "Netherlands",
                    "France"
                ]
            ],
            "y_data": [
                [
                    32,
                    52,
                    34.5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Show the average age of singers for each country with a bar chart, and I want to show in descending by the X please.",
            "Show the average of age from each country, and rank by the x-axis in descending.",
            "What is the average age of singers for each country? Visualize with a bar chart, order from high to low by the X-axis."
        ]
    },
    "696@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY AVG(Age) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY AVG(Age) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "United States",
                    "France",
                    "Netherlands"
                ]
            ],
            "y_data": [
                [
                    32,
                    34.5,
                    52
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "What is the average age of singers for each country? Visualize with a bar chart, I want to show by the Y-axis in asc.",
            "Show the average of age from each country, I want to list from low to high by the total number.",
            "Show the average age of singers for each country with a bar chart, and I want to show by the Y-axis in asc."
        ]
    },
    "696@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY AVG(Age) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY AVG(Age) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "Netherlands",
                    "France",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    52,
                    34.5,
                    32
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Show the average age of singers for each country with a bar chart, could you order from high to low by the Y-axis?",
            "Show the average of age from each country, and could you order from high to low by the Y-axis?",
            "What is the average age of singers for each country? Visualize with a bar chart, list by the total number in desc please."
        ]
    },
    "700@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "John Nizinik",
                    "Justin Brown",
                    "Rose White",
                    "Timbaland",
                    "Tribal King"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a histogram for what are the names of the singers and number of concerts for each person?, order in asc by the names please.",
            "List singer names and number of concerts for each singer, and could you sort X-axis in asc order?",
            "A bar chart about what are the names of the singers and number of concerts for each person?, and could you display by the x axis in asc?",
            "List singer names and number of concerts for each singer with a bar chart, could you display by the x axis in asc?",
            "What are the names of the singers and number of concerts for each person Show bar chart, and sort X-axis from low to high order please."
        ]
    },
    "700@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Tribal King",
                    "Timbaland",
                    "Rose White",
                    "Justin Brown",
                    "John Nizinik"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a histogram for what are the names of the singers and number of concerts for each person?, and list by the Name in descending please.",
            "A bar chart about what are the names of the singers and number of concerts for each person?, and show names in desc order.",
            "What are the names of the singers and number of concerts for each person Show bar chart, and I want to show bar in desc order.",
            "List singer names and number of concerts for each singer with a bar chart, and I want to sort by the Name in desc.",
            "List singer names and number of concerts for each singer, and could you sort in descending by the X-axis please?"
        ]
    },
    "700@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Rose White",
                    "John Nizinik",
                    "Timbaland",
                    "Tribal King",
                    "Justin Brown"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "List singer names and number of concerts for each singer, and sort by the Y in asc.",
            "List singer names and number of concerts for each singer with a bar chart, and rank in ascending by the y-axis.",
            "A bar chart about what are the names of the singers and number of concerts for each person?, I want to order y-axis in ascending order.",
            "What are the names of the singers and number of concerts for each person Show bar chart, sort in ascending by the the total number .",
            "Give me a histogram for what are the names of the singers and number of concerts for each person?, and could you show in asc by the y-axis?"
        ]
    },
    "700@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Justin Brown",
                    "Tribal King",
                    "Timbaland",
                    "John Nizinik",
                    "Rose White"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the names of the singers and number of concerts for each person Show bar chart, I want to show by the Y in desc.",
            "A bar chart about what are the names of the singers and number of concerts for each person?, list in desc by the Y.",
            "List singer names and number of concerts for each singer with a bar chart, and could you display total number in descending order?",
            "Give me a histogram for what are the names of the singers and number of concerts for each person?, and could you show total number in desc order?",
            "List singer names and number of concerts for each singer, and could you show total number in desc order?"
        ]
    },
    "705@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id ORDER BY Theme ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id ORDER BY Theme ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Theme",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Bleeding Love",
                    "Free choice",
                    "Free choice 2",
                    "Happy Tonight",
                    "Party All Night",
                    "Wide Awake"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the number of each theme? Plot as a bar chart, and list x-axis in ascending order."
        ]
    },
    "705@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id ORDER BY Theme DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id ORDER BY Theme DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Theme",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Wide Awake",
                    "Party All Night",
                    "Happy Tonight",
                    "Free choice 2",
                    "Free choice",
                    "Bleeding Love"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the number of each theme? Plot as a bar chart, and could you order by the X-axis from high to low please?"
        ]
    },
    "705@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Theme",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Bleeding Love",
                    "Party All Night",
                    "Wide Awake",
                    "Free choice 2",
                    "Happy Tonight",
                    "Free choice"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the number of each theme? Plot as a bar chart, I want to list the total number in ascending order."
        ]
    },
    "705@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Theme",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Free choice",
                    "Happy Tonight",
                    "Free choice 2",
                    "Wide Awake",
                    "Party All Night",
                    "Bleeding Love"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the number of each theme? Plot as a bar chart, order from high to low by the Y-axis."
        ]
    },
    "919@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) ASC",
                "binning": "BIN active_from_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) ASC BIN active_from_date BY YEAR"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "active_from_date",
            "y_name": "COUNT(active_from_date)",
            "x_data": [
                [
                    "2018",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    1,
                    5
                ],
                [
                    2,
                    6
                ]
            ],
            "classify": [
                "Devin Mills",
                "Tillman Ernser"
            ],
            "describe": "GROUP BY customer_name, BIN active_from_date BY YEAR"
        },
        "nl_queries": [
            "Find the number of customers that use email as the contact channel and group by customer name and bin active date by year in a stacked bar chart, display y axis in ascending order.",
            "How many customers using email as the contact channel? Group by customer name and bin active date by year in a stacked bar chart, display in ascending by the y-axis please."
        ]
    },
    "919@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) DESC",
                "binning": "BIN active_from_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) DESC BIN active_from_date BY YEAR"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "active_from_date",
            "y_name": "COUNT(active_from_date)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    5,
                    1
                ],
                [
                    6,
                    2
                ]
            ],
            "classify": [
                "Devin Mills",
                "Tillman Ernser"
            ],
            "describe": "GROUP BY customer_name, BIN active_from_date BY YEAR"
        },
        "nl_queries": [
            "How many customers using email as the contact channel? Group by customer name and bin active date by year in a stacked bar chart, and show total number in descending order.",
            "Find the number of customers that use email as the contact channel and group by customer name and bin active date by year in a stacked bar chart, and I want to list y axis in desc order."
        ]
    },
    "920@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) ASC",
                "binning": "BIN active_from_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) ASC BIN active_from_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "active_from_date",
            "y_name": "COUNT(active_from_date)",
            "x_data": [
                [
                    "2018",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN active_from_date BY YEAR"
        },
        "nl_queries": [
            "Find the number of customers that use email as the contact channel for each year Visualize with a bar chart, and order in ascending by the y axis.",
            "Return a bar chart showing how many customers whose contact channel code is email for each year, could you sort from low to high by the y-axis?"
        ]
    },
    "920@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) DESC",
                "binning": "BIN active_from_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) DESC BIN active_from_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "active_from_date",
            "y_name": "COUNT(active_from_date)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN active_from_date BY YEAR"
        },
        "nl_queries": [
            "Return a bar chart showing how many customers whose contact channel code is email for each year, show by the Y-axis in desc.",
            "Find the number of customers that use email as the contact channel for each year Visualize with a bar chart, display by the the number of active from date in desc."
        ]
    },
    "921@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) ASC",
                "binning": "BIN active_from_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) ASC BIN active_from_date BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "active_from_date",
            "y_name": "COUNT(active_from_date)",
            "x_data": [
                [
                    "Mon",
                    "Sat",
                    "Sun",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                ]
            ],
            "classify": [
                "Devin Mills",
                "Tillman Ernser"
            ],
            "describe": "GROUP BY customer_name, BIN active_from_date BY WEEKDAY"
        },
        "nl_queries": [
            "How many customers using email as the contact channel? Group by customer name and bin active date by weekday in a stacked bar chart, I want to show by the total number in asc.",
            "Find the number of customers that use email as the contact channel and group by customer name and bin active date by weekday in a stacked bar chart, could you display by the y-axis in ascending?"
        ]
    },
    "921@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) DESC",
                "binning": "BIN active_from_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) DESC BIN active_from_date BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "active_from_date",
            "y_name": "COUNT(active_from_date)",
            "x_data": [
                [
                    "Fri",
                    "Thur",
                    "Wed",
                    "Tue",
                    "Sun",
                    "Sat",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [
                "Devin Mills",
                "Tillman Ernser"
            ],
            "describe": "GROUP BY customer_name, BIN active_from_date BY WEEKDAY"
        },
        "nl_queries": [
            "Find the number of customers that use email as the contact channel and group by customer name and bin active date by weekday in a stacked bar chart, sort in descending by the y-axis please.",
            "How many customers using email as the contact channel? Group by customer name and bin active date by weekday in a stacked bar chart, show from high to low by the y-axis."
        ]
    },
    "922@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) ASC",
                "binning": "BIN active_from_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) ASC BIN active_from_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "active_from_date",
            "y_name": "COUNT(active_from_date)",
            "x_data": [
                [
                    "Mon",
                    "Sat",
                    "Sun",
                    "Tue",
                    "Wed",
                    "Fri",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN active_from_date BY WEEKDAY"
        },
        "nl_queries": [
            "Return a bar chart showing how many customers whose contact channel code is email for each weekday, and rank by the total number in ascending.",
            "Find the number of customers that use email as the contact channel for each weekday Visualize with a bar chart, order from low to high by the Y-axis please."
        ]
    },
    "922@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) DESC",
                "binning": "BIN active_from_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) DESC BIN active_from_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "active_from_date",
            "y_name": "COUNT(active_from_date)",
            "x_data": [
                [
                    "Thur",
                    "Fri",
                    "Wed",
                    "Tue",
                    "Sun",
                    "Sat",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN active_from_date BY WEEKDAY"
        },
        "nl_queries": [
            "Find the number of customers that use email as the contact channel for each weekday Visualize with a bar chart, list in descending by the y axis.",
            "Return a bar chart showing how many customers whose contact channel code is email for each weekday, and could you display by the how many active from date in descending?"
        ]
    },
    "923@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) ASC",
                "binning": "BIN date_became_customer BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) ASC BIN date_became_customer BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_became_customer",
            "y_name": "COUNT(date_became_customer)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN date_became_customer BY MONTH"
        },
        "nl_queries": [
            "What are the number of the dates when customers with ids between 10 and 20 became customers?, and list total number in ascending order please.",
            "A bar chart for finding the number of the \"date became customers\" of the customers whose ID is between 10 and 20, and show by the total number in ascending.",
            "What are the dates when customers with ids between 10 and 20 became customers, and count them by a bar chart, and rank by the y axis from low to high.",
            "A bar chart for what are the number of the dates when customers with ids between 10 and 20 became customers?, rank y axis in ascending order.",
            "Find the \"date became customers\" of the customers whose ID is between 10 and 20, and count them by a bar chart, and show Y-axis in asc order.",
            "Find the number of the \"date became customers\" of the customers whose ID is between 10 and 20, rank y axis in ascending order."
        ]
    },
    "923@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) DESC",
                "binning": "BIN date_became_customer BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) DESC BIN date_became_customer BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_became_customer",
            "y_name": "COUNT(date_became_customer)",
            "x_data": [
                [
                    "Mar",
                    "Feb"
                ]
            ],
            "y_data": [
                [
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_became_customer BY MONTH"
        },
        "nl_queries": [
            "A bar chart for what are the number of the dates when customers with ids between 10 and 20 became customers?, display by the y-axis in descending.",
            "What are the number of the dates when customers with ids between 10 and 20 became customers?, and show by the y-axis in desc.",
            "A bar chart for finding the number of the \"date became customers\" of the customers whose ID is between 10 and 20, and display by the y-axis in descending.",
            "What are the dates when customers with ids between 10 and 20 became customers, and count them by a bar chart, and display in desc by the Y.",
            "Find the \"date became customers\" of the customers whose ID is between 10 and 20, and count them by a bar chart, and could you sort in descending by the y-axis please?",
            "Find the number of the \"date became customers\" of the customers whose ID is between 10 and 20, display Y-axis in descending order."
        ]
    },
    "924@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) ASC",
                "binning": "BIN date_became_customer BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) ASC BIN date_became_customer BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_became_customer",
            "y_name": "COUNT(date_became_customer)",
            "x_data": [
                [
                    "Fri",
                    "Tue",
                    "Wed",
                    "Mon",
                    "Sat",
                    "Sun",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_became_customer BY WEEKDAY"
        },
        "nl_queries": [
            "Find the number of the \"date became customers\" of the customers whose ID is between 10 and 20, and order by the Y in ascending.",
            "A bar chart for finding the number of the \"date became customers\" of the customers whose ID is between 10 and 20, and display by the y axis in asc please.",
            "What are the dates when customers with ids between 10 and 20 became customers, and count them by a bar chart, and I want to rank y-axis in ascending order.",
            "Find the \"date became customers\" of the customers whose ID is between 10 and 20, and count them by a bar chart, and order total number in ascending order please.",
            "What are the number of the dates when customers with ids between 10 and 20 became customers?, I want to rank y-axis in ascending order.",
            "A bar chart for what are the number of the dates when customers with ids between 10 and 20 became customers?, and I want to sort from low to high by the Y-axis."
        ]
    },
    "924@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) DESC",
                "binning": "BIN date_became_customer BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) DESC BIN date_became_customer BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_became_customer",
            "y_name": "COUNT(date_became_customer)",
            "x_data": [
                [
                    "Thur",
                    "Sun",
                    "Sat",
                    "Mon",
                    "Wed",
                    "Tue",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    1,
                    1,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_became_customer BY WEEKDAY"
        },
        "nl_queries": [
            "A bar chart for what are the number of the dates when customers with ids between 10 and 20 became customers?, list the number of date became customer in descending order.",
            "What are the dates when customers with ids between 10 and 20 became customers, and count them by a bar chart, and could you rank by the the number of date became customer in desc please?",
            "Find the \"date became customers\" of the customers whose ID is between 10 and 20, and count them by a bar chart, I want to show by the y axis in descending.",
            "A bar chart for finding the number of the \"date became customers\" of the customers whose ID is between 10 and 20, and I want to show by the y axis in descending.",
            "What are the number of the dates when customers with ids between 10 and 20 became customers?, and order by the the number of date became customer in descending please.",
            "Find the number of the \"date became customers\" of the customers whose ID is between 10 and 20, list the number of date became customer in descending order."
        ]
    },
    "1146@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Carrier , COUNT(Carrier) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Carrier ORDER BY Carrier ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Carrier ORDER BY Carrier ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Carrier",
            "y_name": "COUNT(Carrier)",
            "x_data": [
                [
                    "Bell Mobility",
                    "Vodafone AU"
                ]
            ],
            "y_data": [
                [
                    3,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Carrier"
        },
        "nl_queries": [
            "What are the names of device shops, and what are the carriers that they carry devices in stock for?, could you sort in ascending by the x-axis?",
            "Give a bar chart showing how many shops in each carrier, and could you show in ascending by the X?"
        ]
    },
    "1146@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Carrier , COUNT(Carrier) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Carrier ORDER BY Carrier DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Carrier ORDER BY Carrier DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Carrier",
            "y_name": "COUNT(Carrier)",
            "x_data": [
                [
                    "Vodafone AU",
                    "Bell Mobility"
                ]
            ],
            "y_data": [
                [
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Carrier"
        },
        "nl_queries": [
            "What are the names of device shops, and what are the carriers that they carry devices in stock for?, and could you rank by the X-axis from high to low?",
            "Give a bar chart showing how many shops in each carrier, I want to show by the bars from high to low."
        ]
    },
    "1146@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Carrier , COUNT(Carrier) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Carrier ORDER BY COUNT(Carrier) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Carrier ORDER BY COUNT(Carrier) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Carrier",
            "y_name": "COUNT(Carrier)",
            "x_data": [
                [
                    "Bell Mobility",
                    "Vodafone AU"
                ]
            ],
            "y_data": [
                [
                    3,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Carrier"
        },
        "nl_queries": [
            "Give a bar chart showing how many shops in each carrier, display in asc by the y axis.",
            "What are the names of device shops, and what are the carriers that they carry devices in stock for?, sort in ascending by the Y."
        ]
    },
    "1146@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Carrier , COUNT(Carrier) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Carrier ORDER BY COUNT(Carrier) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Carrier ORDER BY COUNT(Carrier) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Carrier",
            "y_name": "COUNT(Carrier)",
            "x_data": [
                [
                    "Vodafone AU",
                    "Bell Mobility"
                ]
            ],
            "y_data": [
                [
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Carrier"
        },
        "nl_queries": [
            "Give a bar chart showing how many shops in each carrier, list by the the number of carrier in desc.",
            "What are the names of device shops, and what are the carriers that they carry devices in stock for?, display Y-axis in desc order please."
        ]
    },
    "1147@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Shop_Name , COUNT(Shop_Name) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Shop_Name ORDER BY Shop_Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Shop_Name , COUNT(Shop_Name) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Shop_Name ORDER BY Shop_Name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Shop_Name",
            "y_name": "COUNT(Shop_Name)",
            "x_data": [
                [
                    "ATnT",
                    "Apple",
                    "Best Buy",
                    "Dinas Device",
                    "Ferndale",
                    "Gelli repair"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Shop_Name"
        },
        "nl_queries": [
            "Show how many carrriers for each shops in a bar chart, and list by the X-axis from low to high."
        ]
    },
    "1147@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Shop_Name , COUNT(Shop_Name) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Shop_Name ORDER BY Shop_Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Shop_Name , COUNT(Shop_Name) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Shop_Name ORDER BY Shop_Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Shop_Name",
            "y_name": "COUNT(Shop_Name)",
            "x_data": [
                [
                    "Gelli repair",
                    "Ferndale",
                    "Dinas Device",
                    "Best Buy",
                    "Apple",
                    "ATnT"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Shop_Name"
        },
        "nl_queries": [
            "Show how many carrriers for each shops in a bar chart, and could you sort bars from high to low order?"
        ]
    },
    "1147@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Shop_Name , COUNT(Shop_Name) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Shop_Name ORDER BY COUNT(Shop_Name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Shop_Name , COUNT(Shop_Name) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Shop_Name ORDER BY COUNT(Shop_Name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Shop_Name",
            "y_name": "COUNT(Shop_Name)",
            "x_data": [
                [
                    "ATnT",
                    "Apple",
                    "Best Buy",
                    "Gelli repair",
                    "Dinas Device",
                    "Ferndale"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Shop_Name"
        },
        "nl_queries": [
            "Show how many carrriers for each shops in a bar chart, could you list y-axis in asc order?"
        ]
    },
    "1147@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Shop_Name , COUNT(Shop_Name) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Shop_Name ORDER BY COUNT(Shop_Name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Shop_Name , COUNT(Shop_Name) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Shop_Name ORDER BY COUNT(Shop_Name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Shop_Name",
            "y_name": "COUNT(Shop_Name)",
            "x_data": [
                [
                    "Ferndale",
                    "Dinas Device",
                    "Gelli repair",
                    "Best Buy",
                    "Apple",
                    "ATnT"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Shop_Name"
        },
        "nl_queries": [
            "Show how many carrriers for each shops in a bar chart, and list in descending by the y-axis please."
        ]
    },
    "1149@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY Software_Platform ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY Software_Platform ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Software_Platform",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Android",
                    "iOS"
                ]
            ],
            "y_data": [
                [
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "what are the different software platforms for devices, and how many devices have each?, order by the x-axis in ascending please.",
            "Bar chart x axis software platform y axis the total number, I want to show in ascending by the X-axis.",
            "What are the different software platforms for devices, and how many devices have each, I want to show bar in ascending order.",
            "A bar chart about what are the different software platforms for devices, and how many devices have each?, and show in ascending by the x axis."
        ]
    },
    "1149@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY Software_Platform DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY Software_Platform DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Software_Platform",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "iOS",
                    "Android"
                ]
            ],
            "y_data": [
                [
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "A bar chart about what are the different software platforms for devices, and how many devices have each?, and could you display by the x-axis in desc?",
            "Bar chart x axis software platform y axis the total number, sort by the Software_Platform in desc.",
            "what are the different software platforms for devices, and how many devices have each?, and show by the bar in descending.",
            "What are the different software platforms for devices, and how many devices have each, I want to show by the X from high to low."
        ]
    },
    "1149@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Software_Platform",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "iOS",
                    "Android"
                ]
            ],
            "y_data": [
                [
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "what are the different software platforms for devices, and how many devices have each?, order in ascending by the the total number please.",
            "A bar chart about what are the different software platforms for devices, and how many devices have each?, and rank by the the total number from low to high.",
            "Bar chart x axis software platform y axis the total number, could you list total number in ascending order?",
            "What are the different software platforms for devices, and how many devices have each, could you rank the total number in asc order?"
        ]
    },
    "1149@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Software_Platform",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Android",
                    "iOS"
                ]
            ],
            "y_data": [
                [
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis software platform y axis the total number, and sort by the Y-axis from high to low.",
            "What are the different software platforms for devices, and how many devices have each, sort in desc by the total number.",
            "A bar chart about what are the different software platforms for devices, and how many devices have each?, sort by the Y-axis from high to low.",
            "what are the different software platforms for devices, and how many devices have each?, sort by the Y-axis from high to low."
        ]
    },
    "1150@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM shop GROUP BY Location ORDER BY Location ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM shop GROUP BY Location ORDER BY Location ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Blaenllecha",
                    "Cymmer",
                    "Dinas",
                    "Gelli",
                    "Maerdy",
                    "Pentre",
                    "Penygraig",
                    "Porth",
                    "Wattstown"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "Create a bar chart showing how many location across location, and show names from low to high order.",
            "Return a bar chart showing how many shops in each location, and order in ascending by the x-axis."
        ]
    },
    "1150@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM shop GROUP BY Location ORDER BY Location DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM shop GROUP BY Location ORDER BY Location DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Wattstown",
                    "Porth",
                    "Penygraig",
                    "Pentre",
                    "Maerdy",
                    "Gelli",
                    "Dinas",
                    "Cymmer",
                    "Blaenllecha"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "Create a bar chart showing how many location across location, and I want to display X from high to low order.",
            "Return a bar chart showing how many shops in each location, I want to display X from high to low order."
        ]
    },
    "1150@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM shop GROUP BY Location ORDER BY COUNT(Location) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM shop GROUP BY Location ORDER BY COUNT(Location) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Cymmer",
                    "Gelli",
                    "Maerdy",
                    "Pentre",
                    "Porth",
                    "Wattstown",
                    "Blaenllecha",
                    "Dinas",
                    "Penygraig"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "Return a bar chart showing how many shops in each location, could you rank how many location in ascending order please?",
            "Create a bar chart showing how many location across location, and I want to order by the y-axis in ascending."
        ]
    },
    "1150@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM shop GROUP BY Location ORDER BY COUNT(Location) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM shop GROUP BY Location ORDER BY COUNT(Location) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Penygraig",
                    "Dinas",
                    "Blaenllecha",
                    "Wattstown",
                    "Porth",
                    "Pentre",
                    "Maerdy",
                    "Gelli",
                    "Cymmer"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location"
        },
        "nl_queries": [
            "Return a bar chart showing how many shops in each location, and I want to display in descending by the y-axis.",
            "Create a bar chart showing how many location across location, list Y from high to low order."
        ]
    },
    "2626@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "100 North Tampa",
                    "Citizens Bank Building",
                    "Floridan Hotel",
                    "Franklin Exchange Building",
                    "One Tampa City Center",
                    "Park Tower",
                    "Tampa City Hall"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each building, show the name of the building and the number of institutions in it Plot them as bar chart, and display X from low to high order."
        ]
    },
    "2626@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Tampa City Hall",
                    "Park Tower",
                    "One Tampa City Center",
                    "Franklin Exchange Building",
                    "Floridan Hotel",
                    "Citizens Bank Building",
                    "100 North Tampa"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each building, show the name of the building and the number of institutions in it Plot them as bar chart, and could you show bars in desc order?"
        ]
    },
    "2626@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "100 North Tampa",
                    "Floridan Hotel",
                    "Park Tower",
                    "Citizens Bank Building",
                    "Franklin Exchange Building",
                    "One Tampa City Center",
                    "Tampa City Hall"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each building, show the name of the building and the number of institutions in it Plot them as bar chart, rank by the the total number in asc please."
        ]
    },
    "2626@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Tampa City Hall",
                    "One Tampa City Center",
                    "Franklin Exchange Building",
                    "Citizens Bank Building",
                    "Park Tower",
                    "Floridan Hotel",
                    "100 North Tampa"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each building, show the name of the building and the number of institutions in it Plot them as bar chart, and rank in desc by the Y-axis please."
        ]
    },
    "2629@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Private",
                    "Public",
                    "Tribal"
                ]
            ],
            "y_data": [
                [
                    7,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart of type versus the total number, and I want to rank in ascending by the x-axis.",
            "Please give me a bar chart showing institution types, along with the number of institutions for each type, and could you rank x-axis in asc order?",
            "Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, and show bar in asc order please."
        ]
    },
    "2629@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Tribal",
                    "Public",
                    "Private"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart of type versus the total number, I want to sort x axis in desc order.",
            "Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, rank bars in descending order.",
            "Please give me a bar chart showing institution types, along with the number of institutions for each type, and display bars from high to low order."
        ]
    },
    "2629@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Tribal",
                    "Public",
                    "Private"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    7
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, rank from low to high by the y axis.",
            "Please give me a bar chart showing institution types, along with the number of institutions for each type, could you show from low to high by the y axis?",
            "Draw a bar chart of type versus the total number, and order from low to high by the the total number ."
        ]
    },
    "2629@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Private",
                    "Public",
                    "Tribal"
                ]
            ],
            "y_data": [
                [
                    7,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, could you order in desc by the Y-axis?",
            "Draw a bar chart of type versus the total number, could you order in descending by the the total number ?",
            "Please give me a bar chart showing institution types, along with the number of institutions for each type, I want to rank in desc by the total number."
        ]
    },
    "2631@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "Private",
                    "Public",
                    "Tribal"
                ]
            ],
            "y_data": [
                [
                    7868,
                    5267,
                    1000
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis type y axis total number of enrollment, and could you sort bars in asc order?",
            "Please give me a bar chart showing institution types, along with the total enrollment for each type, sort by the X from low to high.",
            "Please compare the total enrollment for each type using a bar chart, display by the x axis in asc please."
        ]
    },
    "2631@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "Tribal",
                    "Public",
                    "Private"
                ]
            ],
            "y_data": [
                [
                    1000,
                    5267,
                    7868
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis type y axis total number of enrollment, rank by the X in desc.",
            "Please give me a bar chart showing institution types, along with the total enrollment for each type, could you order by the x axis in desc?",
            "Please compare the total enrollment for each type using a bar chart, list in desc by the X-axis."
        ]
    },
    "2631@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "Tribal",
                    "Public",
                    "Private"
                ]
            ],
            "y_data": [
                [
                    1000,
                    5267,
                    7868
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Please compare the total enrollment for each type using a bar chart, and could you list in asc by the total number of enrollment please?",
            "Please give me a bar chart showing institution types, along with the total enrollment for each type, and show Y-axis from low to high order.",
            "Bar chart x axis type y axis total number of enrollment, and rank y axis in asc order please."
        ]
    },
    "2631@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "Private",
                    "Public",
                    "Tribal"
                ]
            ],
            "y_data": [
                [
                    7868,
                    5267,
                    1000
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Please give me a bar chart showing institution types, along with the total enrollment for each type, order total number in desc order.",
            "Bar chart x axis type y axis total number of enrollment, and rank by the Y from high to low.",
            "Please compare the total enrollment for each type using a bar chart, and could you sort total number of enrollment in descending order?"
        ]
    },
    "2636@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Height_feet",
            "x_data": [
                [
                    "Citizens Bank Building",
                    "One Tampa City Center",
                    "Tampa City Hall"
                ]
            ],
            "y_data": [
                [
                    145,
                    537,
                    160
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, and sort by the names from low to high.",
            "Show the names and heights of buildings with at least two institutions founded after 1880 Plot them as bar chart, and order by the bar from low to high."
        ]
    },
    "2636@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Height_feet",
            "x_data": [
                [
                    "Tampa City Hall",
                    "One Tampa City Center",
                    "Citizens Bank Building"
                ]
            ],
            "y_data": [
                [
                    160,
                    537,
                    145
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the names and heights of buildings with at least two institutions founded after 1880 Plot them as bar chart, I want to show from high to low by the bar.",
            "Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, and rank names in desc order."
        ]
    },
    "2636@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Height_feet",
            "x_data": [
                [
                    "Citizens Bank Building",
                    "Tampa City Hall",
                    "One Tampa City Center"
                ]
            ],
            "y_data": [
                [
                    145,
                    160,
                    537
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, and could you order by the total number from low to high please?",
            "Show the names and heights of buildings with at least two institutions founded after 1880 Plot them as bar chart, and list by the Y in ascending."
        ]
    },
    "2636@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Height_feet",
            "x_data": [
                [
                    "One Tampa City Center",
                    "Tampa City Hall",
                    "Citizens Bank Building"
                ]
            ],
            "y_data": [
                [
                    537,
                    160,
                    145
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, show in desc by the Y.",
            "Show the names and heights of buildings with at least two institutions founded after 1880 Plot them as bar chart, and I want to show Y-axis in descending order."
        ]
    },
    "2640@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Institution",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Dakota State University",
                    "Haskell Indian Nations University",
                    "Lindenwood University–Belleville",
                    "Valley City State University"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show institution names along with the number of proteins for each institution, and rank by the Institution in asc.",
            "Show institution names along with the number of proteins for each institution in a bar chart, and I want to list from low to high by the X."
        ]
    },
    "2640@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Institution",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Valley City State University",
                    "Lindenwood University–Belleville",
                    "Haskell Indian Nations University",
                    "Dakota State University"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show institution names along with the number of proteins for each institution in a bar chart, and rank by the X in descending.",
            "Show institution names along with the number of proteins for each institution, and display names in descending order."
        ]
    },
    "2640@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Institution",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Dakota State University",
                    "Haskell Indian Nations University",
                    "Valley City State University",
                    "Lindenwood University–Belleville"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show institution names along with the number of proteins for each institution in a bar chart, and I want to display by the total number in ascending.",
            "Show institution names along with the number of proteins for each institution, I want to show by the total number from low to high."
        ]
    },
    "2640@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Institution",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Lindenwood University–Belleville",
                    "Valley City State University",
                    "Haskell Indian Nations University",
                    "Dakota State University"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show institution names along with the number of proteins for each institution, sort Y-axis from high to low order.",
            "Show institution names along with the number of proteins for each institution in a bar chart, and order by the y-axis in desc."
        ]
    },
    "2327@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY Trade_Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY Trade_Name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "medicine_enzyme_interaction",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Trade_Name",
            "y_name": "id",
            "x_data": [
                [
                    "Abilify",
                    "Saphris"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "what is the id and trade name of the medicines can interact with at least 3 enzymes?, I want to order from low to high by the x axis.",
            "Show me a bar chart for what is the id and trade name of the medicines can interact with at least 3 enzymes?, and show X in asc order.",
            "Visualize a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, display Trade_Name in ascending order.",
            "What are the ids and trade names of the medicine that can interact with at least 3 enzymes, and show from low to high by the Trade_Name.",
            "What is the id and trade name of the medicines can interact with at least 3 enzymes, rank by the Trade_Name in asc please.",
            "Show me a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, and I want to order from low to high by the x axis."
        ]
    },
    "2327@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY Trade_Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY Trade_Name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "medicine_enzyme_interaction",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Trade_Name",
            "y_name": "id",
            "x_data": [
                [
                    "Saphris",
                    "Abilify"
                ]
            ],
            "y_data": [
                [
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the id and trade name of the medicines can interact with at least 3 enzymes, I want to list in desc by the Trade_Name.",
            "what is the id and trade name of the medicines can interact with at least 3 enzymes?, and I want to show by the x axis from high to low.",
            "Show me a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, list by the X-axis from high to low.",
            "What are the ids and trade names of the medicine that can interact with at least 3 enzymes, and list by the X-axis from high to low.",
            "Show me a bar chart for what is the id and trade name of the medicines can interact with at least 3 enzymes?, and I want to show by the x axis from high to low.",
            "Visualize a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, could you sort x-axis in desc order?"
        ]
    },
    "2327@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "medicine_enzyme_interaction",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Trade_Name",
            "y_name": "id",
            "x_data": [
                [
                    "Abilify",
                    "Saphris"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, rank by the id in asc.",
            "Visualize a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, could you display Y-axis in ascending order?",
            "Show me a bar chart for what is the id and trade name of the medicines can interact with at least 3 enzymes?, sort total number in ascending order please.",
            "What are the ids and trade names of the medicine that can interact with at least 3 enzymes, and list in asc by the Y-axis.",
            "What is the id and trade name of the medicines can interact with at least 3 enzymes, list y-axis in asc order.",
            "what is the id and trade name of the medicines can interact with at least 3 enzymes?, and could you order in ascending by the Y-axis?"
        ]
    },
    "2327@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "medicine_enzyme_interaction",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Trade_Name",
            "y_name": "id",
            "x_data": [
                [
                    "Saphris",
                    "Abilify"
                ]
            ],
            "y_data": [
                [
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the ids and trade names of the medicine that can interact with at least 3 enzymes, and I want to list in descending by the y axis.",
            "Show me a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, sort y-axis in desc order.",
            "what is the id and trade name of the medicines can interact with at least 3 enzymes?, I want to list in descending by the y axis.",
            "Show me a bar chart for what is the id and trade name of the medicines can interact with at least 3 enzymes?, and show total number from high to low order.",
            "What is the id and trade name of the medicines can interact with at least 3 enzymes, and could you show in desc by the total number?",
            "Visualize a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, and show total number from high to low order."
        ]
    },
    "2329@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "medicine_enzyme_interaction",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "Aripiprazole",
                    "Asenapine",
                    "Iloperidone",
                    "Ziprasidone"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    8,
                    20
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the ids and names of the medicine that can interact with two or more enzymes Visualize by bar chart, show by the x-axis in asc.",
            "Visualize a bar chart for what are the ids and names of the medicine that can interact with two or more enzymes?, and rank by the bars in ascending.",
            "A bar chart about what are the ids and names of the medicine that can interact with two or more enzymes?, could you order by the X in ascending?"
        ]
    },
    "2329@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "medicine_enzyme_interaction",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "Ziprasidone",
                    "Iloperidone",
                    "Asenapine",
                    "Aripiprazole"
                ]
            ],
            "y_data": [
                [
                    20,
                    8,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the ids and names of the medicine that can interact with two or more enzymes Visualize by bar chart, and could you show by the name in desc?",
            "Visualize a bar chart for what are the ids and names of the medicine that can interact with two or more enzymes?, and order by the X-axis from high to low.",
            "A bar chart about what are the ids and names of the medicine that can interact with two or more enzymes?, and order by the X-axis from high to low."
        ]
    },
    "2329@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "medicine_enzyme_interaction",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "Aripiprazole",
                    "Asenapine",
                    "Iloperidone",
                    "Ziprasidone"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    8,
                    20
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for what are the ids and names of the medicine that can interact with two or more enzymes?, and sort Y in ascending order please.",
            "What are the ids and names of the medicine that can interact with two or more enzymes Visualize by bar chart, could you order id from low to high order?",
            "A bar chart about what are the ids and names of the medicine that can interact with two or more enzymes?, could you show total number from low to high order?"
        ]
    },
    "2329@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "medicine_enzyme_interaction",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "Ziprasidone",
                    "Iloperidone",
                    "Asenapine",
                    "Aripiprazole"
                ]
            ],
            "y_data": [
                [
                    20,
                    8,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for what are the ids and names of the medicine that can interact with two or more enzymes?, display from high to low by the id.",
            "What are the ids and names of the medicine that can interact with two or more enzymes Visualize by bar chart, and order by the Y from high to low.",
            "A bar chart about what are the ids and names of the medicine that can interact with two or more enzymes?, and show in descending by the y axis please."
        ]
    },
    "1521@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gymnast",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Hometown",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Bonao",
                    "Los Alcarrizos",
                    "Santiago de los Caballeros",
                    "Santo Domingo"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a bar chart on how many gymnasts are from each hometown?, sort in ascending by the Hometown.",
            "How many gymnasts are from each hometown Plot them as bar chart, and show Hometown from low to high order.",
            "Display a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, show Hometown from low to high order.",
            "Show me a bar chart for how many gymnasts are from each hometown?, and display X in asc order.",
            "What are the hometowns of gymnasts and the corresponding number of gymnasts, rank bars in ascending order.",
            "Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, could you show in asc by the X?"
        ]
    },
    "1521@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gymnast",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Hometown",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Santo Domingo",
                    "Santiago de los Caballeros",
                    "Los Alcarrizos",
                    "Bonao"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me a bar chart for how many gymnasts are from each hometown?, and rank bars from high to low order.",
            "How many gymnasts are from each hometown Plot them as bar chart, order x axis in desc order.",
            "Return a bar chart on how many gymnasts are from each hometown?, display by the x axis in descending.",
            "What are the hometowns of gymnasts and the corresponding number of gymnasts, and order x axis in desc order.",
            "Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, display by the x axis in descending.",
            "Display a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, rank x-axis in descending order."
        ]
    },
    "1521@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gymnast",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Hometown",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Bonao",
                    "Los Alcarrizos",
                    "Santiago de los Caballeros",
                    "Santo Domingo"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the hometowns of gymnasts and the corresponding number of gymnasts, and rank y-axis in ascending order.",
            "Return a bar chart on how many gymnasts are from each hometown?, and rank by the Y from low to high.",
            "How many gymnasts are from each hometown Plot them as bar chart, rank in asc by the total number please.",
            "Show me a bar chart for how many gymnasts are from each hometown?, and I want to show from low to high by the total number.",
            "Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, and rank by the Y from low to high.",
            "Display a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, and rank y-axis in ascending order."
        ]
    },
    "1521@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gymnast",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Hometown",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Santo Domingo",
                    "Santiago de los Caballeros",
                    "Los Alcarrizos",
                    "Bonao"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show me a bar chart for how many gymnasts are from each hometown?, could you sort by the Y-axis from high to low?",
            "How many gymnasts are from each hometown Plot them as bar chart, and I want to rank y-axis in desc order.",
            "Display a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, display in descending by the Y-axis.",
            "Return a bar chart on how many gymnasts are from each hometown?, could you sort by the Y-axis from high to low?",
            "What are the hometowns of gymnasts and the corresponding number of gymnasts, display in descending by the the total number .",
            "Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, and could you sort by the Y-axis from high to low?"
        ]
    },
    "2156@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details ORDER BY cmi_details ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details ORDER BY cmi_details ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_mdm",
        "vis_obj": {
            "chart": "bar",
            "x_name": "cmi_details",
            "y_name": "COUNT(cmi_details)",
            "x_data": [
                [
                    "Reynolds-McClure",
                    "Schmidt, Kertzmann and Lubowitz",
                    "Schmitt-Lang",
                    "Volkman, Mills and Ferry"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY cmi_details"
        },
        "nl_queries": [
            "what are the details of the cmi masters that have the cross reference code 'Tax', and count them by a bar chart, could you order in ascending by the x-axis?"
        ]
    },
    "2156@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details ORDER BY cmi_details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details ORDER BY cmi_details DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_mdm",
        "vis_obj": {
            "chart": "bar",
            "x_name": "cmi_details",
            "y_name": "COUNT(cmi_details)",
            "x_data": [
                [
                    "Volkman, Mills and Ferry",
                    "Schmitt-Lang",
                    "Schmidt, Kertzmann and Lubowitz",
                    "Reynolds-McClure"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY cmi_details"
        },
        "nl_queries": [
            "what are the details of the cmi masters that have the cross reference code 'Tax', and count them by a bar chart, and I want to display bars from high to low order."
        ]
    },
    "2156@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details ORDER BY COUNT(cmi_details) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details ORDER BY COUNT(cmi_details) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_mdm",
        "vis_obj": {
            "chart": "bar",
            "x_name": "cmi_details",
            "y_name": "COUNT(cmi_details)",
            "x_data": [
                [
                    "Reynolds-McClure",
                    "Schmidt, Kertzmann and Lubowitz",
                    "Schmitt-Lang",
                    "Volkman, Mills and Ferry"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY cmi_details"
        },
        "nl_queries": [
            "what are the details of the cmi masters that have the cross reference code 'Tax', and count them by a bar chart, and display from low to high by the y-axis."
        ]
    },
    "2156@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details ORDER BY COUNT(cmi_details) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details ORDER BY COUNT(cmi_details) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_mdm",
        "vis_obj": {
            "chart": "bar",
            "x_name": "cmi_details",
            "y_name": "COUNT(cmi_details)",
            "x_data": [
                [
                    "Volkman, Mills and Ferry",
                    "Schmitt-Lang",
                    "Schmidt, Kertzmann and Lubowitz",
                    "Reynolds-McClure"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY cmi_details"
        },
        "nl_queries": [
            "what are the details of the cmi masters that have the cross reference code 'Tax', and count them by a bar chart, and rank by the y-axis in desc."
        ]
    },
    "2337@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "Ighil Mgoun",
                    "Mount Cameroon",
                    "Taska n’Zat"
                ]
            ],
            "y_data": [
                [
                    14,
                    12,
                    20
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a bar chart on what are the id and name of the mountains that have at least 2 photos?, could you order by the bars in ascending please?",
            "What are the id and name of the mountains that have at least 2 photos Show bar chart, and could you order in ascending by the x-axis?",
            "Draw a bar chart for what are the id and name of the mountains that have at least 2 photos?, could you order names from low to high order?"
        ]
    },
    "2337@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "Taska n’Zat",
                    "Mount Cameroon",
                    "Ighil Mgoun"
                ]
            ],
            "y_data": [
                [
                    20,
                    12,
                    14
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a bar chart on what are the id and name of the mountains that have at least 2 photos?, list from high to low by the bar.",
            "Draw a bar chart for what are the id and name of the mountains that have at least 2 photos?, sort by the bars in descending.",
            "What are the id and name of the mountains that have at least 2 photos Show bar chart, and list by the bar in descending please."
        ]
    },
    "2337@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.id ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.id ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "Mount Cameroon",
                    "Ighil Mgoun",
                    "Taska n’Zat"
                ]
            ],
            "y_data": [
                [
                    12,
                    14,
                    20
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the id and name of the mountains that have at least 2 photos Show bar chart, order from low to high by the y axis.",
            "Return a bar chart on what are the id and name of the mountains that have at least 2 photos?, I want to list by the y-axis from low to high.",
            "Draw a bar chart for what are the id and name of the mountains that have at least 2 photos?, I want to sort by the id in asc."
        ]
    },
    "2337@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.id DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.id DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "id",
            "x_data": [
                [
                    "Taska n’Zat",
                    "Ighil Mgoun",
                    "Mount Cameroon"
                ]
            ],
            "y_data": [
                [
                    20,
                    14,
                    12
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the id and name of the mountains that have at least 2 photos Show bar chart, sort Y in descending order.",
            "Draw a bar chart for what are the id and name of the mountains that have at least 2 photos?, sort in desc by the Y.",
            "Return a bar chart on what are the id and name of the mountains that have at least 2 photos?, and could you order in desc by the id please?"
        ]
    },
    "2347@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY T1.name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY T1.name ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Olympus 15mm f/8.0 Body Cap",
                    "Sigma 19mm f2.8 EX DN"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "A bar chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, list in asc by the x-axis.",
            "What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, could you list by the name in ascending?",
            "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a bar chart, sort by the x axis in asc."
        ]
    },
    "2347@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY T1.name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY T1.name DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Sigma 19mm f2.8 EX DN",
                    "Olympus 15mm f/8.0 Body Cap"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "A bar chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, and sort by the names in descending please.",
            "What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, and show bar from high to low order.",
            "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a bar chart, and could you display in descending by the names?"
        ]
    },
    "2347@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY COUNT(T1.name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY COUNT(T1.name) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Olympus 15mm f/8.0 Body Cap",
                    "Sigma 19mm f2.8 EX DN"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, sort by the total number in asc.",
            "A bar chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, and sort by the how many name from low to high please.",
            "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a bar chart, rank by the y-axis in asc."
        ]
    },
    "2347@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY COUNT(T1.name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY COUNT(T1.name) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Sigma 19mm f2.8 EX DN",
                    "Olympus 15mm f/8.0 Body Cap"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name"
        },
        "nl_queries": [
            "A bar chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, show from high to low by the Y-axis.",
            "What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, and show in desc by the how many name please.",
            "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a bar chart, sort y-axis in desc order."
        ]
    },
    "2349@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY brand ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY brand ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "brand",
            "y_name": "COUNT(brand)",
            "x_data": [
                [
                    "Olympus",
                    "Panasonic",
                    "Schneider Kreuznach",
                    "Sigma"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY brand"
        },
        "nl_queries": [
            "Group and count brand for each camera lens using a bar chart, sort by the bar in ascending.",
            "Show the number of brand from each brand, show brand in ascending order."
        ]
    },
    "2349@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY brand DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY brand DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "brand",
            "y_name": "COUNT(brand)",
            "x_data": [
                [
                    "Sigma",
                    "Schneider Kreuznach",
                    "Panasonic",
                    "Olympus"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY brand"
        },
        "nl_queries": [
            "Show the number of brand from each brand, and list x-axis in desc order.",
            "Group and count brand for each camera lens using a bar chart, and rank X in descending order."
        ]
    },
    "2349@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY COUNT(brand) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY COUNT(brand) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "brand",
            "y_name": "COUNT(brand)",
            "x_data": [
                [
                    "Schneider Kreuznach",
                    "Olympus",
                    "Panasonic",
                    "Sigma"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY brand"
        },
        "nl_queries": [
            "Group and count brand for each camera lens using a bar chart, and rank in asc by the total number.",
            "Show the number of brand from each brand, order total number in ascending order."
        ]
    },
    "2349@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY COUNT(brand) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY COUNT(brand) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "brand",
            "y_name": "COUNT(brand)",
            "x_data": [
                [
                    "Sigma",
                    "Panasonic",
                    "Olympus",
                    "Schneider Kreuznach"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY brand"
        },
        "nl_queries": [
            "Group and count brand for each camera lens using a bar chart, list in desc by the total number.",
            "Show the number of brand from each brand, and I want to show by the how many brand from high to low."
        ]
    },
    "2351@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY color ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY color ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "color",
            "y_name": "COUNT(color)",
            "x_data": [
                [
                    "Black/White",
                    "RBG"
                ]
            ],
            "y_data": [
                [
                    2,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY color"
        },
        "nl_queries": [
            "Please draw a bar chart to show the total number of different color, rank names in asc order.",
            "Compare the number of items in each color scheme using a bar chart, and I want to display by the x axis from low to high.",
            "Bar chart x axis color y axis the number of color, sort in ascending by the x-axis please."
        ]
    },
    "2351@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY color DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY color DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "color",
            "y_name": "COUNT(color)",
            "x_data": [
                [
                    "RBG",
                    "Black/White"
                ]
            ],
            "y_data": [
                [
                    8,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY color"
        },
        "nl_queries": [
            "Please draw a bar chart to show the total number of different color, I want to show X from high to low order.",
            "Bar chart x axis color y axis the number of color, sort in desc by the x-axis.",
            "Compare the number of items in each color scheme using a bar chart, rank by the color from high to low."
        ]
    },
    "2351@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY COUNT(color) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY COUNT(color) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "color",
            "y_name": "COUNT(color)",
            "x_data": [
                [
                    "Black/White",
                    "RBG"
                ]
            ],
            "y_data": [
                [
                    2,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY color"
        },
        "nl_queries": [
            "Please draw a bar chart to show the total number of different color, could you rank Y-axis from low to high order?",
            "Bar chart x axis color y axis the number of color, show in ascending by the y axis please.",
            "Compare the number of items in each color scheme using a bar chart, could you rank Y-axis from low to high order?"
        ]
    },
    "2351@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY COUNT(color) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY COUNT(color) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "color",
            "y_name": "COUNT(color)",
            "x_data": [
                [
                    "RBG",
                    "Black/White"
                ]
            ],
            "y_data": [
                [
                    8,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY color"
        },
        "nl_queries": [
            "Please draw a bar chart to show the total number of different color, and sort by the Y-axis from high to low.",
            "Bar chart x axis color y axis the number of color, and I want to sort how many color from high to low order.",
            "Compare the number of items in each color scheme using a bar chart, and sort Y in desc order."
        ]
    },
    "2596@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "attribute_name",
            "y_name": "COUNT(attribute_name)",
            "x_data": [
                [
                    "Black",
                    "Sweet",
                    "Yellow"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY attribute_name"
        },
        "nl_queries": [
            "Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, sort in ascending by the x axis.",
            "Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name, rank from low to high by the names please."
        ]
    },
    "2596@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "attribute_name",
            "y_name": "COUNT(attribute_name)",
            "x_data": [
                [
                    "Yellow",
                    "Sweet",
                    "Black"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY attribute_name"
        },
        "nl_queries": [
            "Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name, I want to show from high to low by the X.",
            "Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, list from high to low by the x axis."
        ]
    },
    "2596@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "attribute_name",
            "y_name": "COUNT(attribute_name)",
            "x_data": [
                [
                    "Yellow",
                    "Black",
                    "Sweet"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY attribute_name"
        },
        "nl_queries": [
            "Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name, and show total number from low to high order.",
            "Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, show y axis in asc order."
        ]
    },
    "2596@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "attribute_name",
            "y_name": "COUNT(attribute_name)",
            "x_data": [
                [
                    "Sweet",
                    "Black",
                    "Yellow"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY attribute_name"
        },
        "nl_queries": [
            "Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name, and I want to display the number of attribute name in descending order.",
            "Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, I want to display the number of attribute name in descending order."
        ]
    },
    "2600@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name ORDER BY COUNT(date_of_publication) ASC",
                "binning": "BIN date_of_publication BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name ORDER BY COUNT(date_of_publication) ASC BIN date_of_publication BY YEAR"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_publication",
            "y_name": "COUNT(date_of_publication)",
            "x_data": [
                [
                    "2011",
                    "2012"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ],
                [
                    2,
                    2
                ]
            ],
            "classify": [
                "Coffee Bean",
                "Jam"
            ],
            "describe": "GROUP BY catalog_name, BIN date_of_publication BY YEAR"
        },
        "nl_queries": [
            "Find the names and publication dates of all catalogs that have catalog level number greater than 5 Bin publication dates into Year interval, and count catalog and group by catalog name, order the number of date of publication from low to high order."
        ]
    },
    "2600@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name ORDER BY COUNT(date_of_publication) DESC",
                "binning": "BIN date_of_publication BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name ORDER BY COUNT(date_of_publication) DESC BIN date_of_publication BY YEAR"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_publication",
            "y_name": "COUNT(date_of_publication)",
            "x_data": [
                [
                    "2012",
                    "2011"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ],
                [
                    2,
                    2
                ]
            ],
            "classify": [
                "Coffee Bean",
                "Jam"
            ],
            "describe": "GROUP BY catalog_name, BIN date_of_publication BY YEAR"
        },
        "nl_queries": [
            "Find the names and publication dates of all catalogs that have catalog level number greater than 5 Bin publication dates into Year interval, and count catalog and group by catalog name, and display Y in descending order please."
        ]
    },
    "2601@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5  ORDER BY COUNT(date_of_publication) ASC",
                "binning": "BIN date_of_publication BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5  ORDER BY COUNT(date_of_publication) ASC BIN date_of_publication BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_publication",
            "y_name": "COUNT(date_of_publication)",
            "x_data": [
                [
                    "Mon",
                    "Sat",
                    "Sun",
                    "Thur",
                    "Tue",
                    "Wed",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_publication BY WEEKDAY"
        },
        "nl_queries": [
            "Find the names and publication dates of all catalogs that have catalog level numbers greater than 5 Bin publication dates into Year interval, and count catalog as a bar chart, display by the Y from low to high."
        ]
    },
    "2601@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5  ORDER BY COUNT(date_of_publication) DESC",
                "binning": "BIN date_of_publication BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5  ORDER BY COUNT(date_of_publication) DESC BIN date_of_publication BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_publication",
            "y_name": "COUNT(date_of_publication)",
            "x_data": [
                [
                    "Fri",
                    "Wed",
                    "Tue",
                    "Thur",
                    "Sun",
                    "Sat",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_publication BY WEEKDAY"
        },
        "nl_queries": [
            "Find the names and publication dates of all catalogs that have catalog level numbers greater than 5 Bin publication dates into Year interval, and count catalog as a bar chart, and could you order Y-axis from high to low order?"
        ]
    },
    "2602@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) ASC",
                "binning": "BIN date_of_latest_revision BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) ASC BIN date_of_latest_revision BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_latest_revision",
            "y_name": "COUNT(date_of_latest_revision)",
            "x_data": [
                [
                    "Fri",
                    "Sat",
                    "Sun",
                    "Wed",
                    "Mon",
                    "Tue",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_latest_revision BY WEEKDAY"
        },
        "nl_queries": [
            "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a bar chart, and rank Y from low to high order.",
            "Bar chart x axis date of latest revision y axis the number of date of latest revision, and display y axis in ascending order please."
        ]
    },
    "2602@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) DESC",
                "binning": "BIN date_of_latest_revision BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) DESC BIN date_of_latest_revision BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_latest_revision",
            "y_name": "COUNT(date_of_latest_revision)",
            "x_data": [
                [
                    "Thur",
                    "Tue",
                    "Mon",
                    "Wed",
                    "Sun",
                    "Sat",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_latest_revision BY WEEKDAY"
        },
        "nl_queries": [
            "Bar chart x axis date of latest revision y axis the number of date of latest revision, could you rank in desc by the Y-axis?",
            "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a bar chart, and I want to list in desc by the Y-axis."
        ]
    },
    "2603@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision ASC",
                "binning": "BIN date_of_latest_revision BY MONTH"
            },
            "VQL": "Visualize LINE SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision ASC BIN date_of_latest_revision BY MONTH"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_latest_revision",
            "y_name": "COUNT(date_of_latest_revision)",
            "x_data": [
                [
                    "Apr",
                    "Aug",
                    "Dec",
                    "July",
                    "June",
                    "Mar",
                    "May",
                    "Nov",
                    "Oct",
                    "Sept"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_latest_revision BY MONTH"
        },
        "nl_queries": [
            "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a line chart, sort by the x axis from low to high.",
            "Plot date of latest revision by the number of date of latest revision as a line chart, rank by the x axis in asc please.",
            "On which days more than one revisions were made on catalogs, bin the date into weekday interval and count them to show the trend, list in asc by the date_of_latest_revision please."
        ]
    },
    "2603@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision DESC",
                "binning": "BIN date_of_latest_revision BY MONTH"
            },
            "VQL": "Visualize LINE SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision DESC BIN date_of_latest_revision BY MONTH"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_latest_revision",
            "y_name": "COUNT(date_of_latest_revision)",
            "x_data": [
                [
                    "Sept",
                    "Oct",
                    "Nov",
                    "May",
                    "Mar",
                    "June",
                    "July",
                    "Dec",
                    "Aug",
                    "Apr"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_latest_revision BY MONTH"
        },
        "nl_queries": [
            "On which days more than one revisions were made on catalogs, bin the date into weekday interval and count them to show the trend, and sort by the date_of_latest_revision in descending.",
            "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a line chart, I want to order by the x axis from high to low please.",
            "Plot date of latest revision by the number of date of latest revision as a line chart, and list date_of_latest_revision from high to low order."
        ]
    },
    "2605@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_level_name",
            "y_name": "catalog_level_number",
            "x_data": [
                [
                    "Product",
                    "Sub-Category"
                ]
            ],
            "y_data": [
                [
                    9,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and level of catalog structure with level between 5 and 10, rank by the bars in asc.",
            "Visualize a bar chart for what are the name and level of catalog structure with level number between 5 and 10, list from low to high by the X-axis.",
            "What are the name and level of catalog structure with level number between 5 and 1 Show bar chart, and list from low to high by the X-axis.",
            "Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10, could you order X-axis from low to high order?"
        ]
    },
    "2605@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_level_name",
            "y_name": "catalog_level_number",
            "x_data": [
                [
                    "Sub-Category",
                    "Product"
                ]
            ],
            "y_data": [
                [
                    8,
                    9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for what are the name and level of catalog structure with level number between 5 and 10, and show from high to low by the x-axis.",
            "Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10, list by the x axis in desc.",
            "What are the name and level of catalog structure with level number between 5 and 1 Show bar chart, and list names in desc order please.",
            "Find the name and level of catalog structure with level between 5 and 10, could you sort by the catalog_level_name from high to low?"
        ]
    },
    "2605@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_level_name",
            "y_name": "catalog_level_number",
            "x_data": [
                [
                    "Sub-Category",
                    "Product"
                ]
            ],
            "y_data": [
                [
                    8,
                    9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the name and level of catalog structure with level number between 5 and 1 Show bar chart, and display in ascending by the y-axis.",
            "Visualize a bar chart for what are the name and level of catalog structure with level number between 5 and 10, and I want to list in ascending by the y axis.",
            "Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10, and sort y-axis in asc order.",
            "Find the name and level of catalog structure with level between 5 and 10, and list by the y axis in ascending."
        ]
    },
    "2605@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_level_name",
            "y_name": "catalog_level_number",
            "x_data": [
                [
                    "Product",
                    "Sub-Category"
                ]
            ],
            "y_data": [
                [
                    9,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10, and could you sort Y-axis from high to low order?",
            "What are the name and level of catalog structure with level number between 5 and 1 Show bar chart, and rank by the Y-axis in descending.",
            "Find the name and level of catalog structure with level between 5 and 10, show by the total number from high to low.",
            "Visualize a bar chart for what are the name and level of catalog structure with level number between 5 and 10, and rank total number in descending order."
        ]
    },
    "2607@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_entry_name",
            "y_name": "capacity",
            "x_data": [
                [
                    "Diet Mountain Dew",
                    "Diet Pepsi",
                    "Dr Pepper",
                    "Sprite Lemo",
                    "Vimto"
                ]
            ],
            "y_data": [
                [
                    8,
                    9,
                    1,
                    8,
                    6
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and capacity of products with price greater than 700 (in USD) Show bar chart, I want to list in asc by the x axis.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, list by the X in ascending.",
            "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, display by the names from low to high please.",
            "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, order in asc by the x-axis.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, and I want to list in asc by the x axis."
        ]
    },
    "2607@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_entry_name",
            "y_name": "capacity",
            "x_data": [
                [
                    "Vimto",
                    "Sprite Lemo",
                    "Dr Pepper",
                    "Diet Pepsi",
                    "Diet Mountain Dew"
                ]
            ],
            "y_data": [
                [
                    6,
                    8,
                    1,
                    9,
                    8
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, list in desc by the x-axis.",
            "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, could you sort bars in desc order?",
            "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, show bar from high to low order.",
            "Find the name and capacity of products with price greater than 700 (in USD) Show bar chart, could you list x axis in desc order?",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, and could you list catalog_entry_name from high to low order please?"
        ]
    },
    "2607@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_entry_name",
            "y_name": "capacity",
            "x_data": [
                [
                    "Dr Pepper",
                    "Vimto",
                    "Diet Mountain Dew",
                    "Sprite Lemo",
                    "Diet Pepsi"
                ]
            ],
            "y_data": [
                [
                    1,
                    6,
                    8,
                    8,
                    9
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and capacity of products with price greater than 700 (in USD) Show bar chart, and show Y-axis in ascending order.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, list total number in ascending order.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, could you order capacity in asc order please?",
            "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, order in asc by the y axis please.",
            "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, and display by the Y-axis from low to high please."
        ]
    },
    "2607@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_entry_name",
            "y_name": "capacity",
            "x_data": [
                [
                    "Diet Pepsi",
                    "Sprite Lemo",
                    "Diet Mountain Dew",
                    "Vimto",
                    "Dr Pepper"
                ]
            ],
            "y_data": [
                [
                    9,
                    8,
                    8,
                    6,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, I want to show in desc by the y axis.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, and show y axis in descending order.",
            "Find the name and capacity of products with price greater than 700 (in USD) Show bar chart, and I want to show in desc by the y axis.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, I want to list in descending by the y-axis.",
            "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, and show by the y axis from high to low."
        ]
    },
    "2609@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_entry_name",
            "y_name": "COUNT(catalog_entry_name)",
            "x_data": [
                [
                    "Carbonated Water",
                    "Cola",
                    "Ginger Beer",
                    "Root beer"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY catalog_entry_name"
        },
        "nl_queries": [
            "What are the names of catalog entries with level number 8, and count them by a bar chart, and sort x axis from low to high order.",
            "A bar chart for what are the number of the names of catalog entries with level number 8?, I want to sort by the names in ascending.",
            "What are the number of the names of catalog entries with level number 8?, and order names in ascending order.",
            "Find the number of the names of catalog entries with level number 8, order in ascending by the names.",
            "A bar chart for finding the number of the names of catalog entries with level number 8, and order names in ascending order.",
            "Find the names of catalog entries with level number 8, and count them by a bar chart, could you display in ascending by the names?"
        ]
    },
    "2609@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_entry_name",
            "y_name": "COUNT(catalog_entry_name)",
            "x_data": [
                [
                    "Root beer",
                    "Ginger Beer",
                    "Cola",
                    "Carbonated Water"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY catalog_entry_name"
        },
        "nl_queries": [
            "A bar chart for what are the number of the names of catalog entries with level number 8?, and rank from high to low by the X-axis.",
            "What are the number of the names of catalog entries with level number 8?, rank from high to low by the X-axis.",
            "What are the names of catalog entries with level number 8, and count them by a bar chart, and order by the X in descending.",
            "A bar chart for finding the number of the names of catalog entries with level number 8, and I want to show x-axis in desc order.",
            "Find the names of catalog entries with level number 8, and count them by a bar chart, I want to show x-axis in desc order.",
            "Find the number of the names of catalog entries with level number 8, list by the x axis in desc."
        ]
    },
    "2609@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_entry_name",
            "y_name": "COUNT(catalog_entry_name)",
            "x_data": [
                [
                    "Carbonated Water",
                    "Ginger Beer",
                    "Root beer",
                    "Cola"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY catalog_entry_name"
        },
        "nl_queries": [
            "A bar chart for finding the number of the names of catalog entries with level number 8, display Y-axis in ascending order.",
            "What are the number of the names of catalog entries with level number 8?, sort by the Y in ascending.",
            "Find the names of catalog entries with level number 8, and count them by a bar chart, list by the y-axis in ascending.",
            "Find the number of the names of catalog entries with level number 8, display Y-axis in ascending order.",
            "What are the names of catalog entries with level number 8, and count them by a bar chart, and rank Y in asc order.",
            "A bar chart for what are the number of the names of catalog entries with level number 8?, and list in asc by the Y please."
        ]
    },
    "2609@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_entry_name",
            "y_name": "COUNT(catalog_entry_name)",
            "x_data": [
                [
                    "Cola",
                    "Root beer",
                    "Ginger Beer",
                    "Carbonated Water"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY catalog_entry_name"
        },
        "nl_queries": [
            "Find the number of the names of catalog entries with level number 8, and rank in descending by the y axis.",
            "A bar chart for what are the number of the names of catalog entries with level number 8?, I want to order in descending by the Y-axis.",
            "Find the names of catalog entries with level number 8, and count them by a bar chart, and rank in descending by the y axis.",
            "A bar chart for finding the number of the names of catalog entries with level number 8, and I want to rank y axis in desc order.",
            "What are the number of the names of catalog entries with level number 8?, and list by the Y in desc.",
            "What are the names of catalog entries with level number 8, and count them by a bar chart, and display from high to low by the Y-axis."
        ]
    },
    "2933@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Jeff Sluman",
                    "John Daly",
                    "Nick Price",
                    "Paul Azinger",
                    "Vijay Singh"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "how many exhibitions has each artist had?, I want to order by the bar in ascending.",
            "Show all artist names and the number of exhibitions for each artist Show bar chart, display by the bar from low to high.",
            "Show all artist names and the number of exhibitions for each artist in a bar chart, and show in asc by the bars.",
            "How many exhibitions has each artist had Plot them as bar chart, and I want to order by the bar in ascending.",
            "Return a histogram on how many exhibitions has each artist had?, and display by the bar from low to high."
        ]
    },
    "2933@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Vijay Singh",
                    "Paul Azinger",
                    "Nick Price",
                    "John Daly",
                    "Jeff Sluman"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a histogram on how many exhibitions has each artist had?, list from high to low by the Name please.",
            "Show all artist names and the number of exhibitions for each artist in a bar chart, and list x axis in desc order.",
            "how many exhibitions has each artist had?, and display from high to low by the X-axis please.",
            "How many exhibitions has each artist had Plot them as bar chart, I want to order bar in desc order please.",
            "Show all artist names and the number of exhibitions for each artist Show bar chart, show X from high to low order."
        ]
    },
    "2933@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Jeff Sluman",
                    "John Daly",
                    "Nick Price",
                    "Paul Azinger",
                    "Vijay Singh"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all artist names and the number of exhibitions for each artist in a bar chart, and show from low to high by the Y.",
            "Show all artist names and the number of exhibitions for each artist Show bar chart, list total number from low to high order.",
            "how many exhibitions has each artist had?, and could you order Y in ascending order?",
            "Return a histogram on how many exhibitions has each artist had?, list total number from low to high order.",
            "How many exhibitions has each artist had Plot them as bar chart, and list y axis in ascending order."
        ]
    },
    "2933@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Vijay Singh",
                    "Paul Azinger",
                    "Nick Price",
                    "John Daly",
                    "Jeff Sluman"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "how many exhibitions has each artist had?, and rank in descending by the Y.",
            "Show all artist names and the number of exhibitions for each artist in a bar chart, I want to order in descending by the total number.",
            "How many exhibitions has each artist had Plot them as bar chart, and display from high to low by the Y-axis.",
            "Show all artist names and the number of exhibitions for each artist Show bar chart, and display by the Y-axis in descending please.",
            "Return a histogram on how many exhibitions has each artist had?, and rank in descending by the Y."
        ]
    },
    "2935@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Attendance",
            "x_data": [
                [
                    "December 2",
                    "December 5",
                    "December 7"
                ]
            ],
            "y_data": [
                [
                    965,
                    1098,
                    2983
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart, and rank in ascending by the X-axis.",
            "Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date, I want to sort by the names in ascending."
        ]
    },
    "2935@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Attendance",
            "x_data": [
                [
                    "December 7",
                    "December 5",
                    "December 2"
                ]
            ],
            "y_data": [
                [
                    2983,
                    1098,
                    965
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart, and could you show by the bars in desc?",
            "Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date, list names in descending order."
        ]
    },
    "2935@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Attendance",
            "x_data": [
                [
                    "December 2",
                    "December 5",
                    "December 7"
                ]
            ],
            "y_data": [
                [
                    965,
                    1098,
                    2983
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart, and order y axis from low to high order please.",
            "Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date, show by the Y-axis in ascending."
        ]
    },
    "2935@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Attendance",
            "x_data": [
                [
                    "December 7",
                    "December 5",
                    "December 2"
                ]
            ],
            "y_data": [
                [
                    2983,
                    1098,
                    965
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date, could you list y-axis in desc order?",
            "Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart, list from high to low by the Attendance."
        ]
    },
    "2936@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) ASC"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year_Join",
            "y_name": "COUNT(Year_Join)",
            "x_data": [
                [
                    "1995",
                    "1996",
                    "1997",
                    "1998",
                    "1994"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    1,
                    2
                ],
                [
                    0,
                    0,
                    0,
                    2,
                    2
                ]
            ],
            "classify": [
                "Nick Price",
                "Vijay Singh"
            ],
            "describe": "GROUP BY Name, BIN Year_Join BY TIME"
        },
        "nl_queries": [
            "For artist names who are not from United States, show me a stacked that the x-axis is the Year_Join and the group by name in Y, I want to rank y axis from low to high order.",
            "For artist names who are not from the United States, how many names in each year?, and show by the how many year join in asc."
        ]
    },
    "2936@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year_Join",
            "y_name": "COUNT(Year_Join)",
            "x_data": [
                [
                    "1994",
                    "1998",
                    "1997",
                    "1996",
                    "1995"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    0,
                    0,
                    0
                ],
                [
                    2,
                    2,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [
                "Nick Price",
                "Vijay Singh"
            ],
            "describe": "GROUP BY Name, BIN Year_Join BY TIME"
        },
        "nl_queries": [
            "For artist names who are not from the United States, how many names in each year?, and I want to sort by the y axis in descending.",
            "For artist names who are not from United States, show me a stacked that the x-axis is the Year_Join and the group by name in Y, and order by the total number from high to low."
        ]
    },
    "2937@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year_Join",
            "y_name": "COUNT(Year_Join)",
            "x_data": [
                [
                    "1995",
                    "1996",
                    "1997",
                    "1994",
                    "1998"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Year_Join BY TIME"
        },
        "nl_queries": [
            "For all artist names who are not from the United States, show the total number of each year with a bar chart, I want to display Y-axis from low to high order please.",
            "For all artist names who are not from the United States, show the total number of each year, show in asc by the Y."
        ]
    },
    "2937@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year_Join",
            "y_name": "COUNT(Year_Join)",
            "x_data": [
                [
                    "1998",
                    "1994",
                    "1997",
                    "1996",
                    "1995"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Year_Join BY TIME"
        },
        "nl_queries": [
            "For all artist names who are not from the United States, show the total number of each year with a bar chart, could you order by the y axis in descending?",
            "For all artist names who are not from the United States, show the total number of each year, and rank y axis in descending order."
        ]
    },
    "2941@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Fiji",
                    "United States",
                    "Zimbabwe"
                ]
            ],
            "y_data": [
                [
                    1,
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Give me a bar chart about the number of countries in the artist table, and list by the Country in asc.",
            "Show how many country from each country, and could you show by the bars from low to high?",
            "Compare all countries with a bar chart, I want to order by the bars in asc.",
            "What is the number of countries in the artist table?, I want to order by the bars in asc."
        ]
    },
    "2941@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Zimbabwe",
                    "United States",
                    "Fiji"
                ]
            ],
            "y_data": [
                [
                    1,
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "What is the number of countries in the artist table?, I want to order from high to low by the x-axis.",
            "Give me a bar chart about the number of countries in the artist table, and could you display by the bars in descending?",
            "Show how many country from each country, show bars in desc order.",
            "Compare all countries with a bar chart, could you display by the bars in descending?"
        ]
    },
    "2941@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Fiji",
                    "Zimbabwe",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Give me a bar chart about the number of countries in the artist table, and show by the Y from low to high please.",
            "Compare all countries with a bar chart, and sort how many country in asc order.",
            "Show how many country from each country, could you list by the Y from low to high?",
            "What is the number of countries in the artist table?, I want to rank by the y-axis in ascending."
        ]
    },
    "2941@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "United States",
                    "Zimbabwe",
                    "Fiji"
                ]
            ],
            "y_data": [
                [
                    5,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Show how many country from each country, and display total number from high to low order.",
            "Give me a bar chart about the number of countries in the artist table, and list total number in descending order.",
            "Compare all countries with a bar chart, display Y-axis in desc order.",
            "What is the number of countries in the artist table?, and I want to rank how many country in descending order."
        ]
    },
    "2943@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "Fiji",
                    "United States",
                    "Zimbabwe"
                ]
            ],
            "y_data": [
                [
                    45,
                    49.6,
                    48
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "What are the average ages of artists by countries? Visualize the result with a histogram, display in ascending by the X-axis.",
            "Compare the average of artists' age by country in a bar graph, and could you show Country from low to high order?",
            "Show the average of artists' age by country, and I want to order by the X-axis in asc.",
            "Bar chart x axis country y axis the average of age, and I want to order by the Country in asc."
        ]
    },
    "2943@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "Zimbabwe",
                    "United States",
                    "Fiji"
                ]
            ],
            "y_data": [
                [
                    48,
                    49.6,
                    45
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "What are the average ages of artists by countries? Visualize the result with a histogram, order in descending by the X-axis.",
            "Compare the average of artists' age by country in a bar graph, I want to sort by the X from high to low.",
            "Show the average of artists' age by country, and I want to sort by the X from high to low.",
            "Bar chart x axis country y axis the average of age, and display by the names in desc."
        ]
    },
    "2943@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "Fiji",
                    "Zimbabwe",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    45,
                    48,
                    49.6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "What are the average ages of artists by countries? Visualize the result with a histogram, and I want to display in asc by the total number.",
            "Compare the average of artists' age by country in a bar graph, could you rank in ascending by the total number?",
            "Show the average of artists' age by country, I want to rank Y in ascending order.",
            "Bar chart x axis country y axis the average of age, and I want to show by the y-axis in asc please."
        ]
    },
    "2943@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "United States",
                    "Zimbabwe",
                    "Fiji"
                ]
            ],
            "y_data": [
                [
                    49.6,
                    48,
                    45
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country"
        },
        "nl_queries": [
            "Bar chart x axis country y axis the average of age, sort in desc by the y-axis.",
            "What are the average ages of artists by countries? Visualize the result with a histogram, sort in descending by the Y.",
            "Show the average of artists' age by country, and sort in desc by the y-axis.",
            "Compare the average of artists' age by country in a bar graph, rank by the Y-axis in descending."
        ]
    },
    "2944@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM artist ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Jeff Sluman",
                    "John Daly",
                    "Larry Nelson",
                    "Mark Brooks",
                    "Nick Price",
                    "Paul Azinger",
                    "Vijay Singh"
                ]
            ],
            "y_data": [
                [
                    57,
                    46,
                    50,
                    48,
                    48,
                    47,
                    45
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the names and ages of artists? Show the result in a bar graph, and show x axis in asc order.",
            "Bar chart x axis name y axis age, and display in ascending by the X-axis.",
            "Show all artist names and ages in a histogram, list from low to high by the bars.",
            "A bar chart compares the ages of all artists, rank by the X from low to high."
        ]
    },
    "2944@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM artist ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Vijay Singh",
                    "Paul Azinger",
                    "Nick Price",
                    "Mark Brooks",
                    "Larry Nelson",
                    "John Daly",
                    "Jeff Sluman"
                ]
            ],
            "y_data": [
                [
                    45,
                    47,
                    48,
                    48,
                    50,
                    46,
                    57
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show all artist names and ages in a histogram, could you sort bar from high to low order?",
            "Bar chart x axis name y axis age, and I want to order from high to low by the bars.",
            "A bar chart compares the ages of all artists, and rank in desc by the names.",
            "What are the names and ages of artists? Show the result in a bar graph, and I want to rank names in descending order."
        ]
    },
    "2944@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM artist ORDER BY Age ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Age ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Vijay Singh",
                    "John Daly",
                    "Paul Azinger",
                    "Mark Brooks",
                    "Nick Price",
                    "Larry Nelson",
                    "Jeff Sluman"
                ]
            ],
            "y_data": [
                [
                    45,
                    46,
                    47,
                    48,
                    48,
                    50,
                    57
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis name y axis age, and rank Y in asc order.",
            "Show all artist names and ages in a histogram, rank Y in asc order.",
            "What are the names and ages of artists? Show the result in a bar graph, and sort by the total number in ascending.",
            "A bar chart compares the ages of all artists, sort by the total number in ascending."
        ]
    },
    "2944@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM artist ORDER BY Age DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Age DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Jeff Sluman",
                    "Larry Nelson",
                    "Nick Price",
                    "Mark Brooks",
                    "Paul Azinger",
                    "John Daly",
                    "Vijay Singh"
                ]
            ],
            "y_data": [
                [
                    57,
                    50,
                    48,
                    48,
                    47,
                    46,
                    45
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Bar chart x axis name y axis age, and show Age in desc order.",
            "Show all artist names and ages in a histogram, list Y from high to low order.",
            "What are the names and ages of artists? Show the result in a bar graph, list y axis in descending order.",
            "A bar chart compares the ages of all artists, I want to display in desc by the Y-axis please."
        ]
    },
    "2946@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) ASC"
        },
        "chart": "Stacked Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "2009",
                    "2008",
                    "2006",
                    "2004",
                    "2005",
                    "2007"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ],
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    2
                ],
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    2
                ],
                [
                    1,
                    1,
                    2,
                    2,
                    2,
                    2
                ],
                [
                    1,
                    2,
                    2,
                    2,
                    2,
                    2
                ],
                [
                    2,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [
                "Christmas Tree",
                "Christmas stocking",
                "Santa Claus",
                "Santa Claus and Rudolph the Red-Nosed Reindeer",
                "Spring",
                "Summer"
            ],
            "describe": "GROUP BY Theme, BIN Year BY TIME"
        },
        "nl_queries": [
            "Stacked bar of year and the number of year colored by Theme, and sort from low to high by the y-axis.",
            "Group by the theme and count the year with a stacked bar chart, I want to list by the the number of year from low to high."
        ]
    },
    "2946@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "2007",
                    "2005",
                    "2004",
                    "2006",
                    "2008",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ],
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    1
                ],
                [
                    2,
                    2,
                    2,
                    1,
                    1,
                    1
                ],
                [
                    2,
                    2,
                    2,
                    2,
                    1,
                    1
                ],
                [
                    2,
                    2,
                    2,
                    2,
                    2,
                    1
                ],
                [
                    2,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [
                "Christmas Tree",
                "Christmas stocking",
                "Santa Claus",
                "Santa Claus and Rudolph the Red-Nosed Reindeer",
                "Spring",
                "Summer"
            ],
            "describe": "GROUP BY Theme, BIN Year BY TIME"
        },
        "nl_queries": [
            "Group by the theme and count the year with a stacked bar chart, and show from high to low by the the number of year please.",
            "Stacked bar of year and the number of year colored by Theme, display in desc by the Y-axis."
        ]
    },
    "2948@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) ASC",
                "binning": "BIN Year BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "Fri",
                    "Wed",
                    "Mon",
                    "Sat",
                    "Sun",
                    "Tue",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Year BY WEEKDAY"
        },
        "nl_queries": [
            "Show me how many year by year in a histogram, could you display y axis in asc order?",
            "Bin the Year into weekday interval, then group and count by Year, and I want to display by the how many year in ascending.",
            "Give a bar chart that bins year into weekday interval, group by year and count them, and I want to sort in asc by the Y-axis."
        ]
    },
    "2948@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) DESC",
                "binning": "BIN Year BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "Thur",
                    "Tue",
                    "Sun",
                    "Sat",
                    "Mon",
                    "Wed",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Year BY WEEKDAY"
        },
        "nl_queries": [
            "Bin the Year into weekday interval, then group and count by Year, display Y-axis in desc order.",
            "Give a bar chart that bins year into weekday interval, group by year and count them, display in descending by the how many year.",
            "Show me how many year by year in a histogram, and I want to list Y-axis in desc order."
        ]
    },
    "2949@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) ASC"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "2007",
                    "2008",
                    "2009",
                    "2006"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    2
                ],
                [
                    0,
                    0,
                    2,
                    2
                ]
            ],
            "classify": [
                "Santa Claus and Rudolph the Red-Nosed Reindeer",
                "Summer"
            ],
            "describe": "GROUP BY Theme, BIN Year BY TIME"
        },
        "nl_queries": [
            "Find those themes and years for all exhibitions with ticket prices lower than 15, show me a stacked bar chart that groups by themes, counts year, and the x-axis is Year, show by the Y from low to high.",
            "Find those themes and years for all exhibitions with ticket prices lower than 15, group by themes, count year, and the x-axis is Year, show from low to high by the y-axis."
        ]
    },
    "2949@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "2006",
                    "2009",
                    "2008",
                    "2007"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    0,
                    0
                ],
                [
                    2,
                    2,
                    0,
                    0
                ]
            ],
            "classify": [
                "Santa Claus and Rudolph the Red-Nosed Reindeer",
                "Summer"
            ],
            "describe": "GROUP BY Theme, BIN Year BY TIME"
        },
        "nl_queries": [
            "Find those themes and years for all exhibitions with ticket prices lower than 15, group by themes, count year, and the x-axis is Year, show y-axis in descending order.",
            "Find those themes and years for all exhibitions with ticket prices lower than 15, show me a stacked bar chart that groups by themes, counts year, and the x-axis is Year, I want to show how many year in descending order."
        ]
    },
    "2950@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "2007",
                    "2008",
                    "2006",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Year BY TIME"
        },
        "nl_queries": [
            "Find those years for all exhibitions with ticket prices lower than 15, return a bar chart that groups by year and counts the total number of years, and I want to display in ascending by the total number.",
            "Find those years for all exhibitions with ticket prices lower than 15, group by year, and count year, and order by the Y from low to high."
        ]
    },
    "2950@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "2009",
                    "2006",
                    "2008",
                    "2007"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Year BY TIME"
        },
        "nl_queries": [
            "Find those years for all exhibitions with ticket prices lower than 15, return a bar chart that groups by year and counts the total number of years, I want to list y axis from high to low order please.",
            "Find those years for all exhibitions with ticket prices lower than 15, group by year, and count year, and display by the the number of year from high to low."
        ]
    },
    "1967@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , count(*) FROM Rooms GROUP BY bedType ORDER BY bedType ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , count(*) FROM Rooms GROUP BY bedType ORDER BY bedType ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Double",
                    "King",
                    "Queen"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the number of rooms for each bed type Show bar chart, I want to show by the x axis in ascending.",
            "Find the number of rooms for each bed type Visualize by bar chart, and show in ascending by the bars.",
            "Return a bar chart on what are the number of rooms for each bed type?, and order by the X in ascending.",
            "Create a bar chart showing the total number across bedtype, and rank bar in asc order please.",
            "A bar chart about what are the number of rooms for each bed type?, could you show x-axis in asc order?"
        ]
    },
    "1967@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , count(*) FROM Rooms GROUP BY bedType ORDER BY bedType DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , count(*) FROM Rooms GROUP BY bedType ORDER BY bedType DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Queen",
                    "King",
                    "Double"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Create a bar chart showing the total number across bedtype, and list from high to low by the X-axis please.",
            "Return a bar chart on what are the number of rooms for each bed type?, and I want to show from high to low by the bars.",
            "A bar chart about what are the number of rooms for each bed type?, could you sort in descending by the x-axis?",
            "Find the number of rooms for each bed type Visualize by bar chart, and could you list by the bedType in desc?",
            "What are the number of rooms for each bed type Show bar chart, list from high to low by the X-axis please."
        ]
    },
    "1967@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , count(*) FROM Rooms GROUP BY bedType ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , count(*) FROM Rooms GROUP BY bedType ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Double",
                    "King",
                    "Queen"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Create a bar chart showing the total number across bedtype, and I want to show y axis from low to high order please.",
            "What are the number of rooms for each bed type Show bar chart, order by the total number from low to high.",
            "Return a bar chart on what are the number of rooms for each bed type?, and order by the total number from low to high.",
            "A bar chart about what are the number of rooms for each bed type?, display Y in asc order.",
            "Find the number of rooms for each bed type Visualize by bar chart, sort y-axis in ascending order."
        ]
    },
    "1967@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , count(*) FROM Rooms GROUP BY bedType ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , count(*) FROM Rooms GROUP BY bedType ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Queen",
                    "King",
                    "Double"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What are the number of rooms for each bed type Show bar chart, could you list by the y axis from high to low?",
            "Find the number of rooms for each bed type Visualize by bar chart, and I want to show in descending by the y axis.",
            "A bar chart about what are the number of rooms for each bed type?, show by the total number in desc.",
            "Create a bar chart showing the total number across bedtype, show by the total number in desc.",
            "Return a bar chart on what are the number of rooms for each bed type?, list in desc by the total number."
        ]
    },
    "1969@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY decor ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY decor ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    112.5,
                    162.5,
                    187.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "What is the average price of the rooms for each different decor? Show me a bar chart!, and I want to order in ascending by the x-axis.",
            "Please use a bar chart to show the average price of the rooms in a different decor, and sort from low to high by the X please.",
            "Show the average price of the rooms in different decor using a bar chart, sort from low to high by the X please.",
            "Give me a bar chart for the average of baseprice of each decor, and list from low to high by the decor."
        ]
    },
    "1969@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY decor DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY decor DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "traditional",
                    "rustic",
                    "modern"
                ]
            ],
            "y_data": [
                [
                    187.5,
                    162.5,
                    112.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a bar chart for the average of baseprice of each decor, and list by the bar in descending please.",
            "Please use a bar chart to show the average price of the rooms in a different decor, list bars in descending order please.",
            "What is the average price of the rooms for each different decor? Show me a bar chart!, list by the x-axis in descending.",
            "Show the average price of the rooms in different decor using a bar chart, could you sort X in descending order?"
        ]
    },
    "1969@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY avg(basePrice) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY avg(basePrice) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    112.5,
                    162.5,
                    187.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a bar chart for the average of baseprice of each decor, and rank by the the average of baseprice in asc please.",
            "Please use a bar chart to show the average price of the rooms in a different decor, and display in ascending by the the average of baseprice.",
            "What is the average price of the rooms for each different decor? Show me a bar chart!, and sort y-axis in ascending order.",
            "Show the average price of the rooms in different decor using a bar chart, list in ascending by the the average of baseprice."
        ]
    },
    "1969@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY avg(basePrice) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY avg(basePrice) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "traditional",
                    "rustic",
                    "modern"
                ]
            ],
            "y_data": [
                [
                    187.5,
                    162.5,
                    112.5
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a bar chart for the average of baseprice of each decor, could you display Y-axis from high to low order?",
            "What is the average price of the rooms for each different decor? Show me a bar chart!, and sort total number in desc order.",
            "Show the average price of the rooms in different decor using a bar chart, and could you display Y-axis from high to low order?",
            "Please use a bar chart to show the average price of the rooms in a different decor, and display Y-axis in desc order."
        ]
    },
    "1970@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY decor ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY decor ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "min(basePrice)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    75,
                    150,
                    150
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the minimum of the rooms in different decor using a bar chart, and display by the X-axis from low to high please.",
            "What is the minimum price of the rooms for each different decor? Show me a bar chart!, rank by the X in ascending.",
            "Draw a bar chart of decor versus minimal baseprice, could you show in ascending by the names?",
            "Please use a bar chart to show the minimum price of the rooms in a different decor, rank decor from low to high order."
        ]
    },
    "1970@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY decor DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY decor DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "min(basePrice)",
            "x_data": [
                [
                    "traditional",
                    "rustic",
                    "modern"
                ]
            ],
            "y_data": [
                [
                    150,
                    150,
                    75
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the minimum of the rooms in different decor using a bar chart, and rank by the decor in descending.",
            "Please use a bar chart to show the minimum price of the rooms in a different decor, sort by the X-axis in desc please.",
            "What is the minimum price of the rooms for each different decor? Show me a bar chart!, I want to sort in descending by the bars.",
            "Draw a bar chart of decor versus minimal baseprice, and sort by the X-axis in desc please."
        ]
    },
    "1970@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY min(basePrice) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY min(basePrice) ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "min(basePrice)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    75,
                    150,
                    150
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Please use a bar chart to show the minimum price of the rooms in a different decor, I want to rank by the Y in asc.",
            "Show the minimum of the rooms in different decor using a bar chart, order by the y-axis from low to high.",
            "What is the minimum price of the rooms for each different decor? Show me a bar chart!, I want to list in ascending by the Y please.",
            "Draw a bar chart of decor versus minimal baseprice, and sort Y-axis from low to high order."
        ]
    },
    "1970@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY min(basePrice) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY min(basePrice) DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "min(basePrice)",
            "x_data": [
                [
                    "traditional",
                    "rustic",
                    "modern"
                ]
            ],
            "y_data": [
                [
                    150,
                    150,
                    75
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Show the minimum of the rooms in different decor using a bar chart, show by the total number in desc please.",
            "Draw a bar chart of decor versus minimal baseprice, order by the total number in descending.",
            "What is the minimum price of the rooms for each different decor? Show me a bar chart!, sort in descending by the minimal baseprice.",
            "Please use a bar chart to show the minimum price of the rooms in a different decor, and display by the y-axis from high to low please."
        ]
    },
    "1975@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor ORDER BY decor ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor ORDER BY decor ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "modern",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a bar chart on how many rooms have king beds? Report the number for each decor type, order by the X-axis in ascending please.",
            "How many rooms have king beds? Report the number for each decor type Plot them as bar chart, show X from low to high order.",
            "how many rooms have king beds? Report the number for each decor type, and sort from low to high by the decor.",
            "Find the number of rooms with king bed for each decor type, could you show in asc by the names?"
        ]
    },
    "1975@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor ORDER BY decor DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor ORDER BY decor DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "traditional",
                    "modern"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of rooms with king bed for each decor type, sort bar in desc order.",
            "Return a bar chart on how many rooms have king beds? Report the number for each decor type, could you list x-axis from high to low order?",
            "How many rooms have king beds? Report the number for each decor type Plot them as bar chart, list by the x-axis in descending.",
            "how many rooms have king beds? Report the number for each decor type, and could you list x-axis from high to low order?"
        ]
    },
    "1975@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "modern",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many rooms have king beds? Report the number for each decor type Plot them as bar chart, I want to sort by the Y from low to high please.",
            "how many rooms have king beds? Report the number for each decor type, and rank by the y axis in ascending.",
            "Find the number of rooms with king bed for each decor type, I want to order the total number in asc order.",
            "Return a bar chart on how many rooms have king beds? Report the number for each decor type, and rank Y-axis from low to high order please."
        ]
    },
    "1975@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "traditional",
                    "modern"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "How many rooms have king beds? Report the number for each decor type Plot them as bar chart, and I want to rank by the y-axis in desc.",
            "how many rooms have king beds? Report the number for each decor type, and could you order by the y-axis from high to low please?",
            "Return a bar chart on how many rooms have king beds? Report the number for each decor type, and rank from high to low by the the total number .",
            "Find the number of rooms with king bed for each decor type, I want to rank by the y-axis in desc."
        ]
    },
    "1977@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "Double",
                    "King",
                    "Queen"
                ]
            ],
            "y_data": [
                [
                    100,
                    181.25,
                    150
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return a bar chart on what is the average base price of different bed type? List bed type and average base price, order X from low to high order.",
            "For each bed type, find the average base price of different bed type Show bar chart, rank X in ascending order.",
            "what is the average base price of different bed type? List bed type and average base price, and rank in ascending by the X-axis.",
            "What is the average base price of rooms, for each bed type Plot them as bar chart, and display in asc by the bedType please.",
            "For each bed type, find the average room price Show bar chart, order X from low to high order.",
            "What is the average base price of different bed type? List bed type and average base price Plot them as bar chart, display in asc by the bedType please.",
            "Draw a bar chart for what is the average base price of rooms, for each bed type?, display x axis in asc order.",
            "Show me the average of baseprice by bedtype in a histogram, and could you sort in ascending by the bars?",
            "Return a bar chart on what is the average base price of rooms, for each bed type?, and rank X in ascending order."
        ]
    },
    "1977@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "Queen",
                    "King",
                    "Double"
                ]
            ],
            "y_data": [
                [
                    150,
                    181.25,
                    100
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each bed type, find the average room price Show bar chart, rank bar in desc order.",
            "Return a bar chart on what is the average base price of rooms, for each bed type?, I want to show bedType from high to low order.",
            "Return a bar chart on what is the average base price of different bed type? List bed type and average base price, sort by the bars from high to low.",
            "Draw a bar chart for what is the average base price of rooms, for each bed type?, I want to show bedType from high to low order.",
            "Show me the average of baseprice by bedtype in a histogram, and sort by the bars from high to low.",
            "what is the average base price of different bed type? List bed type and average base price, order by the bedType in desc.",
            "For each bed type, find the average base price of different bed type Show bar chart, and list in desc by the X-axis.",
            "What is the average base price of different bed type? List bed type and average base price Plot them as bar chart, I want to display by the bar from high to low.",
            "What is the average base price of rooms, for each bed type Plot them as bar chart, and order by the bedType in desc."
        ]
    },
    "1977@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY avg(basePrice) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY avg(basePrice) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "Double",
                    "Queen",
                    "King"
                ]
            ],
            "y_data": [
                [
                    100,
                    150,
                    181.25
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Draw a bar chart for what is the average base price of rooms, for each bed type?, sort by the total number in ascending.",
            "For each bed type, find the average base price of different bed type Show bar chart, display in asc by the y axis.",
            "What is the average base price of different bed type? List bed type and average base price Plot them as bar chart, display Y from low to high order.",
            "Return a bar chart on what is the average base price of different bed type? List bed type and average base price, and show in asc by the Y-axis.",
            "Return a bar chart on what is the average base price of rooms, for each bed type?, and display Y from low to high order.",
            "what is the average base price of different bed type? List bed type and average base price, could you list in asc by the Y?",
            "Show me the average of baseprice by bedtype in a histogram, and order in asc by the Y-axis.",
            "For each bed type, find the average room price Show bar chart, could you list by the Y-axis from low to high?",
            "What is the average base price of rooms, for each bed type Plot them as bar chart, and display total number in asc order."
        ]
    },
    "1977@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY avg(basePrice) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY avg(basePrice) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "King",
                    "Queen",
                    "Double"
                ]
            ],
            "y_data": [
                [
                    181.25,
                    150,
                    100
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each bed type, find the average room price Show bar chart, and show in desc by the total number.",
            "Return a bar chart on what is the average base price of rooms, for each bed type?, and sort from high to low by the mean baseprice.",
            "Return a bar chart on what is the average base price of different bed type? List bed type and average base price, I want to display in desc by the Y-axis please.",
            "For each bed type, find the average base price of different bed type Show bar chart, and show by the Y from high to low.",
            "What is the average base price of different bed type? List bed type and average base price Plot them as bar chart, and show in desc by the total number.",
            "what is the average base price of different bed type? List bed type and average base price, and I want to display in desc by the Y-axis please.",
            "Show me the average of baseprice by bedtype in a histogram, show y axis in descending order.",
            "Draw a bar chart for what is the average base price of rooms, for each bed type?, and list mean baseprice in descending order.",
            "What is the average base price of rooms, for each bed type Plot them as bar chart, sort by the total number in desc please."
        ]
    },
    "1979@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY decor ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY decor ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the number of rooms with price higher than 120 for different decor Show bar chart, list by the names in ascending.",
            "Give me a histogram for how many rooms cost more than 120, for each different decor?, order by the bar in ascending please.",
            "Visualize a bar chart for how many rooms cost more than 120, for each different decor?, and list by the names in ascending.",
            "How many rooms cost more than 120, for each different decor Plot them as bar chart, and rank by the decor from low to high."
        ]
    },
    "1979@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY decor DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY decor DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "traditional",
                    "rustic",
                    "modern"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for how many rooms cost more than 120, for each different decor?, show bar from high to low order please.",
            "How many rooms cost more than 120, for each different decor Plot them as bar chart, order in desc by the X.",
            "Find the number of rooms with price higher than 120 for different decor Show bar chart, list by the decor in desc.",
            "Give me a histogram for how many rooms cost more than 120, for each different decor?, list by the names in desc."
        ]
    },
    "1979@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Visualize a bar chart for how many rooms cost more than 120, for each different decor?, could you list Y-axis from low to high order?",
            "Find the number of rooms with price higher than 120 for different decor Show bar chart, and could you list Y-axis from low to high order?",
            "How many rooms cost more than 120, for each different decor Plot them as bar chart, and list by the Y from low to high.",
            "Give me a histogram for how many rooms cost more than 120, for each different decor?, could you sort y-axis from low to high order?"
        ]
    },
    "1979@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "traditional",
                    "rustic",
                    "modern"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Give me a histogram for how many rooms cost more than 120, for each different decor?, could you order from high to low by the Y-axis?",
            "Find the number of rooms with price higher than 120 for different decor Show bar chart, and list by the Y in descending.",
            "Visualize a bar chart for how many rooms cost more than 120, for each different decor?, and list by the Y in descending.",
            "How many rooms cost more than 120, for each different decor Plot them as bar chart, I want to rank by the Y-axis from high to low."
        ]
    },
    "1981@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY roomName ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY roomName ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "roomName",
            "y_name": "COUNT(roomName)",
            "x_data": [
                [
                    "Convoke and sanguine",
                    "Frugal not apropos",
                    "Harbinger but bequest",
                    "Thrift and accolade"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY roomName"
        },
        "nl_queries": [
            "A bar chart for what are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, rank from low to high by the roomName.",
            "Find the name of rooms booked by some customers whose first name contains ROY, and count them by a bar chart, and sort in ascending by the roomName.",
            "What are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, and rank x-axis in asc order please.",
            "Find the number of the name of rooms booked by some customers whose first name contains ROY, and sort in ascending by the bar.",
            "What are the name of rooms booked by customers whose first name has \"ROY\" in part, and count them by a bar chart, and rank x-axis in asc order please.",
            "A bar chart for finding the number of the name of rooms booked by some customers whose first name contains ROY, and list by the X-axis in ascending please."
        ]
    },
    "1981@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY roomName DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY roomName DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "roomName",
            "y_name": "COUNT(roomName)",
            "x_data": [
                [
                    "Thrift and accolade",
                    "Harbinger but bequest",
                    "Frugal not apropos",
                    "Convoke and sanguine"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY roomName"
        },
        "nl_queries": [
            "Find the number of the name of rooms booked by some customers whose first name contains ROY, rank X-axis in descending order.",
            "A bar chart for what are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, could you display from high to low by the names?",
            "What are the name of rooms booked by customers whose first name has \"ROY\" in part, and count them by a bar chart, and could you rank by the x axis from high to low?",
            "A bar chart for finding the number of the name of rooms booked by some customers whose first name contains ROY, display X-axis in descending order.",
            "What are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, could you display from high to low by the names?",
            "Find the name of rooms booked by some customers whose first name contains ROY, and count them by a bar chart, sort x-axis from high to low order."
        ]
    },
    "1981@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY COUNT(roomName) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY COUNT(roomName) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "roomName",
            "y_name": "COUNT(roomName)",
            "x_data": [
                [
                    "Convoke and sanguine",
                    "Thrift and accolade",
                    "Frugal not apropos",
                    "Harbinger but bequest"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY roomName"
        },
        "nl_queries": [
            "What are the name of rooms booked by customers whose first name has \"ROY\" in part, and count them by a bar chart, and I want to order Y-axis in ascending order.",
            "A bar chart for finding the number of the name of rooms booked by some customers whose first name contains ROY, order by the the number of roomname in asc.",
            "Find the name of rooms booked by some customers whose first name contains ROY, and count them by a bar chart, display Y-axis in ascending order.",
            "A bar chart for what are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, sort by the the number of roomname in ascending please.",
            "What are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, list y axis in ascending order.",
            "Find the number of the name of rooms booked by some customers whose first name contains ROY, and show Y in asc order."
        ]
    },
    "1981@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY COUNT(roomName) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY COUNT(roomName) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "roomName",
            "y_name": "COUNT(roomName)",
            "x_data": [
                [
                    "Harbinger but bequest",
                    "Frugal not apropos",
                    "Thrift and accolade",
                    "Convoke and sanguine"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY roomName"
        },
        "nl_queries": [
            "What are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, and I want to sort by the the number of roomname in desc please.",
            "A bar chart for what are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, list by the Y-axis in descending.",
            "A bar chart for finding the number of the name of rooms booked by some customers whose first name contains ROY, and rank from high to low by the y-axis.",
            "What are the name of rooms booked by customers whose first name has \"ROY\" in part, and count them by a bar chart, I want to show total number from high to low order.",
            "Find the name of rooms booked by some customers whose first name contains ROY, and count them by a bar chart, list by the Y-axis in descending.",
            "Find the number of the name of rooms booked by some customers whose first name contains ROY, and I want to sort by the the number of roomname in desc please."
        ]
    },
    "1983@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = \"traditional\" GROUP BY bedType ORDER BY bedType ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = \"traditional\" GROUP BY bedType ORDER BY bedType ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "COUNT(bedType)",
            "x_data": [
                [
                    "King",
                    "Queen"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY bedType"
        },
        "nl_queries": [
            "Bar chart, X is bed type and the Y-axis is their appearance frequency, show by the names in ascending.",
            "Compare the frequency of each type of bed by a bar chart, list in ascending by the x axis."
        ]
    },
    "1983@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = \"traditional\" GROUP BY bedType ORDER BY bedType DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = \"traditional\" GROUP BY bedType ORDER BY bedType DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "COUNT(bedType)",
            "x_data": [
                [
                    "Queen",
                    "King"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY bedType"
        },
        "nl_queries": [
            "Bar chart, X is bed type and the Y-axis is their appearance frequency, list in desc by the x axis.",
            "Compare the frequency of each type of bed by a bar chart, and list bedType from high to low order."
        ]
    },
    "1983@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = \"traditional\" GROUP BY bedType ORDER BY COUNT(bedType) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = \"traditional\" GROUP BY bedType ORDER BY COUNT(bedType) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "COUNT(bedType)",
            "x_data": [
                [
                    "Queen",
                    "King"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY bedType"
        },
        "nl_queries": [
            "Compare the frequency of each type of bed by a bar chart, and display by the y-axis from low to high.",
            "Bar chart, X is bed type and the Y-axis is their appearance frequency, and could you sort by the Y in asc please?"
        ]
    },
    "1983@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = \"traditional\" GROUP BY bedType ORDER BY COUNT(bedType) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = \"traditional\" GROUP BY bedType ORDER BY COUNT(bedType) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "COUNT(bedType)",
            "x_data": [
                [
                    "King",
                    "Queen"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY bedType"
        },
        "nl_queries": [
            "Compare the frequency of each type of bed by a bar chart, and I want to list by the y-axis in desc.",
            "Bar chart, X is bed type and the Y-axis is their appearance frequency, I want to list by the y-axis in desc."
        ]
    },
    "1984@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY roomName ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY roomName ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "roomName",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Abscond or bolster",
                    "Convoke and sanguine",
                    "Frugal not apropos",
                    "Harbinger but bequest",
                    "Immutable before decorum",
                    "Interim but salutary",
                    "Mendicant with cryptic",
                    "Recluse and defiance",
                    "Riddle to exculpate",
                    "Thrift and accolade"
                ]
            ],
            "y_data": [
                [
                    51,
                    69,
                    66,
                    60,
                    63,
                    59,
                    56,
                    62,
                    55,
                    59
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each room, find its name and the number of times reservations were made for it, you can use the data to draw a bar chart, list by the roomName from low to high.",
            "Return the name of rooms and the number of reservations made for each of the rooms to draw a bar chart, and order bars in asc order."
        ]
    },
    "1984@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY roomName DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY roomName DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "roomName",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Thrift and accolade",
                    "Riddle to exculpate",
                    "Recluse and defiance",
                    "Mendicant with cryptic",
                    "Interim but salutary",
                    "Immutable before decorum",
                    "Harbinger but bequest",
                    "Frugal not apropos",
                    "Convoke and sanguine",
                    "Abscond or bolster"
                ]
            ],
            "y_data": [
                [
                    59,
                    55,
                    62,
                    56,
                    59,
                    63,
                    60,
                    66,
                    69,
                    51
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return the name of rooms and the number of reservations made for each of the rooms to draw a bar chart, and rank in descending by the X-axis.",
            "For each room, find its name and the number of times reservations were made for it, you can use the data to draw a bar chart, could you sort by the bar in desc?"
        ]
    },
    "1984@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "roomName",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Abscond or bolster",
                    "Riddle to exculpate",
                    "Mendicant with cryptic",
                    "Interim but salutary",
                    "Thrift and accolade",
                    "Harbinger but bequest",
                    "Recluse and defiance",
                    "Immutable before decorum",
                    "Frugal not apropos",
                    "Convoke and sanguine"
                ]
            ],
            "y_data": [
                [
                    51,
                    55,
                    56,
                    59,
                    59,
                    60,
                    62,
                    63,
                    66,
                    69
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return the name of rooms and the number of reservations made for each of the rooms to draw a bar chart, display from low to high by the Y-axis.",
            "For each room, find its name and the number of times reservations were made for it, you can use the data to draw a bar chart, display from low to high by the total number."
        ]
    },
    "1984@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "roomName",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Convoke and sanguine",
                    "Frugal not apropos",
                    "Immutable before decorum",
                    "Recluse and defiance",
                    "Harbinger but bequest",
                    "Thrift and accolade",
                    "Interim but salutary",
                    "Mendicant with cryptic",
                    "Riddle to exculpate",
                    "Abscond or bolster"
                ]
            ],
            "y_data": [
                [
                    69,
                    66,
                    63,
                    62,
                    60,
                    59,
                    59,
                    56,
                    55,
                    51
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return the name of rooms and the number of reservations made for each of the rooms to draw a bar chart, list by the y axis in descending please.",
            "For each room, find its name and the number of times reservations were made for it, you can use the data to draw a bar chart, could you display by the the total number in desc please?"
        ]
    },
    "1985@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY Room ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY Room ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Room",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AOB",
                    "CAS",
                    "FNA",
                    "HBB",
                    "IBD",
                    "IBS",
                    "MWC",
                    "RND",
                    "RTE",
                    "TAA"
                ]
            ],
            "y_data": [
                [
                    51,
                    69,
                    66,
                    60,
                    63,
                    59,
                    56,
                    62,
                    55,
                    59
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each room, find its the number of times reservations were made for it Visualize them using a bar chart, I want to sort by the X in asc please.",
            "Return the room and number of reservations made for each of the rooms to draw a bar chart, order by the x axis in asc."
        ]
    },
    "1985@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY Room DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY Room DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Room",
            "y_name": "count(*)",
            "x_data": [
                [
                    "TAA",
                    "RTE",
                    "RND",
                    "MWC",
                    "IBS",
                    "IBD",
                    "HBB",
                    "FNA",
                    "CAS",
                    "AOB"
                ]
            ],
            "y_data": [
                [
                    59,
                    55,
                    62,
                    56,
                    59,
                    63,
                    60,
                    66,
                    69,
                    51
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return the room and number of reservations made for each of the rooms to draw a bar chart, display X-axis in desc order.",
            "For each room, find its the number of times reservations were made for it Visualize them using a bar chart, and rank names from high to low order."
        ]
    },
    "1985@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Room",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AOB",
                    "RTE",
                    "MWC",
                    "IBS",
                    "TAA",
                    "HBB",
                    "RND",
                    "IBD",
                    "FNA",
                    "CAS"
                ]
            ],
            "y_data": [
                [
                    51,
                    55,
                    56,
                    59,
                    59,
                    60,
                    62,
                    63,
                    66,
                    69
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "For each room, find its the number of times reservations were made for it Visualize them using a bar chart, and display by the the total number from low to high.",
            "Return the room and number of reservations made for each of the rooms to draw a bar chart, I want to order in asc by the y axis."
        ]
    },
    "1985@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Room",
            "y_name": "count(*)",
            "x_data": [
                [
                    "CAS",
                    "FNA",
                    "IBD",
                    "RND",
                    "HBB",
                    "TAA",
                    "IBS",
                    "MWC",
                    "RTE",
                    "AOB"
                ]
            ],
            "y_data": [
                [
                    69,
                    66,
                    63,
                    62,
                    60,
                    59,
                    59,
                    56,
                    55,
                    51
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Return the room and number of reservations made for each of the rooms to draw a bar chart, I want to sort Y-axis in descending order.",
            "For each room, find its the number of times reservations were made for it Visualize them using a bar chart, display from high to low by the the total number ."
        ]
    },
    "3066@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "partitionid",
            "x_data": [
                [
                    "Black Widow\n",
                    "Tyler Swift"
                ]
            ],
            "y_data": [
                [
                    23,
                    10
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and partition id for users who tweeted less than twice Show bar chart, sort name in asc order."
        ]
    },
    "3066@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "partitionid",
            "x_data": [
                [
                    "Tyler Swift",
                    "Black Widow\n"
                ]
            ],
            "y_data": [
                [
                    10,
                    23
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and partition id for users who tweeted less than twice Show bar chart, could you show by the name from high to low?"
        ]
    },
    "3066@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY partitionid ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY partitionid ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "partitionid",
            "x_data": [
                [
                    "Tyler Swift",
                    "Black Widow\n"
                ]
            ],
            "y_data": [
                [
                    10,
                    23
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and partition id for users who tweeted less than twice Show bar chart, and could you sort by the total number in ascending?"
        ]
    },
    "3066@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY partitionid DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY partitionid DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "partitionid",
            "x_data": [
                [
                    "Black Widow\n",
                    "Tyler Swift"
                ]
            ],
            "y_data": [
                [
                    23,
                    10
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name and partition id for users who tweeted less than twice Show bar chart, rank by the y-axis in descending."
        ]
    },
    "3069@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Black Widow\n",
                    "Celine Dion",
                    "Iron Man",
                    "Susan",
                    "Tyler Swift"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name of each user and number of tweets tweeted by each of them Visualize by bar chart, could you order X-axis in asc order?"
        ]
    },
    "3069@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Tyler Swift",
                    "Susan",
                    "Iron Man",
                    "Celine Dion",
                    "Black Widow\n"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name of each user and number of tweets tweeted by each of them Visualize by bar chart, and rank in descending by the x-axis."
        ]
    },
    "3069@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Black Widow\n",
                    "Tyler Swift",
                    "Celine Dion",
                    "Iron Man",
                    "Susan"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name of each user and number of tweets tweeted by each of them Visualize by bar chart, and order Y-axis from low to high order please."
        ]
    },
    "3069@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Susan",
                    "Iron Man",
                    "Celine Dion",
                    "Tyler Swift",
                    "Black Widow\n"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": ""
        },
        "nl_queries": [
            "Find the name of each user and number of tweets tweeted by each of them Visualize by bar chart, and I want to list by the total number in desc."
        ]
    }
}